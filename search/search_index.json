{"config":{"lang":["en","ja"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u4e00\u4e2a\u901a\u8fc7\u76d7\u642c\u522b\u4eba\u7f51\u7ad9\uff0c\u6280\u672f\u6587\u6863\u548c\u535a\u5ba2\u5185\u5bb9\uff0c\u9760\u590d\u5236\u7c98\u8d34CHATGPT\u7684\u9648\u8bcd\u6ee5\u8c03\uff0c\u6ca1\u6709\u81ea\u6211\u521b\u65b0\u7684\u5783\u573e\u56de\u6536\u7ad9\u3002","text":"<p>\u8bf7\u8fdc\u79bb</p>"},{"location":"about/","title":"\u5173\u4e8e\uff1a","text":"<p>\u4e00\u4e2a\u5c0f\u867e\u7c73</p>"},{"location":"blog/","title":"\u597d\u7684\u7f51\u5740\u6536\u85cf\uff1a","text":"<p>\u82cf\u5251\u6797\u535a\u5ba2</p> <p>\u4e00\u4e2a\u5bfc\u822a\u535a\u6587\u94fe\u63a5</p>"},{"location":"blog/SQL%20%E6%8A%80%E5%B7%A7%EF%BC%9A%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96%E4%B8%AD%E4%BD%8D%E6%95%B0/","title":"SQL\u6c42\u4e2d\u4f4d\u6570","text":"<p>\u6709\u4e24\u79cd\u65b9\u6cd5</p> <p>\u65b9\u6cd5\u4e00\uff1a\u4f7f\u7528 <code>PERCENTILE_CONT</code> \u51fd\u6570</p> <pre><code>SELECT \n    PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY value) AS median\nFROM \n    table_name;\n</code></pre> <p>\u65b9\u6cd5\u4e8c\uff1a\u4f7f\u7528\u884c\u53f7\u548c\u7a97\u53e3\u51fd\u6570</p> <pre><code>SELECT AVG(value) AS median\nFROM (SELECT\n        value,\n        ROW_NUMBER() OVER (ORDER BY value) as rn,   \n        COUNT(*) OVER () as cnt\n    FROM \n        table_name)\nWHERE rn IN (FLOOR((cnt + 1)/2), CEILING((cnt + 1)/2));\n</code></pre>"},{"location":"blog/XGBosst%E5%8F%82%E6%95%B0%E4%BB%8B%E7%BB%8D/","title":"XGboost","text":"<p>\u53c2\u8003\u7f51\u7ad9:</p> <p>\u901a\u4fd7\u7406\u89e3kaggle\u6bd4\u8d5b\u5927\u6740\u5668xgboost Xgboost\u8fd1\u4f3c\u5206\u4f4d\u6570\u7b97\u6cd5</p> <pre><code>import xgboost as xgb\nfrom xgboost import plot_importance\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.datasets import load_boston\nfrom sklearn.metrics import mean_squared_error\n\n# \u5bfc\u5165\u6570\u636e\u96c6\nboston = load_boston()\nX ,y = boston.data,boston.target\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=0)\n\nmodel = xgb.XGBRegressor(max_depth=3,          # \u6bcf\u4e00\u68f5\u6811\u6700\u5927\u6df1\u5ea6\uff0c\u9ed8\u8ba46\uff1b\n                        learning_rate=0.1,      # \u5b66\u4e60\u7387\uff0c\u6bcf\u68f5\u6811\u7684\u9884\u6d4b\u7ed3\u679c\u90fd\u8981\u4e58\u4ee5\u8fd9\u4e2a\u5b66\u4e60\u7387\uff0c\u9ed8\u8ba40.3\uff1b\n                        n_estimators=100,        # \u4f7f\u7528\u591a\u5c11\u68f5\u6811\u6765\u62df\u5408\uff0c\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u591a\u5c11\u6b21\u8fed\u4ee3\u3002\u9ed8\u8ba4100\uff1b\n                        objective='reg:linear',   # \u6b64\u9ed8\u8ba4\u53c2\u6570\u4e0e XGBClassifier \u4e0d\u540c\n                        booster='gbtree',         # \u6709\u4e24\u79cd\u6a21\u578b\u53ef\u4ee5\u9009\u62e9gbtree\u548cgblinear\u3002gbtree\u4f7f\u7528\u57fa\u4e8e\u6811\u7684\u6a21\u578b\u8fdb\u884c\u63d0\u5347\u8ba1\u7b97\uff0cgblinear\u4f7f\u7528\u7ebf\u6027\u6a21\u578b\u8fdb\u884c\u63d0\u5347\u8ba1\u7b97\u3002\u9ed8\u8ba4\u4e3agbtree\n                        gamma=0,                 # \u53f6\u8282\u70b9\u4e0a\u8fdb\u884c\u8fdb\u4e00\u6b65\u5206\u88c2\u6240\u9700\u7684\u6700\u5c0f\"\u635f\u5931\u51cf\u5c11\"\u3002\u9ed8\u8ba40\uff1b\n                        min_child_weight=1,      # \u53ef\u4ee5\u7406\u89e3\u4e3a\u53f6\u5b50\u8282\u70b9\u6700\u5c0f\u6837\u672c\u6570\uff0c\u9ed8\u8ba41\uff1b\n                        subsample=1,              # \u8bad\u7ec3\u96c6\u62bd\u6837\u6bd4\u4f8b\uff0c\u6bcf\u6b21\u62df\u5408\u4e00\u68f5\u6811\u4e4b\u524d\uff0c\u90fd\u4f1a\u8fdb\u884c\u8be5\u62bd\u6837\u6b65\u9aa4\u3002\u9ed8\u8ba41\uff0c\u53d6\u503c\u8303\u56f4(0, 1]\n                        colsample_bytree=1,       # \u6bcf\u6b21\u62df\u5408\u4e00\u68f5\u6811\u4e4b\u524d\uff0c\u51b3\u5b9a\u4f7f\u7528\u591a\u5c11\u4e2a\u7279\u5f81\uff0c\u53c2\u6570\u9ed8\u8ba41\uff0c\u53d6\u503c\u8303\u56f4(0, 1]\u3002\n                        reg_alpha=0,             # \u9ed8\u8ba4\u4e3a0\uff0c\u63a7\u5236\u6a21\u578b\u590d\u6742\u7a0b\u5ea6\u7684\u6743\u91cd\u503c\u7684 L1 \u6b63\u5219\u9879\u53c2\u6570\uff0c\u53c2\u6570\u503c\u8d8a\u5927\uff0c\u6a21\u578b\u8d8a\u4e0d\u5bb9\u6613\u8fc7\u62df\u5408\u3002\n                        reg_lambda=1,            # \u9ed8\u8ba4\u4e3a1\uff0c\u63a7\u5236\u6a21\u578b\u590d\u6742\u5ea6\u7684\u6743\u91cd\u503c\u7684L2\u6b63\u5219\u5316\u9879\u53c2\u6570\uff0c\u53c2\u6570\u8d8a\u5927\uff0c\u6a21\u578b\u8d8a\u4e0d\u5bb9\u6613\u8fc7\u62df\u5408\u3002\n                        random_state=0)           # \u968f\u673a\u79cd\u5b50\nmodel.fit(X_train,y_train, eval_set=[(X_train, y_train), (X_test, y_test)], eval_metric='rmse', verbose=50)\n\n# \u5bf9\u6d4b\u8bd5\u96c6\u8fdb\u884c\u9884\u6d4b\nans = model.predict(X_test)\nmse = mean_squared_error(y_test,ans)\nprint('mse:', mse)\n\n# \u663e\u793a\u91cd\u8981\u7279\u5f81\nplot_importance(model)\nplt.show()\n</code></pre>"},{"location":"blog/baidu_pa/","title":"Selenium \u5e93\u548c\u767e\u5ea6","text":""},{"location":"blog/baidu_pa/#selenium","title":"\u8bd5\u7740\u7528selenium\u5e93\u5199\u4e2a\u6765\u6a21\u62df\u5728\u767e\u5ea6\u4e2d\u641c\u7d22\u7684\u60c5\u51b5\uff0c\u5982\u641c\u7d22\u201c\u4eba\u5de5\u667a\u80fd\u201d\u5e76\u722c\u53d6\u8fd4\u56de\u7684\u7b2c\u4e00\u9875\u7f51\u9875\u7684\u5927\u81f4\u4fe1\u606f\uff0c\u5982\u94fe\u63a5\u7f51\u5740\uff0c\u6807\u9898\uff0c\u65e5\u671f\u7b49\u5185\u5bb9","text":"<p>\u4e0b\u9762\u662f\u4e00\u4e2a\u4f7f\u7528 Selenium \u5e93\u6a21\u62df\u5728\u767e\u5ea6\u4e2d\u641c\u7d22\u201c\u4eba\u5de5\u667a\u80fd\u201d\u7684\u793a\u4f8b\u4ee3\u7801\uff0c\u5e76\u63d0\u53d6\u8fd4\u56de\u7b2c\u4e00\u9875\u7684\u641c\u7d22\u7ed3\u679c\u4fe1\u606f\uff08\u5982\u94fe\u63a5\u7f51\u5740\u3001\u6807\u9898\u7b49\uff09\u3002\u786e\u4fdd\u4f60\u5df2\u7ecf\u5b89\u88c5\u4e86 Selenium \u548c ChromeDriver\u3002</p>"},{"location":"blog/baidu_pa/#_1","title":"\u5b89\u88c5\u5fc5\u8981\u5e93","text":"<p>\u9996\u5148\uff0c\u786e\u4fdd\u4f60\u5df2\u5b89\u88c5 <code>selenium</code> \u548c <code>requests</code>\uff08\u7528\u4e8e\u540e\u7eed\u5904\u7406\uff09\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88c5\uff1a <pre><code>pip install selenium\n</code></pre></p>"},{"location":"blog/baidu_pa/#_2","title":"\u793a\u4f8b\u4ee3\u7801","text":"<p>\u4ee5\u4e0b\u662f\u4e00\u4e2a\u793a\u4f8b Python \u811a\u672c\uff1a</p> <pre><code>from selenium import webdriver\nfrom selenium.webdriver.common.by import By\nimport time\n\ndriver = webdriver.Chrome()\n\ntry:\n    # \u6253\u5f00\u767e\u5ea6\n    driver.get(\"https://www.baidu.com\")\n\n    # \u67e5\u627e\u641c\u7d22\u6846\u5e76\u8f93\u5165\u641c\u7d22\u5185\u5bb9\n    search_box = driver.find_element(By.NAME, \"wd\")\n    search_box.send_keys(\"\u51af\u5174\u4e1c\")\n\n    # \u63d0\u4ea4\u641c\u7d22\n    search_box.submit()\n\n    # \u7b49\u5f85\u641c\u7d22\u7ed3\u679c\u52a0\u8f7d\n    time.sleep(2)  # \u53ef\u4ee5\u6839\u636e\u7f51\u7edc\u60c5\u51b5\u8c03\u6574\u7b49\u5f85\u65f6\u95f4\n\n    # \u83b7\u53d6\u641c\u7d22\u7ed3\u679c\n    results = driver.find_elements(By.CSS_SELECTOR, '.result.c-container')\n\n    # \u63d0\u53d6\u4fe1\u606f\n    for result in results:\n        title = result.find_element(By.TAG_NAME, \"h3\").text\n        link = result.find_element(By.TAG_NAME, \"a\").get_attribute(\"href\")\n\n        # \u6709\u4e9b\u7ed3\u679c\u53ef\u80fd\u6ca1\u6709\u65e5\u671f\u4fe1\u606f\uff0c\u53ef\u4ee5\u9009\u62e9\u6027\u63d0\u53d6\n        try:\n            platform = result.find_element(By.CLASS_NAME, \"c-color-gray\").text\n        except:\n            platform = \"\u65e0\u5e73\u53f0\u4fe1\u606f\"\n\n        try:\n            intro = result.find_element(By.CLASS_NAME, \"content-right_2s-H4\").text\n        except:\n            intro = \"\u65e0\u7b80\u4ecb\u4fe1\u606f\"\n\n        try:\n            date = result.find_element(By.CLASS_NAME, \"c-color-gray2\").text\n        except:\n            date = \"\u65e0\u65e5\u671f\u4fe1\u606f\"\n\n        print(f\"\u6807\u9898: {title}\")\n        print(f\"\u94fe\u63a5: {link}\")\n        print(f\"\u7b80\u4ecb: {intro}\")\n        print(f\"\u5e73\u53f0: {platform}\")\n        print(f\"\u65e5\u671f: {date}\")\n        print(\"-\" * 40)\n\nfinally:\n    # \u5173\u95ed\u6d4f\u89c8\u5668\n    driver.quit()\n</code></pre> <p>\u7ed3\u679c: <pre><code>\u6807\u9898: \u51af\u5174\u4e1c\u4e2a\u4eba\u7b80\u4ecb(\u72ec\u7acb\u975e\u6267\u884c\u8463\u4e8b 1977)_\u4e1c\u65b9\u8bc1\u5238\u8463\u4e8b\u4f1a\u6210\u5458...\n\u94fe\u63a5: http://www.baidu.com/link?url=vXcL4q8NjFAFtz1pm2hNxZiIN01cDEaZUXY_9Ae-Rz1ScAbdK48a1inuR6rBAThgcmgwlyMguyh9Lbn8ITmI8FwvwrziRpIeWpQmIbGzmgG\n\u7b80\u4ecb: \u65e0\u7b80\u4ecb\u4fe1\u606f\n\u5e73\u53f0: \u524d\u77bb\u773c\n\u65e5\u671f: 2024\u5e749\u67083\u65e5\n----------------------------------------\n\u6807\u9898: \u51af\u5174\u4e1c - \u4e1c\u65b9\u8bc1\u5238\u80a1\u4efd\u6709\u9650\u516c\u53f8 - \u6cd5\u5b9a\u4ee3\u8868\u4eba/\u9ad8\u7ba1/\u80a1\u4e1c -...\n\u94fe\u63a5: http://www.baidu.com/link?url=wrFm2hSZMvXDWyDozN27AwLklhjkqLQ69TOlhhJMa25v115BY9AS1iyH34FZZQEaxCrdzsZaAv5bXsiIchbcn7l9PvKOoOYcpUn5QBABjKbax48rjSg6nMyxTWw9rFdK\n\u7b80\u4ecb: \u4e00\u3001\u51af\u5174\u4e1c\u62c5\u4efb\u804c\u52a1:\u57284\u5bb6\u4f01\u4e1a\u62c5\u4efb\u9ad8\u7ba1,\u5305\u62ec\u62c5\u4efb\u4e1c\u65b9\u8bc1\u5238\u80a1\u4efd\u6709\u9650\u516c\u53f8\u8463\u4e8b,\u5317\u4eac\u4e1c\u65b9\u8fc8\u8fbe\u9ad8\u79d1\u6280\u6709\u9650\u516c\u53f8\u8463\u4e8b;\u4e8c\u3001\u51af\u5174\u4e1c\u7684\u5546\u4e1a\u5408\u4f5c\u4f19\u4f34:\u57fa\u4e8e\u516c\u5f00\u6570\u636e\u5c55\u793a,\u51af\u5174\u4e1c\u76ee\u524d\u670910\u4e2a\u5546\u4e1a\u5408\u4f5c...\n\u5e73\u53f0: \u7231\u4f01\u67e5\n\u65e5\u671f: 2024\u5e749\u670822\u65e5\n----------------------------------------\n\u6807\u9898: \u4e0a\u6d77\u8d22\u7ecf\u5927\u5b66\u51af\u5174\u4e1c\u9662\u957f\u4e00\u884c\u6765\u6211\u6821\u4ea4\u6d41\n\u94fe\u63a5: http://www.baidu.com/link?url=GZK9ES8gsPwdaob8RliShjsEzo1Hf2jXHC91-V9jFzr7JLWT-NYsR-r7-bGDNwpeQwoJkBjK0HAIUqXr2gVWJq\n\u7b80\u4ecb: \u4e0a\u6d77\u8d22\u7ecf\u5927\u5b66\u51af\u5174\u4e1c\u9662\u957f\u4e00\u884c\u6765\u6211\u6821\u4ea4\u6d41 \u4e3a\u8fdb\u4e00\u6b65\u63a8\u52a8\u843d\u5b9e\u6559\u80b2\u90e8\u5173\u4e8e\u505a\u597d\u5bf9\u53e3\u652f\u63f4\u514b\u62c9\u739b\u4f9d\u6821\u533a\u5efa\u8bbe\u5b66\u79d1\u5e26\u5934\u4eba\u7684\u5de5\u4f5c\u90e8\u7f72,\u6821\u533a\u7edf\u8ba1\u4e13\u4e1a\u5b66\u79d1\u5e26\u5934\u4eba\u3001\u4e0a\u6d77\u8d22\u7ecf\u5927\u5b66\u7edf\u8ba1\u4e0e\u7ba1\u7406\u5b66\u9662\u9662\u957f\u51af...\n\u5e73\u53f0: \u4e2d\u56fd\u77f3\u6cb9\u5927\u5b66\n\u65e5\u671f: 2024\u5e747\u67083\u65e5\n----------------------------------------\n\u6807\u9898: \u4e0a\u6d77\u8d22\u7ecf\u5927\u5b66\u51af\u5174\u4e1c\u6559\u6388:Deep Over-parameterized Smoothi...\n\u94fe\u63a5: http://www.baidu.com/link?url=wrFm2hSZMvXDWyDozN27At7LnMUJNXYhtAKzhRO3gd6Jg-wpHe_mmiQ9a5eq1i9cCKOvgtKI70qzzHpSKLL89_\n\u7b80\u4ecb: \u65e0\u7b80\u4ecb\u4fe1\u606f\n\u5e73\u53f0: \u897f\u5357\u8d22\u7ecf\u5927\u5b66\u7edf\u8ba1\u7814\u7a76\u4e2d\u5fc3\n\u65e5\u671f: \u65e0\u65e5\u671f\u4fe1\u606f\n----------------------------------------\n\u6807\u9898: \u51af\u5174\u4e1c-\u897f\u5b89\u7535\u5b50\u79d1\u6280\u5927\u5b66\u676d\u5dde\u7814\u7a76\u9662\n\u94fe\u63a5: http://www.baidu.com/link?url=wrFm2hSZMvXDWyDozN27AynNYCUGffx-_kGscvWtUc7tHa0skObo9G3c7_0jYljyHAcnW8fakf3wxqYCjXeWJa\n\u7b80\u4ecb: \u65e0\u7b80\u4ecb\u4fe1\u606f\n\u5e73\u53f0: \u897f\u5b89\u7535\u5b50\u79d1\u6280\u5927\u5b66\u676d\u5dde\u7814\u7a76\u9662\n\u65e5\u671f: 2023\u5e748\u67089\u65e5\n----------------------------------------\n\u6807\u9898: \u4e0a\u6d77\u8d22\u7ecf\u5927\u5b66\u6821\u53cb\u4f1a\u7edf\u8ba1\u4e0e\u7ba1\u7406\u5b66\u9662\u5206\u4f1a\u7b2c\u4e8c\u6b21\u4f1a\u5458\u4ee3\u8868\u5927\u4f1a...\n\u94fe\u63a5: http://www.baidu.com/link?url=GZK9ES8gsPwdaob8RliShbZl9EHoi8kM54XV8W7xFRnOnU_NupRPcjTFoslicLIAEUqNMgG7ozel26A3FlCFSSPyvnSlmbqKfmVNIw5o-zcDR2WR_LtzbWYn68ByNPCJiHrfJXSeC4nlq7mNiy1oimb08nN5hTIv2xmhkNMro1GUqxyHjzgHzyJ2tKZmWIlGz92vvnB7uCVkybUqEJy_cDAFJo4doU7SLMw4jXoarivZNTN4lTlne-ZbaVx-fvvJ9b7MaChzpMsUVUXPbCqV0K\n\u7b80\u4ecb: \u968f\u540e,\u51af\u5174\u4e1c\u9662\u957f\u4e3a\u91d1\u6587\u5fe0\u6821\u53cb\u3001\u674e\u8fc5\u96f7\u6821\u53cb\u9881\u53d1\u201c\u4e0a\u6d77\u8d22\u7ecf\u5927\u5b66\u5e94\u7528\u7edf\u8ba1\u4e13\u4e1a\u7855\u58eb\u6559\u5b66\u6307\u5bfc\u59d4\u5458\u4f1a\u6770\u51fa\u8d21\u732e\u5956\u201d,\u611f\u8c22\u4ed6\u4eec\u79ef\u6781\u53c2\u4e0e\u3001\u5efa\u8a00\u732e\u7b56,\u4e3a\u5b66\u9662\u5e94\u7528\u7edf\u8ba1\u4e13\u4e1a\u7855\u58eb\u6559\u80b2\u7684\u6539\u9769\u53d1\u5c55\u548c\u4eba...\n\u5e73\u53f0: \u4e0a\u6d77\u8d22\u7ecf\u5927\u5b66\u6821\u53cb\u4f1a\n\u65e5\u671f: 2024\u5e741\u670815\u65e5\n----------------------------------------\n\u6807\u9898: \u3010\u5927\u5343\u8bb2\u5802\u7cfb\u5217\u8bb2\u5ea7\u4e4b\u56db\u5341\u4e5d\u3011\u51af\u5174\u4e1c\u4f5c\u201c\u4e0d\u53ef\u5ffd\u7565\u7f3a\u5931\u6570\u636e...\n\u94fe\u63a5: http://www.baidu.com/link?url=SfdEycbVa_52Hf492_KqtBQDFnm6ulmZYQ2GTFe5W94C_cNycNM7g7RWYzcFZEPT3VyMIJZIf31oinEydvNioqLurdFlfZwZS0MVTBsWl4S\n\u7b80\u4ecb: \u65e0\u7b80\u4ecb\u4fe1\u606f\n\u5e73\u53f0: \u5b89\u5fbd\u8d22\u7ecf\u5927\u5b66\u7edf\u8ba1\u4e0e\u5e94\u7528\u6570\u5b66\u5b66\u9662\n\u65e5\u671f: 2023\u5e749\u670822\u65e5\n----------------------------------------\n\u6807\u9898: \u7edf\u8ba1\u4e0e\u6570\u636e\u79d1\u5b66\u7cfb\u7cfb\u5217\u5b66\u672f\u62a5\u544a\u4e4b\u4e09\u767e\u4e03\u5341\u516b\n\u94fe\u63a5: http://www.baidu.com/link?url=PLTaJo7KUqvAy2zMG83MeqqL0GU0jiPawX79F7Fj3OUwd7YxDjGoEBbipp-reha0Kw-9hgjgyayvSRNtDQCA9gL3m6yvtPVXxRgn3u9z7li\n\u7b80\u4ecb: \u62a5\u544a\u4eba:\u51af\u5174\u4e1c \u6559\u6388 \u4e0a\u6d77\u8d22\u7ecf\u5927\u5b66 \u7b80\u4ecb:\u51af\u5174\u4e1c\u6559\u6388,\u4e0a\u6d77\u8d22\u7ecf\u5927\u5b66\u7edf\u8ba1\u4e0e\u7ba1\u7406\u5b66\u9662\u9662\u957f\u3001\u6559\u6388\u3001\u535a\u58eb\u751f\u5bfc\u5e08\u3002\u51af\u5174\u4e1c\u6559\u6388\u535a\u58eb\u6bd5\u4e1a\u4e8e\u7f8e\u56fd\u4f0a\u5229\u8bfa\u4f0a\u5927\u5b66\u9999\u69df\u5206\u6821,\u7814\u7a76\u9886\u57df\u5305\u542b:\u5206\u4f4d\u6570\u56de\u5f52\u7406...\n\u5e73\u53f0: \u590d\u65e6\u5927\u5b66\n\u65e5\u671f: 2024\u5e744\u670826\u65e5\n----------------------------------------\n</code></pre></p>"},{"location":"blog/baidu_pa/#_3","title":"\u4ee3\u7801\u8bf4\u660e","text":"<ol> <li>\u5bfc\u5165\u5e93\uff1a\u5bfc\u5165\u6240\u9700\u7684\u5e93\uff0c\u5305\u62ec Selenium \u548c\u65f6\u95f4\u5904\u7406\u3002</li> <li>\u8bbe\u7f6e ChromeDriver \u8def\u5f84\uff1a\u786e\u4fdd\u4f60\u5c06 <code>driver_path</code> \u66ff\u6362\u4e3a\u4f60\u672c\u5730\u7684 ChromeDriver \u7684\u5b9e\u9645\u8def\u5f84\u3002</li> <li>\u6253\u5f00\u767e\u5ea6\uff1a\u4f7f\u7528 <code>get</code> \u65b9\u6cd5\u6253\u5f00\u767e\u5ea6\u9996\u9875\u3002</li> <li>\u8f93\u5165\u641c\u7d22\u5185\u5bb9\uff1a\u627e\u5230\u641c\u7d22\u6846\uff0c\u8f93\u5165\u201c\u4eba\u5de5\u667a\u80fd\u201d\uff0c\u5e76\u63d0\u4ea4\u641c\u7d22\u3002</li> <li>\u7b49\u5f85\u52a0\u8f7d\uff1a\u4f7f\u7528 <code>time.sleep()</code> \u7b49\u5f85\u9875\u9762\u52a0\u8f7d\uff0c\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u8c03\u6574\u7b49\u5f85\u65f6\u95f4\u3002</li> <li>\u63d0\u53d6\u641c\u7d22\u7ed3\u679c\uff1a\u4f7f\u7528 CSS \u9009\u62e9\u5668\u83b7\u53d6\u6240\u6709\u641c\u7d22\u7ed3\u679c\uff0c\u5e76\u63d0\u53d6\u6807\u9898\u3001\u94fe\u63a5\u548c\u65e5\u671f\u3002</li> <li>\u8f93\u51fa\u7ed3\u679c\uff1a\u6253\u5370\u641c\u7d22\u7ed3\u679c\u7684\u4fe1\u606f\u3002</li> <li>\u5173\u95ed\u6d4f\u89c8\u5668\uff1a\u786e\u4fdd\u5728\u811a\u672c\u7ed3\u675f\u65f6\u5173\u95ed\u6d4f\u89c8\u5668\u3002</li> </ol>"},{"location":"blog/baidu_pa/#_4","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li>ChromeDriver\uff1a\u786e\u4fdd\u4f60\u7684 Chrome \u6d4f\u89c8\u5668\u7248\u672c\u548c ChromeDriver \u7248\u672c\u5339\u914d\u3002</li> <li>\u7f51\u7edc\u72b6\u51b5\uff1a\u5982\u679c\u9875\u9762\u52a0\u8f7d\u7f13\u6162\uff0c\u53ef\u4ee5\u9002\u5f53\u589e\u52a0 <code>sleep</code> \u65f6\u95f4\u3002</li> <li>\u5f02\u5e38\u5904\u7406\uff1a\u5728\u63d0\u53d6\u65e5\u671f\u65f6\u52a0\u5165\u5f02\u5e38\u5904\u7406\uff0c\u4ee5\u9632\u67d0\u4e9b\u641c\u7d22\u7ed3\u679c\u6ca1\u6709\u65e5\u671f\u4fe1\u606f\u3002</li> </ul> <p>\u4f60\u53ef\u4ee5\u6839\u636e\u9700\u8981\u8fdb\u4e00\u6b65\u5904\u7406\u63d0\u53d6\u5230\u7684\u6570\u636e\u3002</p>"},{"location":"blog/duoyuantiaojian/","title":"\u591a\u5143\u6b63\u6001\u7684\u6761\u4ef6\u5206\u5e03","text":"<p>\u6c42\u591a\u5143\u6b63\u6001\u7684\u6761\u4ef6\u5206\u5e03\\(X = (X_{(1)},X_{(2)})\\)\u5728\u7ed9\u5b9a\\(X_{(2)}\\)\u7684\u6761\u4ef6\u4e0b\uff1a</p> \\[ \\binom{X_{(1)}}{X_{(2)}} \\sim N_{p} (\\binom{\\mu_{(1)}}{\\mu_{(2)}},\\binom{\\Sigma_{11} \\ \\Sigma_{12}}{\\Sigma_{21} \\ \\Sigma_{22}} ) \\] <p>\\(X_{(2)} \\sim  N_{p2}(\\mu_{(2)},\\Sigma_{(2)})\\)</p> <p>\\(X_{(1)} | X_{(2)} \\sim N_{p1}(\\mu_{(1)|(2)}, \\Sigma_{(1)|(2)})\\)</p> <p>\u6709:</p> <p>\\(\\mu_{(1)|(2)} = \\mu_{(1)} + \\Sigma_{12}{\\Sigma_{22}}^{-1} (x_{(2)} - \\mu_{(2)})\\)</p> <p>$\\Sigma_{(1)|(2)} = \\Sigma_{11}-\\Sigma_{12}\\Sigma_{22}^{-1}\\Sigma_{21} $</p> <p>\\(\\mu_{(2)|(1)} = \\mu_{(2)} + \\Sigma_{21}{\\Sigma_{11}}^{-1} (x_{(1)} - \\mu_{(1)})\\)</p> <p>$\\Sigma_{(2)|(1)} = \\Sigma_{22}-\\Sigma_{21}\\Sigma_{11}^{-1}\\Sigma_{12} $</p> <p>\u8bc1\u660e\uff1a</p> <p>\u5148\u5bf9\u77e9\u9635\\(\\Sigma\\)\u505a\u5982\u4e0b\u521d\u7b49\u53d8\u6362:(\u6d88\u53bb\u975e\u5bf9\u89d2\u5143\u7d20)</p> \\[ \\begin{pmatrix}     I &amp;  \\\\     -\\Sigma_{21}\\Sigma_{11}^{-1} &amp; I  \\end{pmatrix} \\begin{pmatrix}     \\Sigma_{11} &amp; \\Sigma_{12} \\\\     \\Sigma_{21} &amp; \\Sigma_{22} \\end{pmatrix} \\begin{pmatrix}     I &amp; -\\Sigma_{11}^{-1}\\Sigma_{12}\\\\      &amp; I \\end{pmatrix} =  \\begin{pmatrix}     \\Sigma_{11} &amp;  \\\\      &amp; \\Sigma_{22\\cdot 1} \\end{pmatrix} \\] <p>\u6c42\u9006\u53ef\u5f97:</p> \\[ \\Sigma^{-1} =  \\begin{pmatrix}     I &amp; -\\Sigma_{11}^{-1}\\Sigma_{12} \\\\      &amp; I  \\end{pmatrix} \\begin{pmatrix}     \\Sigma_{11}^{-1} &amp;  \\\\      &amp; \\Sigma_{22\\cdot 1}^{-1} \\end{pmatrix} \\begin{pmatrix}     I &amp; \\\\     -\\Sigma_{21}\\Sigma_{11}^{-1} &amp; I \\end{pmatrix} \\\\ =  \\begin{pmatrix}     \\Sigma_{11}^{-1} &amp;  \\\\      &amp; 0 \\end{pmatrix} +   \\begin{pmatrix}    -\\Sigma_{11}^{-1}\\Sigma_{12}  \\\\      I \\end{pmatrix} \\Sigma_{22\\cdot 1}^{-1}  \\begin{pmatrix}    -\\Sigma_{21}\\Sigma_{11}^{-1}  &amp; I \\end{pmatrix} \\] <p>\u6216</p> \\[ \\Sigma^{-1}=\\begin{bmatrix}I\\\\-\\Sigma_{22}^{-1}\\Sigma_{21}\\end{bmatrix}\\Sigma_{11\\cdot2}\\begin{bmatrix}I&amp;-\\Sigma_{12}\\Sigma_{22}^{-1}\\end{bmatrix}+\\begin{bmatrix}0\\\\&amp;-\\Sigma_{22}^{-1}\\end{bmatrix} \\] <p>\u5176\u4e2d\uff1a</p> <p>\\(\\Sigma_{22\\cdot1} = \\Sigma_{22} - \\Sigma_{21}\\Sigma_{11}^{-1}\\Sigma_{12}\\)</p> <p>\\(\\Sigma_{11\\cdot2} = \\Sigma_{11} - \\Sigma_{12}\\Sigma_{22}^{-1}\\Sigma_{21}\\)</p> <p>\u7531\u4e8e\u591a\u5143\u6b63\u6001\u5206\u5e03\u6709\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\uff1a</p> \\[ f(\\mathbf{x} | \\boldsymbol{\\mu}, \\boldsymbol{\\Sigma}) = \\frac{1}{(2\\pi)^{k/2} |\\boldsymbol{\\Sigma}|^{1/2}} \\exp\\left( -\\frac{1}{2} (\\mathbf{x} - \\boldsymbol{\\mu})^T \\boldsymbol{\\Sigma}^{-1} (\\mathbf{x} - \\boldsymbol{\\mu}) \\right) \\] <p>\u5bf9\u4e8e\u5176\u4e2d\u7684 \\((\\mathbf{x} - \\boldsymbol{\\mu})^T \\boldsymbol{\\Sigma}^{-1} (\\mathbf{x} - \\boldsymbol{\\mu})\\)\u90e8\u5206\uff0c\u6211\u4eec\u6709\uff1a</p> \\[ \\begin{aligned}&amp;(x-\\mu)^T\\Sigma^{-1}(x-\\mu)=[ (x_{(1)}-\\mu_{(1)})^T\\quad(x_{(2)}-\\mu_{(2)})^T ] \\Sigma^{-1}\\begin{bmatrix}x_{(1)}-\\mu_{(1)}\\\\x_{(2)}-\\mu_{(2)}\\end{bmatrix}\\\\&amp;=(x_{(1)}-\\mu_{(1)})^T\\Sigma_{11}^{-1}(x_{(1)}-\\mu_{(1)})\\\\&amp;+[x_{(2)}-\\mu_{(2)}-\\Sigma_{21}\\Sigma_{11}^{-1}(x_{(1)}-\\mu_{(1)})]^T\\Sigma_{22\\cdot1}^{-1}[x_{(2)}-\\mu_{(2)}-\\Sigma_{21}\\Sigma_{11}^{-1}(x_{(1)}-\\mu_{(1)})]^T\\end{aligned} \\] <p>\u6216</p> \\[ \\begin{aligned}&amp;(x-\\mu)^T\\Sigma^{-1}(x-\\mu)=(x_{(2)}-\\mu_{(2)})^T\\Sigma_{22}^{-1}(x_{(2)}-\\mu_{(2)})\\\\&amp;+[x_{(1)}-\\mu_{(1)}-\\Sigma_{12}\\Sigma_{22}^{-1}(x_{(2)}-\\mu_{(2)})]^T\\Sigma_{11\\cdot2}^{-1}[x_{(1)}-\\mu_{(1)}-\\Sigma_{12}\\Sigma_{22}^{-1}(x_{(2)}-\\mu_{(2)})]^T\\end{aligned} \\] <p>\u7b2c\u4e8c\u9879\u8fd9\u91cc\u8fd9\u4e2a\u91cf\u6697\u542b\u7740\u4e00\u4e2a\u6761\u4ef6\u5206\u5e03\u3002</p> <p>\u5f97\u8bc1</p>"},{"location":"blog/gplearn/","title":"Gplearn\u7684\u5404\u79cd\u4f7f\u7528\uff1a","text":""},{"location":"blog/gplearn/#gplearnsymbolic-transformer","title":"gplearn\u5e93\u4e2d\u7684Symbolic Transformer","text":"<p>Symbolic Transformer\u662f\u4e00\u79cd\u6709\u76d1\u7763\u7684\u8f6c\u6362\u5668\uff0c\u5b83\u9996\u5148\u901a\u8fc7\u6784\u5efa\u4e00\u7ec4\u968f\u673a\u516c\u5f0f\u6765\u8868\u793a\u5173\u7cfb\u3002\u8fd9\u4e9b\u516c\u5f0f\u88ab\u8868\u793a\u4e3a\u6811\u72b6\u7ed3\u6784\uff0c\u6570\u5b66\u51fd\u6570\u9012\u5f52\u5730\u5e94\u7528\u4e8e\u53d8\u91cf\u548c\u5e38\u91cf\u3002\u6bcf\u4e00\u4ee3\u7a0b\u5e8f\u90fd\u662f\u4ece\u524d\u4e00\u4ee3\u8fdb\u5316\u800c\u6765\u7684\uff0c\u901a\u8fc7\u9009\u62e9\u79cd\u7fa4\u4e2d\u6700\u9002\u5408\u7684\u4e2a\u4f53\u8fdb\u884c\u9057\u4f20\u64cd\u4f5c\uff0c\u5982\u4ea4\u53c9\u3001\u53d8\u5f02\u6216\u590d\u5236\u3002\u6700\u7ec8\u7684\u79cd\u7fa4\u4e2d\u641c\u7d22\u51fa\u5f7c\u6b64\u4e4b\u95f4\u76f8\u5173\u6027\u6700\u5c0f\u7684\u6700\u9002\u5408\u4e2a\u4f53\u3002</p>"},{"location":"blog/gplearn/#_1","title":"\u53c2\u6570\u4ecb\u7ecd","text":"<p>gplearn\u5e93\u4e2d\u7684Symbolic Transformer\u662f\u4e00\u79cd\u57fa\u4e8e\u9057\u4f20\u7f16\u7a0b\u7684\u7279\u5f81\u5de5\u7a0b\u5de5\u5177\u3002\u5b83\u901a\u8fc7\u8fdb\u5316\u7b97\u6cd5\u751f\u6210\u65b0\u7684\u7279\u5f81\uff0c\u4ee5\u63d0\u9ad8\u673a\u5668\u5b66\u4e60\u6a21\u578b\u7684\u6027\u80fd\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5173\u952e\u53c2\u6570\u7684\u4ecb\u7ecd\uff1a</p> \u53c2\u6570\u540d\u79f0 \u5b9a\u4e49\u548c\u53c2\u6570\u8bbe\u7f6e\u8bf4\u660e \u53c2\u6570\u8bbe\u7f6e generations \u516c\u5f0f\u8fdb\u5316\u7684\u4e16\u4ee3\u6570\u91cf\u3002\u4e16\u4ee3\u6570\u91cf\u8d8a\u591a\uff0c\u6d88\u8017\u7b97\u529b\u8d8a\u591a\uff0c\u516c\u5f0f\u7684\u8fdb\u5316\u6b21\u6570\u8d8a\u591a\u3002 3 population_size \u6bcf\u4e00\u4ee3\u516c\u5f0f\u7fa4\u4f53\u4e2d\u7684\u516c\u5f0f\u6570\u91cf\u3002\u516c\u5f0f\u6570\u91cf\u8d8a\u5927\uff0c\u6d88\u8017\u7b97\u529b\u8d8a\u591a\uff0c\u516c\u5f0f\u4e4b\u95f4\u7ec4\u5408\u7684\u7a7a\u95f4\u8d8a\u5927\u3002 1000 function_set \u7528\u4e8e\u6784\u5efa\u548c\u8fdb\u5316\u516c\u5f0f\u65f6\u4f7f\u7528\u7684\u51fd\u6570\u96c6\uff0c\u53ef\u81ea\u5b9a\u4e49\u66f4\u591a\u51fd\u6570\u3002 \u4f7f\u7528\u56fe\u88688\u4e2d\u7684\u51fd\u6570\u96c6 init_depth \u516c\u5f0f\u6811\u7684\u521d\u59cb\u5316\u6df1\u5ea6\uff0cinit_depth\u662f\u4e00\u4e2a\u4e8c\u5143\u7ec4(min_depth, max_depth)\uff0c\u6811\u7684\u521d\u59cb\u6df1\u5ea6\u5c06\u5904\u5728[min_depth, max_depth]\u533a\u95f4\u5185\u3002\u8bbe\u7f6e\u6811\u6df1\u5ea6\u6700\u5c0f1\u5c42\uff0c\u6700\u59274\u5c42\u3002\u6700\u5927\u6df1\u5ea6\u8d8a\u6df1\uff0c\u53ef\u80fd\u5f97\u51fa\u8d8a\u590d\u6742\u7684\u56e0\u5b50\uff0c\u4f46\u662f\u56e0\u5b50\u7684\u610f\u4e49\u66f4\u96be\u89e3\u91ca\u3002 (1,4) tournament_size \u6bcf\u4e00\u4ee3\u7684\u6240\u6709\u516c\u5f0f\u4e2d\uff0ctournament_size\u4e2a\u516c\u5f0f\u4f1a\u88ab\u968f\u673a\u9009\u4e2d\uff0c\u5176\u4e2d\u9002\u5e94\u5ea6\u6700\u9ad8\u7684\u516c\u5f0f\u80fd\u8fdb\u884c\u53d8\u5f02\u6216\u7e41\u6b96\u751f\u6210\u4e0b\u4e00\u4ee3\u516c\u5f0f\u3002tournament_size\u8d8a\u5c0f\uff0c\u968f\u673a\u9009\u62e9\u8303\u56f4\u8d8a\u5c0f\uff0c\u9009\u62e9\u7684\u7ed3\u679c\u8d8a\u4e0d\u786e\u5b9a 20 metric \u9002\u5e94\u5ea6\u6307\u6807\uff0c\u53ef\u81ea\u5b9a\u4e49\u66f4\u591a\u6307\u6807\u3002 \u81ea\u5b9a\u4e49\u7684RankIC\u6307\u6807 p_crossover \u7236\u4ee3\u8fdb\u884c\u4ea4\u53c9\u53d8\u5f02\u8fdb\u5316\u7684\u6982\u7387\u3002\u4ea4\u53c9\u53d8\u5f02\u662f\u6700\u6709\u6548\u7684\u8fdb\u5316\u65b9\u5f0f\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3a\u8f83\u5927\u6982\u7387\u3002 0.4 p_subtree_mutation \u7236\u4ee3\u8fdb\u884c\u5b50\u6811\u53d8\u5f02\u8fdb\u5316\u7684\u6982\u7387\u3002\u5b50\u6811\u53d8\u5f02\u7684\u7ed3\u679c\u4e0d\u7a33\u5b9a\uff0c\u6982\u7387\u4e0d\u5b9c\u8fc7\u5927\u3002 0.01 p_hoist_mutation \u7236\u4ee3\u8fdb\u884cHoist\u53d8\u5f02\u8fdb\u5316\u7684\u6982\u7387\u3002\u672c\u6587\u7684\u6d4b\u8bd5\u4e2d\u516c\u5f0f\u6811\u5c42\u6b21\u90fd\u8f83\u4f4e\uff0c\u6240\u4ee5\u6ca1\u6709\u4f7f\u7528Hoist\u53d8\u5f02\u3002 0 p_point_mutation \u7236\u4ee3\u8fdb\u884c\u70b9\u53d8\u5f02\u8fdb\u5316\u7684\u6982\u7387\u3002\u70b9\u53d8\u5f02\u7684\u7ed3\u679c\u4e0d\u7a33\u5b9a\uff0c\u6982\u7387\u4e0d\u5b9c\u8fc7\u5927\u3002 0.01 p_point_replace \u5373\u70b9\u53d8\u5f02\u4e2d\u7236\u4ee3\u6bcf\u4e2a\u8282\u70b9\u8fdb\u884c\u53d8\u5f02\u8fdb\u5316\u7684\u6982\u7387\u3002\u70b9\u53d8\u5f02\u7684\u6982\u7387\u5df2\u7ecf\u5f88\u5c0f\uff0c\u53ef\u8bbe\u7f6e\u4e3a\u8f83\u5927\u6982\u7387\u4fdd\u8bc1\u70b9\u53d8\u5f02\u7684\u6267\u884c\u3002 stopping_criteria \u63d0\u524d\u505c\u6b62\u8fdb\u5316\u6240\u9700\u7684\u5ea6\u91cf\u503c\u3002 n_jobs \u62df\u5408\u5e76\u884c\u8fd0\u884c\u7684\u4f5c\u4e1a\u6570\u3002\u5982\u679c\u4e3a-1\uff0c\u5219\u4f5c\u4e1a\u6570\u8bbe\u7f6e\u4e3a\u5185\u6838\u6570\u3002 -1 verbose \u63a7\u5236\u8fdb\u5316\u6784\u5efa\u8fc7\u7a0b\u7684\u5197\u957f\u7a0b\u5ea6\u3002 1 hall_of_fame \u5728\u4e3a n_components \u5bfb\u627e\u76f8\u5173\u6027\u6700\u5c0f\u7684\u4e2a\u4f53\u65f6\u8fdb\u884c\u6bd4\u8f83\u7684\u6700\u5408\u9002\u7a0b\u5e8f\u7684\u6570\u91cf\u3002\u5982\u679c\u4e3a\u201c\u65e0\u201d\uff0c\u5219\u5c06\u4f7f\u7528\u6574\u4e2a\u6700\u7ec8\u751f\u6210\u7ed3\u679c\u3002 100 n_components \u5728\u540d\u4eba\u5802\uff08hall_of_fame\uff09\u4e2d\u641c\u7d22\u76f8\u5173\u6027\u6700\u5c0f\u7684\u4e2a\u4f53\u540e\uff0c\u8fd4\u56de\u7684\u6700\u4f73\u8282\u76ee\u6570\u91cf\u3002\u5982\u679c\u4e3a\u201c\u65e0\u201d\uff0c\u5c06\u4f7f\u7528\u6574\u4e2a\u540d\u4eba\u5802\u3002 parsimony_coefficient \u8fd9\u4e2a\u5e38\u6570\u901a\u8fc7\u8c03\u6574\u7a0b\u5e8f\u7684\u9002\u5e94\u5ea6\uff0c\u4f7f\u5176\u66f4\u4e0d\u5229\u4e8e\u9009\u62e9\uff0c\u4ece\u800c\u5bf9\u5927\u578b\u7a0b\u5e8f\u8fdb\u884c\u60e9\u7f5a\u3002\u6570\u503c\u8d8a\u5927\uff0c\u5bf9\u7a0b\u5e8f\u7684\u60e9\u7f5a\u5c31\u8d8a\u5927\uff0c\u8fd9\u53ef\u4ee5\u63a7\u5236\u6240\u8c13\u7684 \u201c\u81a8\u80c0 \u201d\u73b0\u8c61\u3002\u81c3\u80bf\u662f\u6307\u8fdb\u5316\u8fc7\u7a0b\u4e2d\u7a0b\u5e8f\u7684\u89c4\u6a21\u4e0d\u65ad\u6269\u5927\uff0c\u800c\u9002\u914d\u5ea6\u5374\u6ca1\u6709\u663e\u8457\u63d0\u9ad8\uff0c\u8fd9\u4e0d\u4ec5\u8017\u8d39\u8ba1\u7b97\u65f6\u95f4\uff0c\u800c\u4e14\u6700\u7ec8\u7ed3\u679c\u4e5f\u4e0d\u5bb9\u6613\u7406\u89e3\u3002\u8fd9\u4e00\u53c2\u6570\u53ef\u80fd\u9700\u8981\u5728\u8fde\u7eed\u8fd0\u884c\u65f6\u8fdb\u884c\u8c03\u6574\u3002(\u5982\u679c\u4f7f\u7528 \u201cauto\u201d\uff08\u81ea\u52a8\uff09\uff0c\u5219\u6bcf\u4e00\u4ee3\u7684\u89e3\u6790\u7cfb\u6570\u90fd\u4f1a\u4f7f\u7528 c = Cov(l,f)/Var( l)\u91cd\u65b0\u8ba1\u7b97\uff0c\u5176\u4e2d Cov(l,f) \u662f\u79cd\u7fa4\u4e2d\u7a0b\u5e8f\u5927\u5c0f l \u4e0e\u7a0b\u5e8f\u9002\u5408\u5ea6 f \u4e4b\u95f4\u7684\u534f\u65b9\u5dee\uff0cVar(l) \u662f\u7a0b\u5e8f\u5927\u5c0f\u7684\u65b9\u5dee\u3002) 0.005 max_samples \u5bf9\u6bcf\u4e2a\u7a0b\u5e8f\u8fdb\u884c\u8bc4\u4f30\u65f6\uff0c\u4ece X \u4e2d\u62bd\u53d6\u6837\u672c\u7684\u6bd4\u4f8b\u3002 0.9"},{"location":"blog/gplearn/#_2","title":"\u4f8b\u5b50","text":"gplearn.py<pre><code>function_set = ['add', 'sub', 'mul', 'div',\n                'sqrt', 'log', 'abs', 'neg', 'inv',\n                'max', 'min']\n\n\ngp = SymbolicTransformer(generations=20, population_size=2000,\n                         hall_of_fame=100, n_components=10,\n                         function_set=function_set,\n                         #parsimony_coefficient=0.0005,\n                         max_samples=0.9, verbose=1,\n                         random_state=0, n_jobs=-1,metric = 'spearman')\n\nresult = gp.fit(df, target)\n\n## \u6216\u8005\uff1a\n# result_fit_transform = gp.fit_transform(diabetes.data[:300, :], diabetes.target[:300])\n# \u62df\u5408\u5b8c\u6570\u636e\u540e\u76f4\u63a5\u8fdb\u884c\u8f6c\u6362\uff1a \u8fd4\u56de nrow * n_components \u7684\u6570\u636e\n</code></pre> <p>\u7ed3\u679c\uff1a <pre><code> |   Population Average    |             Best Individual              |\n---- ------------------------- ------------------------------------------ ----------\n Gen   Length          Fitness   Length          Fitness      OOB Fitness  Time Left\n   0    11.37         0.140571        7          0.60953         0.524855      1.20m\n   1     7.15          0.35238        3         0.659272         0.309861     51.57s\n   2     5.44         0.466162        4          0.66782         0.288364     57.89s\n   3     4.49         0.586366        3         0.671457         0.320572     46.97s\n   4     3.99         0.597676        7         0.688368         0.161787     41.72s\n   5     3.65         0.605824        7         0.684906         0.135113     39.34s\n   6     3.58         0.611524        4         0.680278          0.29176     37.19s\n   7     3.68         0.612427        3         0.674306         0.339035     33.66s\n   8     4.08         0.611616        7         0.677397          0.32696     30.98s\n   9     4.78         0.610042        7         0.680798         0.323262     33.81s\n  10     5.51         0.611407        9          0.68331         0.320245     25.56s\n  11     6.44         0.613251        9         0.678225         0.466664     23.09s\n  12     7.15         0.616251        9         0.700843        0.0830612     20.81s\n  13     8.12         0.617384        7          0.68119         0.344517     17.17s\n  14     8.96         0.618892       13         0.684455         0.311955     14.51s\n  15     9.51         0.620367       19         0.690903         0.205063     12.06s\n  16     9.68         0.619547       11         0.689026         0.449675      8.84s\n  17     9.89         0.621826       13         0.691072         0.386541      5.84s\n  18    10.87         0.625144       29         0.695689         0.385131      2.86s\n  19    12.40         0.627153       11         0.702239         0.409255      0.00s\nCPU times: user 20.3 s, sys: 1.33 s, total: 21.6 s\nWall time: 59.8 s\n</code></pre></p> <p>\u53ef\u4ee5\u770b\u5230\uff0c\u5bf9\u4e00\u4e2a300\u884c * 10\u5217\u7684\u6570\u636e\u9700\u8981\u6d88\u8017 1 min</p> \u753b\u56fe.py<pre><code>import graphviz\ndot_data = gp._best_programs[-1].export_graphviz()\ngraph = graphviz.Source(dot_data)\ngraph\n</code></pre> <p></p> \u5176\u4ed6.py<pre><code>gp.get_params() ## \u83b7\u5f97gp\u7684\u8d85\u53c2\u6570\u8bbe\u7f6e\ngp_features = gp.transform(df)\nnew_diabetes = np.hstack((df, gp_features))\n</code></pre>"},{"location":"blog/gplearn/#_3","title":"\u9488\u5bf9\u65f6\u95f4\u5e8f\u5217\u7684\u81ea\u5b9a\u4e49\u51fd\u6570\uff0c\u9488\u5bf9\u4e8e\u4e8c\u7ef4 \u65f6\u95f4 \u00d7 \u7279\u5f81 \u7684 \u60c5\u51b5\uff0c \u4e09\u7ef4\u6570\u636e \u65f6\u95f4 \u00d7 \u7279\u5f81 \u00d7 \u80a1\u7968 \u7684\u8ba8\u8bba\u5728\u4e0b\u4e00\u90e8\u5206","text":"\u5148\u8c03\u5165\u5e93<pre><code>import numpy as np\nimport numba\nfrom numba import jit\n</code></pre> <p>\u4e0b\u9762\u5e38\u7528\u7b97\u5b50\u4f5c\u7528\u5206\u522b\u662f\uff1a - _delta_x: \u8ba1\u7b97\u4e00\u9636\u5dee\u5206 - _delay_x: x\u9636\u5ef6\u8fdflag</p> delta,delay<pre><code># \u81ea\u5b9a\u4e49\u51fd\u6570, make_function\u51fd\u6570\u7fa4\ndef _delta_1(data):\n    value = np.diff(data.flatten())\n    value = np.append(0, value)\n    return value\n\ndef _delta_2(data):\n    value = np.diff(data.flatten(),2)\n    value = np.append([0,0], value)\n    return value\n\ndef _delta_3(data):\n    value = np.diff(data.flatten(),3)\n    value = np.append([0,0,0], value)\n    return value\n\ndef _delay_1(data):\n    period = 1\n    value = pd.Series(data.flatten()).shift(period)\n    value = np.nan_to_num(value)\n    return value\n\ndef _delay_2(data):\n    period = 2\n    value = pd.Series(data.flatten()).shift(period)\n    value = np.nan_to_num(value)\n    return value\n\ndef _delay_3(data):\n    period = 3\n    value = pd.Series(data.flatten()).shift(period)\n    value = np.nan_to_num(value)\n    return value\n</code></pre> <p>\u4e0b\u9762\u5e38\u7528\u7b97\u5b50\u4f5c\u7528\u5206\u522b\u662f\uff1a</p> <ul> <li>_delta: \u8ba1\u7b97\u4e00\u9636\u5dee\u5206</li> <li>_delay: \u7528data[i-2]\u7684\u6570\u636e\u4ee3\u66ffdata[i]</li> <li>_ts_sum_numba\uff1a\u8ba1\u7b97\u6eda\u52a8\u548c</li> <li>_ts_mean_numba\uff1a\u8ba1\u7b97\u6eda\u52a8\u5747\u503c</li> <li>_ts_std_numba\uff1a\u8ba1\u7b97\u6eda\u52a8\u6807\u51c6\u5dee</li> <li>_ts_rank_numba\uff1a\u8ba1\u7b97\u6eda\u52a8\u6392\u540d</li> <li>_ts_prod_numba\uff1a\u8ba1\u7b97\u6eda\u52a8\u4e58\u79ef</li> <li>_ts_min_numba\uff1a\u8ba1\u7b97\u6eda\u52a8\u6700\u5c0f\u503c</li> <li>_ts_max_numba\uff1a\u8ba1\u7b97\u6eda\u52a8\u6700\u5927\u503c</li> <li>_ts_scale_numba\uff1a\u8ba1\u7b97\u6eda\u52a8z-score</li> <li>_ts_argmax_numba\uff1a\u8ba1\u7b97\u6eda\u52a8\u6700\u5927\u503c\u4f4d\u7f6e</li> <li>_ts_argmin_numba\uff1a\u8ba1\u7b97\u6eda\u52a8\u6700\u5c0f\u503c\u4f4d\u7f6e</li> <li>_ts_beta: \u8ba1\u7b97\u6eda\u52a8\u56de\u5f52</li> <li>_ts_intercept: \u8ba1\u7b97\u6eda\u52a8\u622a\u8ddd</li> <li>_ts_residuals: \u8ba1\u7b97\u6eda\u52a8\u6b8b\u5dee</li> <li>_ts_pearson: \u8ba1\u7b97\u6eda\u52a8\u76ae\u5c14\u900a\u76f8\u5173\u7cfb\u6570</li> <li>_ts_spearman: \u8ba1\u7b97\u6eda\u52a8\u65af\u76ae\u5c14\u66fc\u76f8\u5173\u7cfb\u6570</li> <li>_ts_covariance: \u8ba1\u7b97\u6eda\u52a8\u534f\u65b9\u5dee</li> </ul> numba\u52a0\u901f\u7684\u9ad8\u901f\u7b97\u5b50<pre><code>@numba.njit(numba.float64[:](numba.float64[:], numba.int64), cache=True)\ndef rolling_sum_numba(data, n):\n    res = np.empty(len(data), dtype=np.float64)\n    # \u7f13\u5b58\u7684\u7a97\u53e3\u5185\u6570\u636e\u6c42\u548c\u7ed3\u679c\n    nobuffer_flag = True\n    sum_buffer = 0\n    res[0] = data[0]\n    for i, x in enumerate(data[1:n], 1):\n        res[i] = res[i-1] + x\n    for i, x in enumerate(data[n:], n):\n        head_x = data[i-n]\n        # \u5982\u679c\u7f13\u5b58\u7ed3\u679c\u4e3a\u7a7a\uff0c\u5219\u5148\u901a\u8fc7\u904d\u5386\u6c42\u7b2c\u4e00\u6b21\u7ed3\u679c\n        if nobuffer_flag:\n            nobuffer_flag = False\n            sum_tick = 0\n            for tick in data[1:n+1]:\n                sum_tick += tick\n            res[i] = sum_tick\n            # \u5c06\u6c42\u548c\u7ed3\u679c\u7f13\u5b58\u4e0b\u6765\n            sum_buffer = sum_tick\n        else:\n            # \u8fd9\u91cc\u7684\u7b97\u6cd5\u5c06\u8ba1\u7b97\u590d\u6742\u5ea6\u4eceO(n)\u964d\u4f4e\u5230\u4e86O(1)\n            sum_buffer = sum_buffer - head_x + x\n            res[i] = sum_buffer\n    return res\n\n# \u5de6\u5f00\u53f3\u95ed\ndef _ts_sum_numba(data):\n    window = 10\n    value = rolling_sum_numba(data.astype(np.float64), window)\n    value = np.nan_to_num(value)\n    return value\n\n@numba.njit(numba.float64[:](numba.float64[:], numba.int64), cache=True)\ndef rolling_mean_numba(data, n):\n    res = np.empty(len(data), dtype=np.float64)\n    nobuffer_flag = True\n    sum_buffer = 0\n    res[0] = data[0]\n    for i, x in enumerate(data[1:n], 1):\n        res[i] = (res[i-1]*i+x)/(i+1)\n    for i, x in enumerate(data[n:], n):\n        head_x = data[i-n]\n        if nobuffer_flag:\n            nobuffer_flag = False\n            sum_tick = 0\n            for tick in data[1:n+1]:\n                sum_tick += tick\n            res[i] = sum_tick/n\n            sum_buffer = sum_tick\n        else:\n            sum_buffer = sum_buffer - head_x + x\n            res[i] = sum_buffer/n\n    return res\n\n# \u5de6\u5f00\u53f3\u95ed\ndef _ts_mean_numba(data):\n    window = 10\n    value = rolling_mean_numba(data.astype(np.float64), window)\n    value = np.nan_to_num(value)\n    return value\n\n@jit(numba.float64[:](numba.float64[:], numba.int64), cache=True)\ndef rolling_std_numba(data, n):\n    res = np.empty(len(data), dtype=np.float64)\n    # \u4fdd\u62a4\u6807\u51c6\u5dee\uff08\u5982\u679c\u4e3a0\uff0c\u6807\u51c6\u5dee\u53d8\u4e3a0.001\uff09\n    res[0] = 0.001\n    for i, x in enumerate(data[1:n], 1):\n        res[i] = np.std(data[:i+1])\n    for i, x in enumerate(data[n:], n):\n        res[i] = np.std(data[i-n+1:i+1])\n    return res\n\n# \u5de6\u5f00\u53f3\u95ed\ndef _ts_std_numba(data):\n    window = 10\n    value = rolling_std_numba(data.astype(np.float64), window)\n    value = np.where(np.abs(value) &gt; 0.001, value, 0.001)\n    value = np.nan_to_num(value)\n    return value\n\n@numba.njit(numba.float64[:](numba.float64[:], numba.int64), cache=True)\ndef rolling_rank_numba(data, n):\n    res = np.empty(len(data), dtype=np.float64)\n    res[0] = 1\n    for i, x in enumerate(data[1:n], 1):\n        idx = np.argsort(data[:i+1])\n        res[i] = np.argsort(idx)[-1] + 1\n    for i, x in enumerate(data[n:], n):\n        idx = np.argsort(data[i-n+1:i+1])\n        res[i] = np.argsort(idx)[-1] + 1\n    return res\n\ndef _ts_rank_numba(data):\n    window = 10\n    value = rolling_rank_numba(data.astype(np.float64), window)\n    value = np.nan_to_num(value)\n    return value\n\n@numba.njit(numba.float64[:](numba.float64[:], numba.int64), cache=True)\ndef rolling_prod_numba(data, n):\n    res = np.empty(len(data), dtype=np.float64)\n    nobuffer_flag = True\n    prod_buffer = 1\n    res[0] = data[0]\n    for i, x in enumerate(data[1:n], 1):\n        res[i] = res[i-1] * x\n    for i, x in enumerate(data[n:], n):\n        head_x = data[i-n]\n        # \u5982\u679c\u7f13\u5b58\u7ed3\u679c\u4e3a\u7a7a\uff0c\u5219\u5148\u901a\u8fc7\u904d\u5386\u6c42\u7b2c\u4e00\u6b21\u7ed3\u679c\n        if nobuffer_flag:\n            nobuffer_flag = False\n            prod_tick = 1\n            for tick in data[1:n+1]:\n                prod_tick *= tick\n            res[i] = prod_tick\n            # \u5c06\u4e58\u79ef\u7ed3\u679c\u7f13\u5b58\u4e0b\u6765\n            prod_buffer = prod_tick\n        else:\n            if head_x == 0:  # pop\u51fa\u7684\u5143\u7d20\u4e3a0\n                prod_buffer = 1\n                for j, y in enumerate(data[i-n+1:i+1], i-n+1):\n                    prod_buffer *= y\n            else:  # pop\u51fa\u7684\u5143\u7d20\u4e0d\u4e3a0\n                prod_buffer /= head_x\n                prod_buffer *= x\n            res[i] = prod_buffer\n    return res\n\n# \u5de6\u5f00\u53f3\u95ed\ndef _ts_prod_numba(data):\n    window = 10\n    value = rolling_prod_numba(data.astype(np.float64), window)\n    value = np.nan_to_num(value)\n    return value\n\n@numba.njit(numba.float64[:](numba.float64[:], numba.int64), cache=True)\ndef rolling_min_numba(data, n):\n    res = np.empty(len(data), dtype=np.float64)\n    res[0] = data[0]\n    for i, x in enumerate(data[1:n], 1):\n        res[i] = x if x &lt; res[i-1] else res[i-1]\n    for i, x in enumerate(data[n:], n):\n        res[i] = min(data[i-n+1:i+1])\n    return res\n\n# \u5de6\u5f00\u53f3\u95ed\n# \u53ef\u4ee5\u50cf_ts_rank\u90a3\u6837\u7528\u5355\u8c03\u961f\u5217\u6216\u8005\u6700\u5c0f\u5806\uff0c\u4f46\u4f3c\u4e4e\u6ca1\u6709\u8fd9\u4e2a\u5feb\ndef _ts_min_numba(data):\n    window = 10\n    value = rolling_min_numba(data.astype(np.float64), window)\n    value = np.nan_to_num(value)\n    return value\n\n@numba.njit(numba.float64[:](numba.float64[:], numba.int64), cache=True)\ndef rolling_max_numba(data, n):\n    res = np.empty(len(data), dtype=np.float64)\n    res[0] = data[0]\n    for i, x in enumerate(data[1:n], 1):\n        res[i] = x if x &gt; res[i-1] else res[i-1]\n    for i, x in enumerate(data[n:], n):\n        res[i] = max(data[i-n+1:i+1])\n    return res\n\n# \u5de6\u5f00\u53f3\u95ed\ndef _ts_max_numba(data):\n    window = 10\n    value = rolling_max_numba(data.astype(np.float64), window)\n    value = np.nan_to_num(value)\n    return value\n\ndef _ts_scale_numba(data):\n    value_mean = _ts_mean_numba(data)\n    value_std = _ts_std_numba(data)\n    value = (data - value_mean) / value_std\n    value = np.where(value &gt; 5, 5, value)\n    value = np.where(value &lt; -5, -5, value)\n    value = np.nan_to_num(value)\n    return value\n\n# \u590d\u6742\u5ea6O(data.shape[0] + window)\n@numba.njit(numba.int64[:](numba.float64[:], numba.int64), cache=True)\ndef rolling_argmax_numba(data, n):\n    \"\"\"\n    leetcode239 \u5355\u8c03\u961f\u5217 \n    \u590d\u6742\u5ea6 O(N + n)\uff0cN\u4e3a\u6837\u672c\u6570\u91cf\n\n    :param data: \n    :param n: \u56de\u6d4b\u7a97\u53e3\u5927\u5c0f\n    :return: \n    \"\"\"\n    res = np.empty(len(data), dtype=np.int64)\n    head = 0\n    tail = 0\n    que_idx = np.empty(len(data), dtype=np.int64)\n    for i, x in enumerate(data[:n]):\n        while tail &gt; 0 and data[que_idx[tail - 1]] &lt; x:\n            tail -= 1\n        que_idx[tail] = i\n        tail += 1\n        res[i] = que_idx[0] + 1\n    for i, x in enumerate(data[n:], n):\n        if que_idx[head] &lt;= i - n:\n            head += 1\n        while tail &gt; head and data[que_idx[tail - 1]] &lt; x:\n            tail -= 1\n        que_idx[tail] = i\n        tail += 1\n        res[i] = que_idx[head] - i + n\n    return res\n\ndef _ts_argmax_numba(data):\n    window = 10\n    value = rolling_argmax_numba(data.astype(np.float64), window)\n    value = np.nan_to_num(value)\n    return value\n\n# \u590d\u6742\u5ea6O(data.shape[0] + window)\n@numba.njit(numba.int64[:](numba.float64[:], numba.int64), cache=True)\ndef rolling_argmin_numba(data, n):\n    res = np.empty(len(data), dtype=np.int64)\n    head = 0\n    tail = 0\n    que_idx = np.empty(len(data), dtype=np.int64)\n    for i, x in enumerate(data[:n]):\n        while tail &gt; 0 and data[que_idx[tail - 1]] &gt; x:\n            tail -= 1\n        que_idx[tail] = i\n        tail += 1\n        res[i] = que_idx[0] + 1\n    for i, x in enumerate(data[n:], n):\n        if que_idx[head] &lt;= i - n:\n            head += 1\n        while tail &gt; head and data[que_idx[tail - 1]] &gt; x:\n            tail -= 1\n        que_idx[tail] = i\n        tail += 1\n        res[i] = que_idx[head] - i + n\n    return res\n\n# \u5de6\u5f00\u53f3\u95ed\ndef _ts_argmin_numba(data):\n    window = 10\n    value = rolling_argmin_numba(data.astype(np.float64), window)\n    value = np.nan_to_num(value)\n    return value\n</code></pre> \u8ba1\u7b97 X \u548c Y \u5728\u6eda\u52a8 N(=10) \u671f\u7a97\u53e3\u5185\u7684\u56de\u5f52\u7cfb\u6570\u3001\u622a\u8ddd\u3001\u6b8b\u5dee\u3001\u76f8\u5173\u7cfb\u6570\u548c\u534f\u65b9\u5dee\u3002<pre><code>def rolling_regression_beta(X, Y):\n    N = 10\n    \"\"\"\n    \u8ba1\u7b97 X \u548c Y \u5728\u6eda\u52a8 N \u671f\u7a97\u53e3\u5185\u7684\u56de\u5f52\u7cfb\u6570\u3001\u622a\u8ddd\u3001\u6b8b\u5dee\u3001\u76f8\u5173\u7cfb\u6570\u548c\u534f\u65b9\u5dee\u3002\n\n    \u53c2\u6570\uff1a\n        X (numpy.ndarray): \u81ea\u53d8\u91cf\u5e8f\u5217\n        Y (numpy.ndarray): \u56e0\u53d8\u91cf\u5e8f\u5217\n        N (int): \u6eda\u52a8\u7a97\u53e3\u5927\u5c0f\n\n    \u8fd4\u56de\uff1a\n        pd.DataFrame: \u5305\u542b \u03b2\u503c\u3001\u622a\u8ddd\u3001\u6b8b\u5dee\u3001Pearson\u76f8\u5173\u7cfb\u6570\u3001Spearman\u76f8\u5173\u7cfb\u6570\u3001\u534f\u65b9\u5dee \u7684 DataFrame\n    \"\"\"\n    # \u8f6c\u6362\u4e3a Pandas Series\n    X = pd.Series(X.flatten())\n    Y = pd.Series(Y.flatten())\n\n    # \u521b\u5efa\u7ed3\u679c\u5b58\u50a8\u7684 DataFrame\n    results = pd.DataFrame(index=X.index, columns=[\n        'Beta'])\n\n    # \u6eda\u52a8\u7a97\u53e3\u8ba1\u7b97\n    for i in range(N - 1, len(X)):\n        x_window = X.iloc[i - N + 1:i + 1].values.reshape(-1, 1)\n        y_window = Y.iloc[i - N + 1:i + 1].values\n\n        # \u7ebf\u6027\u56de\u5f52\n        linreg = LinearRegression()\n        linreg.fit(x_window, y_window)\n\n        # \u5b58\u50a8\u7ed3\u679c\n        results.loc[i] = {\n            'Beta': linreg.coef_[0]\n        }\n\n    # \u586b\u5145 NaN \u503c\u4e3a 0\n    with pd.option_context(\"future.no_silent_downcasting\", True):\n        results = results.fillna(0).infer_objects(copy=False)\n    return results.to_numpy().flatten()\n\ndef rolling_regression_intercept(X, Y):\n    N = 10\n    \"\"\"\n    \u8ba1\u7b97 X \u548c Y \u5728\u6eda\u52a8 N \u671f\u7a97\u53e3\u5185\u7684\u56de\u5f52\u7cfb\u6570\u3001\u622a\u8ddd\u3001\u6b8b\u5dee\u3001\u76f8\u5173\u7cfb\u6570\u548c\u534f\u65b9\u5dee\u3002\n\n    \u53c2\u6570\uff1a\n        X (numpy.ndarray): \u81ea\u53d8\u91cf\u5e8f\u5217\n        Y (numpy.ndarray): \u56e0\u53d8\u91cf\u5e8f\u5217\n        N (int): \u6eda\u52a8\u7a97\u53e3\u5927\u5c0f\n\n    \u8fd4\u56de\uff1a\n        pd.DataFrame: \u5305\u542b \u03b2\u503c\u3001\u622a\u8ddd\u3001\u6b8b\u5dee\u3001Pearson\u76f8\u5173\u7cfb\u6570\u3001Spearman\u76f8\u5173\u7cfb\u6570\u3001\u534f\u65b9\u5dee \u7684 DataFrame\n    \"\"\"\n    # \u8f6c\u6362\u4e3a Pandas Series\n    X = pd.Series(X.flatten())\n    Y = pd.Series(Y.flatten())\n\n    # \u521b\u5efa\u7ed3\u679c\u5b58\u50a8\u7684 DataFrame\n    results = pd.DataFrame(index=X.index, columns=['Intercept'])\n\n    # \u6eda\u52a8\u7a97\u53e3\u8ba1\u7b97\n    for i in range(N - 1, len(X)):\n        x_window = X.iloc[i - N + 1:i + 1].values.reshape(-1, 1)\n        y_window = Y.iloc[i - N + 1:i + 1].values\n\n        # \u7ebf\u6027\u56de\u5f52\n        linreg = LinearRegression()\n        linreg.fit(x_window, y_window)\n\n        # \u5b58\u50a8\u7ed3\u679c\n        results.loc[i] = {\n            'Intercept': linreg.intercept_\n        }\n\n    # \u586b\u5145 NaN \u503c\u4e3a 0\n    with pd.option_context(\"future.no_silent_downcasting\", True):\n        results = results.fillna(0).infer_objects(copy=False)\n    return results.to_numpy().flatten()\n\ndef rolling_regression_residuals(X, Y):\n    N = 10\n    \"\"\"\n    \u8ba1\u7b97 X \u548c Y \u5728\u6eda\u52a8 N \u671f\u7a97\u53e3\u5185\u7684\u56de\u5f52\u7cfb\u6570\u3001\u622a\u8ddd\u3001\u6b8b\u5dee\u3001\u76f8\u5173\u7cfb\u6570\u548c\u534f\u65b9\u5dee\u3002\n\n    \u53c2\u6570\uff1a\n        X (numpy.ndarray): \u81ea\u53d8\u91cf\u5e8f\u5217\n        Y (numpy.ndarray): \u56e0\u53d8\u91cf\u5e8f\u5217\n        N (int): \u6eda\u52a8\u7a97\u53e3\u5927\u5c0f\n\n    \u8fd4\u56de\uff1a\n        pd.DataFrame: \u5305\u542b \u03b2\u503c\u3001\u622a\u8ddd\u3001\u6b8b\u5dee\u3001Pearson\u76f8\u5173\u7cfb\u6570\u3001Spearman\u76f8\u5173\u7cfb\u6570\u3001\u534f\u65b9\u5dee \u7684 DataFrame\n    \"\"\"\n    # \u8f6c\u6362\u4e3a Pandas Series\n    X = pd.Series(X.flatten())\n    Y = pd.Series(Y.flatten())\n\n    # \u521b\u5efa\u7ed3\u679c\u5b58\u50a8\u7684 DataFrame\n    results = pd.DataFrame(index=X.index, columns=['Residuals'])\n\n    # \u6eda\u52a8\u7a97\u53e3\u8ba1\u7b97\n    for i in range(N - 1, len(X)):\n        x_window = X.iloc[i - N + 1:i + 1].values.reshape(-1, 1)\n        y_window = Y.iloc[i - N + 1:i + 1].values\n\n        # \u7ebf\u6027\u56de\u5f52\n        linreg = LinearRegression()\n        linreg.fit(x_window, y_window)\n        y_pred = linreg.predict(x_window)\n\n        # \u8ba1\u7b97\u6b8b\u5dee\n        residuals = y_window - y_pred\n\n        # \u5b58\u50a8\u7ed3\u679c\n        results.loc[i] = {\n            'Residuals': residuals[-1]  # \u6700\u65b0\u4e00\u671f\u7684\u6b8b\u5dee\n        }\n\n    # \u586b\u5145 NaN \u503c\u4e3a 0\n    with pd.option_context(\"future.no_silent_downcasting\", True):\n        results = results.fillna(0).infer_objects(copy=False)\n    return results.to_numpy().flatten()\n\ndef rolling_regression_pearson(X, Y):\n    N = 10\n    \"\"\"\n    \u8ba1\u7b97 X \u548c Y \u5728\u6eda\u52a8 N \u671f\u7a97\u53e3\u5185\u7684\u56de\u5f52\u7cfb\u6570\u3001\u622a\u8ddd\u3001\u6b8b\u5dee\u3001\u76f8\u5173\u7cfb\u6570\u548c\u534f\u65b9\u5dee\u3002\n\n    \u53c2\u6570\uff1a\n        X (numpy.ndarray): \u81ea\u53d8\u91cf\u5e8f\u5217\n        Y (numpy.ndarray): \u56e0\u53d8\u91cf\u5e8f\u5217\n        N (int): \u6eda\u52a8\u7a97\u53e3\u5927\u5c0f\n\n    \u8fd4\u56de\uff1a\n        pd.DataFrame: \u5305\u542b \u03b2\u503c\u3001\u622a\u8ddd\u3001\u6b8b\u5dee\u3001Pearson\u76f8\u5173\u7cfb\u6570\u3001Spearman\u76f8\u5173\u7cfb\u6570\u3001\u534f\u65b9\u5dee \u7684 DataFrame\n    \"\"\"\n    # \u8f6c\u6362\u4e3a Pandas Series\n    X = pd.Series(X.flatten())\n    Y = pd.Series(Y.flatten())\n\n    # \u521b\u5efa\u7ed3\u679c\u5b58\u50a8\u7684 DataFrame\n    results = pd.DataFrame(index=X.index, columns=[\n        'Pearson Corr'\n    ])\n\n    # \u6eda\u52a8\u7a97\u53e3\u8ba1\u7b97\n    for i in range(N - 1, len(X)):\n        x_window = X.iloc[i - N + 1:i + 1].values.reshape(-1, 1)\n        y_window = Y.iloc[i - N + 1:i + 1].values\n\n        # \u8ba1\u7b97 Pearson \u548c Spearman \u76f8\u5173\u7cfb\u6570\n        #pearson_corr, _ = pearsonr(x_window.flatten(), y_window)\n        if len(np.unique(x_window.flatten())) == 1 or len(np.unique(y_window)) == 1:\n            pearson_corr = 0  # \u6216\u8005\u8fd4\u56de np.nan\n        else:\n            pearson_corr, _ = pearsonr(x_window.flatten(), y_window)\n        # \u5b58\u50a8\u7ed3\u679c\n        results.loc[i] = {\n            'Pearson Corr': pearson_corr\n        }\n\n    # \u586b\u5145 NaN \u503c\u4e3a 0\n    with pd.option_context(\"future.no_silent_downcasting\", True):\n        results = results.fillna(0).infer_objects(copy=False)\n    return results.to_numpy().flatten()\n\ndef rolling_regression_spearman(X, Y):\n    N = 10\n    \"\"\"\n    \u8ba1\u7b97 X \u548c Y \u5728\u6eda\u52a8 N \u671f\u7a97\u53e3\u5185\u7684\u56de\u5f52\u7cfb\u6570\u3001\u622a\u8ddd\u3001\u6b8b\u5dee\u3001\u76f8\u5173\u7cfb\u6570\u548c\u534f\u65b9\u5dee\u3002\n\n    \u53c2\u6570\uff1a\n        X (numpy.ndarray): \u81ea\u53d8\u91cf\u5e8f\u5217\n        Y (numpy.ndarray): \u56e0\u53d8\u91cf\u5e8f\u5217\n        N (int): \u6eda\u52a8\u7a97\u53e3\u5927\u5c0f\n\n    \u8fd4\u56de\uff1a\n        pd.DataFrame: \u5305\u542b \u03b2\u503c\u3001\u622a\u8ddd\u3001\u6b8b\u5dee\u3001Pearson\u76f8\u5173\u7cfb\u6570\u3001Spearman\u76f8\u5173\u7cfb\u6570\u3001\u534f\u65b9\u5dee \u7684 DataFrame\n    \"\"\"\n    # \u8f6c\u6362\u4e3a Pandas Series\n    X = pd.Series(X.flatten())\n    Y = pd.Series(Y.flatten())\n\n    # \u521b\u5efa\u7ed3\u679c\u5b58\u50a8\u7684 DataFrame\n    results = pd.DataFrame(index=X.index, columns=['Spearman Corr'])\n\n    # \u6eda\u52a8\u7a97\u53e3\u8ba1\u7b97\n    for i in range(N - 1, len(X)):\n        x_window = X.iloc[i - N + 1:i + 1].values.reshape(-1, 1)\n        y_window = Y.iloc[i - N + 1:i + 1].values\n\n        # \u8ba1\u7b97 Pearson \u548c Spearman \u76f8\u5173\u7cfb\u6570\n        #spearman_corr, _ = spearmanr(x_window.flatten(), y_window)\n        if len(np.unique(x_window.flatten())) == 1 or len(np.unique(y_window)) == 1:\n            spearman_corr = 0  # \u6216\u8005\u8fd4\u56de np.nan\n        else:\n            spearman_corr, _ = spearmanr(x_window.flatten(), y_window)\n        # \u5b58\u50a8\u7ed3\u679c\n        results.loc[i] = {\n            'Spearman Corr': spearman_corr\n        }\n\n    # \u586b\u5145 NaN \u503c\u4e3a 0\n    with pd.option_context(\"future.no_silent_downcasting\", True):\n        results = results.fillna(0).infer_objects(copy=False)\n    return results.to_numpy().flatten()\n\ndef rolling_regression_covariance(X, Y):\n    N = 10\n    \"\"\"\n    \u8ba1\u7b97 X \u548c Y \u5728\u6eda\u52a8 N \u671f\u7a97\u53e3\u5185\u7684\u56de\u5f52\u7cfb\u6570\u3001\u622a\u8ddd\u3001\u6b8b\u5dee\u3001\u76f8\u5173\u7cfb\u6570\u548c\u534f\u65b9\u5dee\u3002\n\n    \u53c2\u6570\uff1a\n        X (numpy.ndarray): \u81ea\u53d8\u91cf\u5e8f\u5217\n        Y (numpy.ndarray): \u56e0\u53d8\u91cf\u5e8f\u5217\n        N (int): \u6eda\u52a8\u7a97\u53e3\u5927\u5c0f\n\n    \u8fd4\u56de\uff1a\n        pd.DataFrame: \u5305\u542b \u03b2\u503c\u3001\u622a\u8ddd\u3001\u6b8b\u5dee\u3001Pearson\u76f8\u5173\u7cfb\u6570\u3001Spearman\u76f8\u5173\u7cfb\u6570\u3001\u534f\u65b9\u5dee \u7684 DataFrame\n    \"\"\"\n    # \u8f6c\u6362\u4e3a Pandas Series\n    X = pd.Series(X.flatten())\n    Y = pd.Series(Y.flatten())\n\n    # \u521b\u5efa\u7ed3\u679c\u5b58\u50a8\u7684 DataFrame\n    results = pd.DataFrame(index=X.index, columns=['Covariance'])\n\n    # \u6eda\u52a8\u7a97\u53e3\u8ba1\u7b97\n    for i in range(N - 1, len(X)):\n        x_window = X.iloc[i - N + 1:i + 1].values.reshape(-1, 1)\n        y_window = Y.iloc[i - N + 1:i + 1].values\n\n        # \u8ba1\u7b97\u534f\u65b9\u5dee\n        #covariance = np.cov(x_window.flatten(), y_window)[0, 1]\n        if len(np.unique(x_window.flatten())) == 1 or len(np.unique(y_window)) == 1:\n            covariance = 0  # \u5982\u679c\u53ea\u6709\u4e00\u4e2a\u662f\u5e38\u6570\n        else:\n            covariance = np.cov(x_window.flatten(), y_window)[0,1]\n        # \u5b58\u50a8\u7ed3\u679c\n        results.loc[i] = {\n            'Covariance': covariance\n        }\n\n    # \u586b\u5145 NaN \u503c\u4e3a 0\n    with pd.option_context(\"future.no_silent_downcasting\", True):\n        results = results.fillna(0).infer_objects(copy=False)\n    # results = results.fillna(0).infer_objects(copy=False)\n    return results.to_numpy().flatten()\n</code></pre> \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u7528\u4e8e\u8ba1\u7b97\u4e92\u4fe1\u606f<pre><code>def _my_metric(y, y_pred, w):\n    y = y.reshape(-1, 1)\n    result  = mutual_info_regression(y, y_pred,discrete_features='auto',n_neighbors=1 ,copy=True, random_state=None)\n    return result[0]\n</code></pre> make_function\u51fd\u6570\u7fa4,\u4e92\u4fe1\u606f\u7684make_fitness<pre><code># make_function\u51fd\u6570\u7fa4\ndelta_1 = make_function(function=_delta_1, name='delta', arity=1)\ndelta_2 = make_function(function=_delta_2, name='delta', arity=1)\ndelta_3 = make_function(function=_delta_3, name='delta', arity=1)\ndelay_1 = make_function(function=_delay_1, name='delay', arity=1)\ndelay_2 = make_function(function=_delay_2, name='delay', arity=1)\ndelay_3 = make_function(function=_delay_3, name='delay', arity=1)\nts_mean = make_function(function=_ts_mean_numba, name='ts_mean', arity=1)\nts_std = make_function(function=_ts_std_numba, name='ts_std', arity=1)\nts_prod = make_function(function=_ts_prod_numba, name='ts_prod', arity=1)\nts_rank = make_function(function=_ts_rank_numba, name='ts_rank', arity=1)\nts_min = make_function(function=_ts_min_numba, name='ts_min', arity=1)\nts_max = make_function(function=_ts_max_numba, name='ts_max', arity=1)\nts_argmax = make_function(function=_ts_argmax_numba, name='ts_argmax', arity=1)\nts_argmin = make_function(function=_ts_argmin_numba, name='ts_argmin', arity=1)\nts_sum = make_function(function=_ts_sum_numba, name='ts_sum', arity=1)\nts_scale = make_function(function=_ts_scale_numba, name='ts_scale', arity=1)\nts_beta = make_function(function=rolling_regression_beta, name='ts_beta', arity=2)\nts_intercept = make_function(function=rolling_regression_intercept, name='ts_intercept', arity=2)\nts_residuals = make_function(function=rolling_regression_residuals, name='ts_residuals', arity=2)\nts_pearson = make_function(function=rolling_regression_pearson, name='ts_pearson', arity=2)\nts_spearman = make_function(function=rolling_regression_spearman, name='ts_spearman', arity=2)\nts_covariance = make_function(function=rolling_regression_covariance, name='ts_covariance', arity=2)\n\n## Activate The Customized Fitness Function\nmy_metric = make_fitness(function=_my_metric, greater_is_better=True)\n</code></pre>"},{"location":"blog/gplearn/#_4","title":"\u9488\u5bf9\u4e09\u7ef4\u6570\u636e \u65f6\u95f4 \u00d7 \u7279\u5f81 \u00d7 \u80a1\u7968 \u7684\u60c5\u51b5","text":""},{"location":"blog/gplearn/#_5","title":"\u5bf9\u6570\u636e\u7684\u5904\u7406\uff1a","text":"<p>\u8fd9\u65f6\u6211\u4eec\u6240\u6709\u7684\u6846\u67b6\u90fd\u8981\u8fdb\u884c\u4e00\u70b9\u9b54\u6539</p> <p>\u9996\u5148\u662f\u6570\u636e\uff0c\u539f\u59cb\u7684\u91d1\u878d\u6570\u636e\u4e00\u822c\u662f\u4e00\u4e2a\u8868\u683c\u5f62\u5f0f\uff0c\u8bb0\u5f55\u4e86\u4e0d\u540c\u65f6\u95f4\u4e0d\u540c\u80a1\u7968\u7684\u4fe1\u606f\uff0c\u5982\uff1a</p> \u80a1\u7968\u4ee3\u7801 \u4ea4\u6613\u65e5\u671f \u5f00\u76d8\u4ef7 \u6700\u9ad8\u4ef7 \u6700\u4f4e\u4ef7 \u6536\u76d8\u4ef7 \u6210\u4ea4\u91cf \u6210\u4ea4\u989d \u6536\u76ca\u7387 SH000001 2024-01-01 14.71 15.01 14.42 14.46 3678 53197 -0.0092 SH000002 2024-01-01 14.87 15.17 14.57 14.81 2541 37634 0.0101 SH000001 2024-01-02 14.44 14.72 14.15 14.42 2317 33399 -0.0034 SH000002 2024-01-02 14.66 14.95 14.37 14.53 1511 21959 -0.0188 SH000001 2024-01-03 14.33 14.61 14.04 14.05 2672 37554 -0.0250 SH000002 2024-01-03 14.52 14.81 14.23 14.53 1879 27306 -0.0001 <p>\u8fd9\u65f6 \u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4f7f\u7528pandas\u5e93\u4e2d\u7684pivot_table\u5c06\u6570\u636e\u8f6c\u5316\u4e3a\u4e09\u7ef4\u6570\u636e\uff0c\u5373\uff1a</p> <p><code>index_name = '\u4ea4\u6613\u65e5\u671f'</code></p> <p><code>columns_name = '\u80a1\u7968\u4ee3\u7801'</code></p> <p><code>df.pivot_table(index=[index_name], columns=[columns_name], sort=True, dropna=False)</code></p> <p>\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u6709\u4e00\u4e2a \u65f6\u95f4 \u00d7 (\u7279\u5f81 \u00d7 \u80a1\u7968)MultiIndex,level_1\u4e3a\u80a1\u7968\u4ee3\u7801\uff0clevel_0\u4e3a\u65f6\u95f4\uff0c \u7684\u4e09\u7ef4\u7684\u6570\u636e\u8868</p> <p>\u63a5\u7740\u4ee4 <pre><code>X_0_len = len(df.index)\nX_1_len = len(df.columns.levels[0])\nX_2_len = len(df.columns.levels[1])\ndf.to_numpy(dtype=np.double).reshape((X_0_len, X_1_len, X_2_len)\n</code></pre></p> <p>\u6700\u7ec8\u5f97\u5230\u4e86\u4e00\u4e2a \u65f6\u95f4 \u00d7 \u7279\u5f81 \u00d7 \u80a1\u7968 \u7684 numpy \u6570\u7ec4\u3002</p>"},{"location":"blog/gplearn/#_6","title":"\u5bf9\u539f\u59cb\u4ee5\u53ca\u81ea\u5b9a\u4e49\u51fd\u6570\u7684\u5904\u7406\uff1a","text":""},{"location":"blog/gplearn/#_7","title":"\u5bf9\u539f\u59cb\u4ee5\u53ca\u81ea\u5b9a\u4e49\u9002\u5e94\u6027\u51fd\u6570\u7684\u5904\u7406\uff1a","text":""},{"location":"blog/kaggle_GPU/","title":"Kaggle\u81ea\u5e26GPU\u7684\u60c5\u51b5\u8c03\u67e5","text":"<p>\u7701\u6d41\uff1a\u4e0d\u804a\u5185\u5b58\u548c\u786c\u76d8\uff0c\u6ca1\u6211\u5bb6\u91cc\u7684\u597d\u7528\uff0c\u4e00\u580620\u5e74\u7684\u7834\u94dc\u70c2\u94c1</p> <p>T4\u548cP100\u662fNVIDIA\u63a8\u51fa\u7684\u4e24\u79cd\u4e0d\u540c\u578b\u53f7\u7684GPU\uff0c\u5b83\u4eec\u90fd\u57fa\u4e8e\u4e0d\u540c\u7684\u67b6\u6784\u3002\u4e3a\u4e86\u4e86\u89e3\u5b83\u4eec\u4e4b\u95f4\u7684\u7b97\u529b\u5173\u7cfb\uff0c\u6211\u4eec\u53ef\u4ee5\u53c2\u8003\u5b83\u4eec\u5728\u4e0d\u540c\u7cbe\u5ea6\u6570\u636e\u7c7b\u578b\u4e0b\u7684\u7406\u8bba\u7b97\u529b\u503c\u3002</p> <p>\u5bf9\u4e8eGPU\u6765\u8bf4\uff0c\u7b97\u529b\u662f\u8861\u91cf\u5176\u6027\u80fd\u548c\u5904\u7406\u80fd\u529b\u7684\u91cd\u8981\u6307\u6807\u3002\u800c\u7b97\u529b\u503c\u901a\u5e38\u4ee5\u6d6e\u70b9\u8fd0\u7b97\u6bcf\u79d2\uff08FLOPS\uff09\u4e3a\u5355\u4f4d\u8fdb\u884c\u8861\u91cf\u3002\u4e0d\u540c\u7cbe\u5ea6\u6570\u636e\u7c7b\u578b\u5305\u62ec\u5355\u7cbe\u5ea6\uff08FP32\uff09\u3001\u534a\u7cbe\u5ea6\uff08FP16\uff09\u548c\u53cc\u7cbe\u5ea6\uff08FP64\uff09\u3002\u4ee5\u4e0b\u4e3aT4\u548cP100\u7684\u6027\u80fd\u53c2\u6570\u5bf9\u7167\uff1a</p> \u6307\u6807 T4 P100 4070 Ti SUPER Pixel Rate 101.8 GPixel/s 127.6 GPixel/s 250.6 GPixel/s Texture Rate 254.4 GTexel/s 297.7 GTexel/s 689.0 GTexel/s FP16 (half) 65.13 TFLOPS (8:1) 19.05 TFLOPS (8:1) 44.10 TFLOPS (1:1) FP32 (float) 8.141 TFLOPS 9.526 TFLOPS 44.10 TFLOPS <p>\u67b6\u6784\uff1aT4\u57fa\u4e8e\u56fe\u7075\u67b6\u6784\uff0c\u800cP100\u57fa\u4e8e\u5e15\u65af\u5361\u67b6\u6784\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u56fe\u7075\u67b6\u6784\u76f8\u5bf9\u4e8e\u5e15\u65af\u5361\u67b6\u6784\u63d0\u4f9b\u4e86\u66f4\u597d\u7684\u6027\u80fd\u548c\u6548\u7387\u3002</p> <p>\u6027\u80fd\uff1a\u603b\u4f53\u800c\u8a00\uff0cT4\u76f8\u5bf9\u4e8eP100\u63d0\u4f9b\u4e86\u66f4\u597d\u7684\u6027\u80fd\u3002T4\u62e5\u6709\u66f4\u591a\u7684CUDA\u6838\u5fc3\u548c\u5f20\u91cf\u6838\u5fc3\uff0c\u8fd9\u53ef\u4ee5\u5bfc\u81f4\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u7684\u8bad\u7ec3\u65f6\u95f4\u66f4\u5feb\uff0c\u7279\u522b\u662f\u90a3\u4e9b\u5229\u7528\u5f20\u91cf\u6838\u5fc3\u8fdb\u884c\u77e9\u9635\u4e58\u6cd5\u7b49\u6280\u672f\u7684\u6a21\u578b\u3002</p> <p>\u5185\u5b58\uff1aT4 GPU\u901a\u5e38\u914d\u5907\u4e0d\u540c\u5927\u5c0f\u7684\u5185\u5b58\uff0c\u5f80\u5f80\u4f4e\u4e8eP100\u7684\u6700\u5927\u5185\u5b58\u5bb9\u91cf\u3002\u7136\u800c\uff0cT4\u67b6\u6784\u548c\u5185\u5b58\u914d\u7f6e\u5141\u8bb8\u66f4\u9ad8\u7684\u5185\u5b58\u5e26\u5bbd\uff0c\u8fd9\u53ef\u4ee5\u63d0\u9ad8\u6027\u80fd\u3002</p>"},{"location":"blog/kaggle_jane_street/","title":"Kaggle jane street","text":""},{"location":"blog/kaggle_jane_street/#_1","title":"\u6982\u89c8","text":"<p>\u5728\u8fd9\u573a\u7531 Jane Street \u4e3b\u529e\u7684\u6bd4\u8d5b\u4e2d\uff0c\u60a8\u5c06\u5229\u7528\u4ece\u751f\u4ea7\u7cfb\u7edf\u4e2d\u83b7\u5f97\u7684\u771f\u5b9e\u6570\u636e\u5efa\u7acb\u4e00\u4e2a\u6a21\u578b\uff0c\u4ece\u800c\u4e86\u89e3\u6210\u529f\u4ea4\u6613\u7684\u65e5\u5e38\u6311\u6218\u3002  \u8fd9\u9879\u6311\u6218\u51f8\u663e\u4e86\u91d1\u878d\u5e02\u573a\u5efa\u6a21\u7684\u56f0\u96be\uff0c\u5305\u62ec\u80d6\u5c3e\u5206\u5e03\u3001\u975e\u5e73\u7a33\u65f6\u95f4\u5e8f\u5217\u548c\u5e02\u573a\u884c\u4e3a\u7684\u7a81\u7136\u8f6c\u53d8\u3002</p>"},{"location":"blog/kaggle_jane_street/#description","title":"Description","text":"<p>\u5728\u5904\u7406\u73b0\u4ee3\u91d1\u878d\u5e02\u573a\u7684\u5efa\u6a21\u95ee\u9898\u65f6\uff0c\u6709\u5f88\u591a\u7406\u7531\u8ba9\u4eba\u76f8\u4fe1\u4f60\u8bd5\u56fe\u89e3\u51b3\u7684\u95ee\u9898\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u5373\u4f7f\u6487\u5f00\u91d1\u878d\u5de5\u5177\u7684\u4ef7\u683c\u7406\u6027\u5730\u53cd\u6620\u4e86\u6240\u6709\u53ef\u7528\u4fe1\u606f\u8fd9\u4e00\u4fe1\u5ff5\u4e0d\u8c08\uff0c\u4f60\u4e5f\u4e0d\u5f97\u4e0d\u5904\u7406\u65f6\u95f4\u5e8f\u5217\u548c\u5206\u5e03\u95ee\u9898\uff0c\u800c\u8fd9\u4e9b\u95ee\u9898\u7684\u7279\u6027\u662f\u4f60\u5728\u5176\u4ed6\u7c7b\u578b\u7684\u5efa\u6a21\u95ee\u9898\u4e2d\u4e0d\u4f1a\u9047\u5230\u7684\u3002\u5206\u5e03\u53ef\u80fd\u662f\u8457\u540d\u7684\u80a5\u5c3e\u5206\u5e03\uff0c\u65f6\u95f4\u5e8f\u5217\u53ef\u80fd\u662f\u975e\u5e73\u7a33\u7684\uff0c\u800c\u4e14\u6570\u636e\u53ef\u80fd\u901a\u5e38\u4e0d\u6ee1\u8db3\u5f88\u591a\u6210\u529f\u7684\u7edf\u8ba1\u65b9\u6cd5\u6240\u4f9d\u8d56\u7684\u57fa\u672c\u5047\u8bbe\u3002\u6b64\u5916\uff0c\u91d1\u878d\u5e02\u573a\u5f52\u6839\u7ed3\u5e95\u662f\u4eba\u7c7b\u7684\u6d3b\u52a8\uff0c\u6d89\u53ca\u5927\u91cf\u4e2a\u4eba\u548c\u673a\u6784\uff0c\u8fd9\u4e9b\u4e2a\u4eba\u548c\u673a\u6784\u968f\u7740\u6280\u672f\u8fdb\u6b65\u548c\u793e\u4f1a\u53d8\u8fc1\u800c\u4e0d\u65ad\u53d8\u5316\uff0c\u5e76\u5bf9\u51fa\u73b0\u7684\u7ecf\u6d4e\u548c\u5730\u7f18\u653f\u6cbb\u95ee\u9898\u505a\u51fa\u53cd\u5e94\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u5f00\u59cb\u4e86\u89e3\u5176\u4e2d\u7684\u56f0\u96be\uff01</p> <p>\u5728\u8fd9\u9879\u6311\u6218\u4e2d\uff0c\u6211\u4eec\u8981\u6c42\u60a8\u5229\u7528\u4ece\u6211\u4eec\u7684\u4e00\u4e9b\u751f\u4ea7\u7cfb\u7edf\u4e2d\u83b7\u5f97\u7684\u771f\u5b9e\u6570\u636e\u5efa\u7acb\u4e00\u4e2a\u6a21\u578b\u3002\u8fd9\u4e9b\u6570\u636e\u975e\u5e38\u8d34\u5207\u5730\u53cd\u6620\u4e86\u6211\u4eec\u6bcf\u5929\u4e3a\u5728\u73b0\u4ee3\u91d1\u878d\u5e02\u573a\u4e2d\u6210\u529f\u4ea4\u6613\u800c\u5fc5\u987b\u505a\u7684\u4e00\u4e9b\u4e8b\u60c5\u3002\u6211\u4eec\u6536\u96c6\u4e86\u4e0e\u6211\u4eec\u8fd0\u884c\u81ea\u52a8\u4ea4\u6613\u7b56\u7565\u7684\u5e02\u573a\u76f8\u5173\u7684\u7279\u5f81\u548c\u54cd\u5e94\u53d8\u91cf\uff0c\u5e76\u5173\u6ce8\u662f\u5426\u62e5\u6709\u826f\u597d\u7684\u57fa\u7840\u6a21\u578b\u3002\u4e3a\u4e86\u65e2\u80fd\u89e3\u51b3\u4e0e\u6211\u4eec\u4e1a\u52a1\u76f8\u5173\u7684\u6311\u6218\u6027\u95ee\u9898\uff0c\u53c8\u80fd\u5c0a\u91cd\u6211\u4eec\u4ea4\u6613\u7684\u4e13\u6709\u6027\u548c\u9ad8\u5ea6\u7ade\u4e89\u6027\uff0c\u60a8\u4f1a\u6ce8\u610f\u5230\u6211\u4eec\u5bf9\u6570\u636e\u4e2d\u7684\u4e00\u4e9b\u7279\u5f81\u548c\u54cd\u5e94\u8005\u8fdb\u884c\u4e86\u533f\u540d\u548c\u8f7b\u5ea6\u6a21\u7cca\u5316\u5904\u7406\u3002\u8fd9\u4e9b\u4fee\u6539\u5e76\u6ca1\u6709\u6539\u53d8\u5f53\u524d\u95ee\u9898\u7684\u672c\u8d28\uff0c\u4f46\u5374\u4f7f\u6211\u4eec\u80fd\u591f\u4e3a\u60a8\u63d0\u4f9b\u4e00\u9879\u8270\u5de8\u7684\u4efb\u52a1\uff0c\u6709\u610f\u4e49\u5730\u8bf4\u660e\u6211\u4eec\u5728 Jane Street \u6240\u505a\u7684\u5de5\u4f5c\u3002</p> <p>Jane Street \u6570\u5341\u5e74\u6765\u4e00\u76f4\u575a\u6301\u4e0d\u61c8\u5730\u5728\u4ea4\u6613\u7684\u5404\u4e2a\u65b9\u9762\u8fdb\u884c\u521b\u65b0\uff0c\u5e76\u5efa\u7acb\u673a\u5668\u5b66\u4e60\u6a21\u578b\u6765\u5e2e\u52a9\u6211\u4eec\u505a\u51fa\u51b3\u7b56\u3002\u8fd9\u4e9b\u6a21\u578b\u5e2e\u52a9\u6211\u4eec\u6bcf\u5929\u5728\u5168\u7403 200 \u591a\u4e2a\u4ea4\u6613\u573a\u6240\u79ef\u6781\u4ea4\u6613\u6570\u5343\u79cd\u91d1\u878d\u4ea7\u54c1\u3002\u867d\u7136\u8fd9\u9879\u6311\u6218\u53ea\u662f Jane Street \u5458\u5de5\u65e5\u5e38\u5de5\u4f5c\u4e2d\u5b9a\u91cf\u95ee\u9898\u7684\u4e00\u5c0f\u90e8\u5206\uff0c\u4f46\u6211\u4eec\u975e\u5e38\u6709\u5174\u8da3\u4e86\u89e3 Kaggle \u793e\u533a\u5c06\u5982\u4f55\u5e94\u5bf9\u8fd9\u9879\u6311\u6218\uff0c\u5e76\u4e0e\u60a8\u4e00\u8d77\u63a2\u8ba8\u60a8\u7684\u95ee\u9898\u89e3\u51b3\u65b9\u6848\uff01</p>"},{"location":"blog/kaggle_jane_street/#_2","title":"\u8bc4\u4f30\u89c4\u5219","text":"<p>\u5bf9\u63d0\u4ea4\u7684\u4fe1\u606f\u8fdb\u884c\u8bc4\u4f30\u7684\u8bc4\u5206\u51fd\u6570\u5b9a\u4e49\u4e3a responder_6 \u7684\u6837\u672c\u52a0\u6743\u96f6\u5747\u503c R \u5e73\u65b9\u5f97\u5206 (R2)\u3002\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b\uff1a</p> \\[\\mathrm{R}^2=1-\\frac{\\sum w_i(y_i-\\hat{y_i})^2}{\\sum w_iy_i^2},\\] <p>\u5176\u4e2d \\(y_i\\) \u662f\u7b2c \\(i\\) \u4e2a\u6837\u672c\u7684\u54cd\u5e94\u53d8\u91cf\uff0c\\(\\hat{y_i}\\) \u662f\u9884\u6d4b\u503c\uff0c\\(w_i\\) \u662f\u7b2c \\(i\\) \u4e2a\u6837\u672c\u7684\u6743\u91cd\u3002</p>"},{"location":"blog/kaggle_jane_street/#_3","title":"\u63d0\u4ea4\u6587\u4ef6","text":"<p>\u63d0\u4ea4\u6587\u4ef6 \u60a8\u5fc5\u987b\u4f7f\u7528\u6240\u63d0\u4f9b\u7684\u8bc4\u4f30 API \u63d0\u4ea4\u53c2\u8d5b\u4f5c\u54c1\uff0c\u4ee5\u786e\u4fdd\u6a21\u578b\u4e0d\u4f1a\u5728\u65f6\u95f4\u4e0a\u5411\u524d\u63a8\u79fb\u3002 \u66f4\u591a\u8be6\u60c5\uff0c\u8bf7\u53c2\u9605\u672c\u793a\u4f8b\u7b14\u8bb0\u672c\u3002</p>"},{"location":"blog/kaggle_jane_street/#_4","title":"\u6570\u636e\u96c6\u8bf4\u660e","text":"<p>\u7ade\u8d5b\u6570\u636e\u96c6\u7531\u4e00\u7ec4\u5305\u542b 79 \u4e2a\u7279\u5f81\u548c 9 \u4e2a\u54cd\u5e94\u53d8\u91cf \u7684\u65f6\u95f4\u5e8f\u5217\u7ec4\u6210\uff0c\u8fd9\u4e9b\u6570\u636e\u867d\u5df2\u533f\u540d\uff0c\u4f46\u4ee3\u8868\u4e86\u771f\u5b9e\u7684\u5e02\u573a\u6570\u636e\u3002\u6bd4\u8d5b\u7684\u76ee\u6807\u662f\u9884\u6d4b\u5176\u4e2d\u4e00\u4e2a\u54cd\u5e94\u8005\uff08\u5373 responder_6\uff09\u672a\u6765\u6700\u957f 6 \u4e2a\u6708\u7684\u8d70\u52bf\u3002</p> <p>\u60a8\u5fc5\u987b\u4f7f\u7528\u6240\u63d0\u4f9b\u7684 Python \u8bc4\u4f30 API \u63d0\u4ea4\u6bd4\u8d5b\uff0c\u8be5 API \u6309\u65f6\u95f4\u987a\u5e8f\u63d0\u4f9b\u6d4b\u8bd5\u96c6\u6570\u636e\u3002\u8981\u4f7f\u7528 API\uff0c\u8bf7\u6309\u7167\u672c\u624b\u518c\u4e2d\u7684\u793a\u4f8b\u64cd\u4f5c\u3002(\u8bf7\u6ce8\u610f\uff0c\u8be5 API \u4e0e\u6211\u4eec\u5728\u4ee5\u5f80\u9884\u6d4b\u7ade\u8d5b\u4e2d\u4f7f\u7528\u7684\u4f20\u7edf\u65f6\u5e8f API \u4e0d\u540c\uff09\u3002</p>"},{"location":"blog/kaggle_jane_street/#_5","title":"\u7ade\u8d5b\u9636\u6bb5\u548c\u6570\u636e\u66f4\u65b0","text":"<p>\u6839\u636e\u9884\u6d4b\u4efb\u52a1\uff0c\u7ade\u8d5b\u5c06\u5206\u4e24\u4e2a\u9636\u6bb5\u8fdb\u884c\uff1a </p> <ol> <li>\u4f7f\u7528\u5386\u53f2\u6570\u636e\u6d4b\u8bd5\u96c6\u7684\u6a21\u578b\u8bad\u7ec3\u9636\u6bb5\u3002\u8be5\u6d4b\u8bd5\u96c6\u7ea6\u6709 450 \u4e07\u884c\u3002</li> </ol> <p>(\u4e00\u4e2apartition_id=0\u7684parquet\u6587\u4ef6\u6709194\u4e07\u884c\uff0c\u884c\u7ec4\uff08\u662f\u603b\u884c\u6570\u7684\u5206\u533a\uff0c\u5728\u8f83\u5927\u7684\u6587\u4ef6\u4e2d\u53ef\u80fd\u6709\u4e0d\u6b62\u4e00\u4e2a\u884c\u7ec4\uff0c\u884c\u7ec4\u5177\u6709\u8be5\u7ec4\u4e2d\u6240\u6709\u884c\u7684\u5217\u6570\u636e\uff0cParquet\u4e2d\u7684\u4fe1\u606f\u662f\u6309\u5217\u7ec4\u7ec7\u7684\uff09\u4e3a\uff1a7)\u3002</p> <ol> <li>\u9884\u6d4b\u9636\u6bb5\uff0c\u6d4b\u8bd5\u96c6\u5c06\u5728\u63d0\u4ea4\u622a\u6b62\u540e\u6536\u96c6\u3002\u8be5\u6d4b\u8bd5\u96c6\u7684\u5927\u5c0f\u5e94\u4e0e\u7b2c\u4e00\u9636\u6bb5\u7684\u6d4b\u8bd5\u96c6\u5927\u81f4\u76f8\u540c\u3002 </li> </ol> <p>\u4e3a\u4e86\u5e2e\u52a9\u60a8\u64b0\u5199\u7a33\u5065\u7684\u62a5\u544a\uff0c\u5728\u6a21\u578b\u8bad\u7ec3\u9636\u6bb5\u7684\u6700\u540e\u51e0\u5468\uff0c\u6211\u4eec\u5c06\u6269\u5c55\u516c\u5171\u6d4b\u8bd5\u96c6\uff0c\u4f7f\u5176\u5305\u542b\u66f4\u63a5\u8fd1\u62a5\u544a\u63d0\u4ea4\u622a\u6b62\u65e5\u671f\u7684\u6570\u636e\u3002\u8be5\u6269\u5c55\u96c6\u4e0a\u7684\u9884\u6d4b\u5c06\u4e0d\u8ba1\u5206\u3002</p> <p>\u5728\u9884\u6d4b\u9636\u6bb5\u5f00\u59cb\u65f6\uff0c\u672a\u8bc4\u5206\u7684\u516c\u5171\u6d4b\u8bd5\u96c6\u5c06\u5ef6\u957f\u81f3\u6a21\u578b\u8bad\u7ec3\u9636\u6bb5\u7684\u6700\u540e\u4e00\u5929\uff0c\u79c1\u4eba\u6d4b\u8bd5\u96c6\u5927\u7ea6\u6bcf\u4e24\u5468\u66f4\u65b0\u4e00\u6b21\u3002\u6bcf\u6b21\u66f4\u65b0\u65f6\u90fd\u5c06\u91cd\u65b0\u8bc4\u5206\u3002</p> <p>\u5728\u9884\u6d4b\u9636\u6bb5\uff0c\u8bc4\u4f30 API \u5c06\u63d0\u4f9b\u4ece\u516c\u5171\u6d4b\u8bd5\u96c6\u5f00\u59cb\u5230\u79c1\u6709\u6d4b\u8bd5\u96c6\u7ed3\u675f\u7684\u6d4b\u8bd5\u6570\u636e\u3002\u60a8\u5fc5\u987b\u5728\u6bcf\u4e2a\u65f6\u95f4\u6b65\u8fdb\u884c\u9884\u6d4b\uff0c\u4f46\u5728\u6b64\u9636\u6bb5\uff0c\u53ea\u6709\u5bf9\u79c1\u6709\u96c6\u7684\u9884\u6d4b\u8fdb\u884c\u8bc4\u5206\u3002(\u5982\u679c\u60a8\u613f\u610f\uff0c\u53ef\u4ee5\u5bf9\u672a\u8ba1\u5206\u7684\u7247\u6bb5\u8fdb\u884c 0.0 \u9884\u6d4b\uff09\u3002</p>"},{"location":"blog/kaggle_jane_street/#discussion","title":"Discussion","text":""},{"location":"blog/kaggle_jane_street/#_6","title":"\u5bfc\u5165\u6570\u636e\u8282\u7ea6\u65f6\u95f4\u548c\u8d44\u6e90\u7684\u5c0f\u6280\u5de7\uff1a","text":"<p>\u8fd9\u91cc\u7684\u8bad\u7ec3\u6570\u636e\u96c6\u5206\u4e3a 10 \u4e2a\u90e8\u5206\uff0c\u6bcf\u4e2a\u90e8\u5206\u6709 1 \u4e2a parquet \u6587\u4ef6\u3002 \u5927\u591a\u6570\u4f7f\u7528 pandas \u7684\u4eba\u4f1a\u503e\u5411\u4e8e\u5728\u4e00\u4e2a\u5faa\u73af\u4e2d\u624b\u52a8\u63d0\u4f9b\u6587\u4ef6\u5939\u8def\u5f84\uff0c\u5e76\u6309\u987a\u5e8f\u5bfc\u5165\u6587\u4ef6\u3002 \u4f46\u5728\u8fd9\u91cc\u4e0d\u9700\u8981\u8fd9\u6837\u505a\uff0c\u56e0\u4e3a polars \u4f1a\u81ea\u52a8\u5b8c\u6210\u8fd9\u9879\u5de5\u4f5c\u3002 \u53ea\u9700\u4f7f\u7528\u4e0b\u9762\u7684\u4ee3\u7801\uff0c\u5c31\u53ef\u4ee5\u4e00\u6b21\u6027\u8bfb\u5165\u6240\u6709\u76f8\u5173\u6587\u4ef6\uff1a</p> <p><pre><code>import polars as pl\ntrain = \\\npl.scan_parquet(\n    f\"/kaggle/input/jane-street-real-time-market-data-forecasting/train.parquet\"\n).\\\nselect(\n    pl.int_range(pl.len(), dtype=pl.UInt64).alias(\"id\"),\n    pl.all(),\n)\n</code></pre> Polars \u4f1a\u81ea\u52a8\u626b\u63cf\u76ee\u5f55\u8def\u5f84\uff0c\u4e00\u6b21\u6027\u8bfb\u5165 10 \u4e2a\u6587\u4ef6\u3002 \u7136\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528 partition_id \u5217\u6839\u636e\u81ea\u5df1\u7684\u9700\u8981\u8fc7\u6ee4\u60f0\u6027\u6570\u636e\u6846\u3002</p> <p>```py title = \"demo.py\" import pyarrow as pa from pyarrow import csv import pyarrow.compute as pc import pyarrow.parquet as pq</p> <p>parquet_file = pq.ParquetFile(\"D:\\kaggle\\train.parquet\\partition_id=0\\part-0.parquet\")</p> <p>dir(parquet_file) parquet_file.schema_arrow metadata = parquet_file.metadata print(metadata) print(metadata.serialized_size) type(metadata) print(parquet_file.schema) group = metadata.row_group(0) print(group) dir(group) vendor_col = group.column(0) print(vendor_col) tip_col = group.column(13) print(tip_col) <pre><code>\u7ed3\u679c:\n```py\n&lt;pyarrow._parquet.FileMetaData object at 0x000001E328A3DEA0&gt;\n  created_by: Polars\n  num_columns: 92\n  num_rows: 1944210\n  num_row_groups: 7\n  format_version: 1.0\n  serialized_size: 62142\n62142\n&lt;pyarrow._parquet.ParquetSchema object at 0x000001E32A4C46C0&gt;\nrequired group field_id=-1 root {\n  optional int32 field_id=-1 date_id (Int(bitWidth=16, isSigned=true));\n  optional int32 field_id=-1 time_id (Int(bitWidth=16, isSigned=true));\n  optional int32 field_id=-1 symbol_id (Int(bitWidth=8, isSigned=true));\n  optional float field_id=-1 weight;\n  optional float field_id=-1 feature_00;\n  optional float field_id=-1 feature_01;\n  optional float field_id=-1 feature_02;\n  optional float field_id=-1 feature_03;\n  optional float field_id=-1 feature_04;\n  optional float field_id=-1 feature_05;\n  optional float field_id=-1 feature_06;\n  optional float field_id=-1 feature_07;\n  optional float field_id=-1 feature_08;\n  optional int32 field_id=-1 feature_09 (Int(bitWidth=8, isSigned=true));\n  optional int32 field_id=-1 feature_10 (Int(bitWidth=8, isSigned=true));\n  optional int32 field_id=-1 feature_11 (Int(bitWidth=16, isSigned=true));\n  optional float field_id=-1 feature_12;\n  optional float field_id=-1 feature_13;\n  optional float field_id=-1 feature_14;\n  optional float field_id=-1 feature_15;\n  optional float field_id=-1 feature_16;\n  optional float field_id=-1 feature_17;\n  optional float field_id=-1 feature_18;\n  optional float field_id=-1 feature_19;\n  optional float field_id=-1 feature_20;\n  optional float field_id=-1 feature_21;\n  optional float field_id=-1 feature_22;\n  optional float field_id=-1 feature_23;\n  optional float field_id=-1 feature_24;\n  optional float field_id=-1 feature_25;\n  optional float field_id=-1 feature_26;\n  optional float field_id=-1 feature_27;\n  optional float field_id=-1 feature_28;\n  optional float field_id=-1 feature_29;\n  optional float field_id=-1 feature_30;\n  optional float field_id=-1 feature_31;\n  optional float field_id=-1 feature_32;\n  optional float field_id=-1 feature_33;\n  optional float field_id=-1 feature_34;\n  optional float field_id=-1 feature_35;\n  optional float field_id=-1 feature_36;\n  optional float field_id=-1 feature_37;\n  optional float field_id=-1 feature_38;\n  optional float field_id=-1 feature_39;\n  optional float field_id=-1 feature_40;\n  optional float field_id=-1 feature_41;\n  optional float field_id=-1 feature_42;\n  optional float field_id=-1 feature_43;\n  optional float field_id=-1 feature_44;\n  optional float field_id=-1 feature_45;\n  optional float field_id=-1 feature_46;\n  optional float field_id=-1 feature_47;\n  optional float field_id=-1 feature_48;\n  optional float field_id=-1 feature_49;\n  optional float field_id=-1 feature_50;\n  optional float field_id=-1 feature_51;\n  optional float field_id=-1 feature_52;\n  optional float field_id=-1 feature_53;\n  optional float field_id=-1 feature_54;\n  optional float field_id=-1 feature_55;\n  optional float field_id=-1 feature_56;\n  optional float field_id=-1 feature_57;\n  optional float field_id=-1 feature_58;\n  optional float field_id=-1 feature_59;\n  optional float field_id=-1 feature_60;\n  optional float field_id=-1 feature_61;\n  optional float field_id=-1 feature_62;\n  optional float field_id=-1 feature_63;\n  optional float field_id=-1 feature_64;\n  optional float field_id=-1 feature_65;\n  optional float field_id=-1 feature_66;\n  optional float field_id=-1 feature_67;\n  optional float field_id=-1 feature_68;\n  optional float field_id=-1 feature_69;\n  optional float field_id=-1 feature_70;\n  optional float field_id=-1 feature_71;\n  optional float field_id=-1 feature_72;\n  optional float field_id=-1 feature_73;\n  optional float field_id=-1 feature_74;\n  optional float field_id=-1 feature_75;\n  optional float field_id=-1 feature_76;\n  optional float field_id=-1 feature_77;\n  optional float field_id=-1 feature_78;\n  optional float field_id=-1 responder_0;\n  optional float field_id=-1 responder_1;\n  optional float field_id=-1 responder_2;\n  optional float field_id=-1 responder_3;\n  optional float field_id=-1 responder_4;\n  optional float field_id=-1 responder_5;\n  optional float field_id=-1 responder_6;\n  optional float field_id=-1 responder_7;\n  optional float field_id=-1 responder_8;\n}\n\n&lt;pyarrow._parquet.RowGroupMetaData object at 0x000001E32BBFD810&gt;\n  num_columns: 92\n  num_rows: 277744\n  total_byte_size: 84349109\n&lt;pyarrow._parquet.ColumnChunkMetaData object at 0x000001E32BBFD310&gt;\n  file_offset: 248\n  file_path: \n  physical_type: INT32\n  num_values: 277744\n  path_in_schema: date_id\n  is_stats_set: True\n  statistics:\n    &lt;pyarrow._parquet.Statistics object at 0x000001E32BBFD7C0&gt;\n      has_min_max: True\n      min: 0\n      max: 32\n      null_count: 0\n      distinct_count: 0\n      num_values: 277744\n      physical_type: INT32\n      logical_type: Int(bitWidth=16, isSigned=true)\n      converted_type (legacy): INT_16\n  compression: ZSTD\n  encodings: ('PLAIN', 'RLE', 'RLE_DICTIONARY')\n  has_dictionary_page: False\n  dictionary_page_offset: None\n  data_page_offset: 4\n  total_compressed_size: 244\n  total_uncompressed_size: 310\n&lt;pyarrow._parquet.ColumnChunkMetaData object at 0x000001E32A471950&gt;\n  file_offset: 4171261\n  file_path: \n  physical_type: INT32\n  num_values: 277744\n  path_in_schema: feature_09\n  is_stats_set: True\n  statistics:\n    &lt;pyarrow._parquet.Statistics object at 0x000001E32BBFD5E0&gt;\n      has_min_max: True\n      min: 4\n      max: 81\n      null_count: 0\n      distinct_count: 0\n      num_values: 277744\n      physical_type: INT32\n      logical_type: Int(bitWidth=8, isSigned=true)\n      converted_type (legacy): INT_8\n  compression: ZSTD\n  encodings: ('PLAIN', 'RLE', 'RLE_DICTIONARY')\n  has_dictionary_page: False\n  dictionary_page_offset: None\n  data_page_offset: 4170557\n  total_compressed_size: 704\n  total_uncompressed_size: 139044\n</code></pre></p>"},{"location":"blog/opt_course_report/","title":"\u5f15\u8a00:","text":"<p>\u5f71\u54cd\u529b\u6295\u8d44\u2014\u2014\u5e7f\u4e49\u4e0a\u5b9a\u4e49\u4e3a\u4e0d\u4ec5\u8003\u8651\u8d22\u52a1\u76ee\u6807\uff0c\u8fd8\u8003\u8651\u652f\u6301\u67d0\u4e9b\u793e\u4f1a\u4f18\u5148\u4e8b\u9879\u548c\u8bae\u7a0b\u7684\u5176\u4ed6\u76ee\u6807\u7684\u6295\u8d44\uff0c\u8fd1\u5e74\u6765\u5f15\u8d77\u4e86\u8d8a\u6765\u8d8a\u591a\u7684\u5173\u6ce8\u3002\u8fd9\u4e2a\u6982\u5ff5\u6700\u521d\u662f\u901a\u8fc7\u5e73\u6c11\u4e3b\u4e49\u8005\u52aa\u529b\u5f15\u5165\u7684\uff0c\u901a\u8fc7\u9f13\u52b1\u673a\u6784\u6295\u8d44\u8005\u4ece\u4ece\u4e8b\u88ab\u6279\u8bc4\u8005\u89c6\u4e3a\u4e0d\u9053\u5fb7\u3001\u4e0d\u9053\u5fb7\u6216\u5176\u4ed6\u4ee4\u4eba\u53cd\u611f\u7684\u4e1a\u52a1\u7684\u516c\u53f8\u4e2d\u64a4\u8d44\uff08\u4f8b\u5982\uff0c\u5265\u524a\u7ae5\u5de5;\u9ed8\u8bb8\u652f\u6301\u79cd\u65cf\u9694\u79bb\u6216\u5b97\u6559\u8feb\u5bb3;\u6216\u8d4c\u535a\u3001\u8272\u60c5\u3001\u9152\u7cbe\u3001\u70df\u8349\u548c\u67aa\u652f\u4e1a\u52a1\uff08\u7edf\u79f0\u4e3a\u201c\u7f6a\u6076\u80a1\u7968\u201d\uff09\uff09\u3002\u7136\u800c\uff0c\u5f71\u54cd\u529b\u6295\u8d44\u7684\u8303\u56f4\u5df2\u663e\u8457\u6269\u5927\uff0c\u5305\u62ec\u4f7f\u7528\u73af\u5883\u3001\u793e\u4f1a\u548c\u6cbb\u7406 \uff08ESG\uff09 \u6807\u51c6\u7684\u6295\u8d44\u4ea7\u54c1\u3001\u201c\u7eff\u8272\u201d\u503a\u5238\uff0c\u4ee5\u53ca\u5bfb\u6c42\u793e\u4f1a\u5f71\u54cd\u529b\u548c\u8d22\u52a1\u56de\u62a5\u7684\u79c1\u52df\u80a1\u6743\u57fa\u91d1\u3002</p> <p>\u5f71\u54cd\u529b\u6295\u8d44\u7684\u53d7\u6b22\u8fce\u7a0b\u5ea6\u548c\u7ba1\u7406\u7684\u8d44\u4ea7\u7684\u589e\u957f\u4e5f\u5f15\u53d1\u4e86\u5f3a\u70c8\u53cd\u5bf9\u3002\u4f8b\u5982\uff0c2022 \u5e74 8 \u6708 4 \u65e5\uff0c19 \u4e2a\u5dde\u7684\u603b\u68c0\u5bdf\u957f\u5411\u8d1d\u83b1\u5fb7\u53d1\u9001\u4e86\u4e00\u5c01\u7531\u8be5\u5dde\u7684\u603b\u68c0\u5bdf\u957f\u7b7e\u7f72\u7684\u4fe1\u51fd\uff0c\u8868\u8fbe\u4e86\u5bf9\u8d44\u4ea7\u7ba1\u7406\u516c\u53f8\u7684 ESG \u653f\u7b56\u4ee5\u53ca\u8fd9\u4e9b\u653f\u7b56\u53ef\u80fd\u5982\u4f55\u5f71\u54cd\u5176\u6301\u6709\u7684\u5316\u77f3\u71c3\u6599\u80fd\u6e90\u516c\u53f8\u7684\u62c5\u5fe7\uff1a\"\u8d1d\u83b1\u5fb7\u9488\u5bf9\u5404\u79cd\u6cbb\u7406\u76ee\u6807\u7684\u884c\u52a8\u53ef\u80fd\u8fdd\u53cd\u591a\u4e2a\u5dde\u7684\u6cd5\u5f8b\u3002McCombe \u5148\u751f\u7684\u4fe1\u58f0\u79f0\u9075\u5b88\u6211\u4eec\u7684\u4fe1\u6258\u6cd5\uff0c\u56e0\u4e3a\u8d1d\u83b1\u5fb7\u7684\u79c1\u4eba\u52a8\u673a\u4e0e\u5176\u516c\u5f00\u627f\u8bfa\u548c\u58f0\u660e\u4e0d\u540c\u3002\u8fd9\u53ef\u80fd\u4e0d\u8db3\u4ee5\u6ee1\u8db3\u8981\u6c42\u4ec5\u5173\u6ce8\u8d22\u52a1\u56de\u62a5\u7684\u5dde\u6cd5\u5f8b\"\u3002\u9274\u4e8e\u8fdd\u53cd\u53d7\u6258\u8d23\u4efb\u7684\u6cd5\u5f8b\u5904\u7f5a\u6d89\u53ca\u4e2a\u4eba\u5f25\u8865\u5ba2\u6237\u906d\u53d7\u7684\u4efb\u4f55\u635f\u5931\uff0c\u5e76\u5c06\u53d7\u6258\u4eba\u5411\u6240\u8ff0\u5ba2\u6237\u63d0\u4f9b\u670d\u52a1\u6240\u83b7\u5f97\u7684\u4efb\u4f55\u5229\u6da6\u9000\u8fd8\u7ed9\u5ba2\u6237\uff0c\u56e0\u6b64\u8fd9\u4e9b\u90fd\u4e0d\u662f\u5c0f\u95ee\u9898\u30023 </p> <p>\u90a3\u4e48\uff0c\u6211\u4eec\u5982\u4f55\u534f\u8c03\u5f71\u54cd\u529b\u6295\u8d44\u4e0e\u4fe1\u6258\u4e49\u52a1\u5462\uff1f\u7b54\u6848\u5728\u4e8e\u5f00\u53d1\u4e00\u4e2a\u6846\u67b6\uff0c\u5728\u8fd9\u4e2a\u6846\u67b6\u4e2d\u53ef\u4ee5\u8861\u91cf\u548c\u62ab\u9732\u5f71\u54cd\u529b\u6295\u8d44\u7684\u8d22\u52a1\u5f71\u54cd\uff0c\u8fd9\u4e5f\u662f\u672c\u6587\u7684\u4e3b\u9898\u3002</p> <p>\u4f20\u7edf\u6211\u4eec\u901a\u5e38\u80fd\u60f3\u5230\u5c06\u5f71\u54cd\u529b\u6295\u8d44\u89c6\u4e3a\u4e00\u4e2a\u6807\u51c6\u7684\u6295\u8d44\u7ec4\u5408\u9009\u62e9\u95ee\u9898\uff0c\u5176\u4e2d\u5305\u542b\u4e0e\u6807\u7684\u8bc1\u5238\u7684\u793e\u4f1a\u5f71\u54cd\u7a0b\u5ea6\u76f8\u5173\u7684\u989d\u5916\u9650\u5236\uff0c\u56e0\u6b64\u610f\u5473\u7740\u4e0e\u4e0d\u53d7\u7ea6\u675f\u7684\u60c5\u51b5\u76f8\u6bd4\uff0c\u98ce\u9669/\u56de\u62a5\u72b6\u51b5\u5e76\u4e0d\u4f18\u8d8a\u3002\u9274\u4e8e\u7ea6\u675f\u6295\u8d44\u7ec4\u5408\u5305\u542b\u65e0\u7ea6\u675f\u7248\u672c\u7684\u8bc1\u5238\u7684\u9002\u5f53\u5b50\u96c6\uff0c\u6570\u5b66\u903b\u8f91\u8868\u660e\uff0c\u7ea6\u675f\u6700\u4f18\u5145\u5176\u91cf\u7b49\u4e8e\u65e0\u7ea6\u675f\u7684\u6700\u4f18\uff0c\u6216\u8005\u66f4\u6709\u53ef\u80fd\u662f\u52a3\u7b49\u3002</p> <p>\u7136\u800c\uff0c\u7ea6\u675f\u6700\u4f18\u7684\u975e\u4f18\u8d8a\u6027\u4f9d\u8d56\u4e8e\u4e00\u4e2a\u51e0\u4e4e\u4ece\u672a\u660e\u786e\u8bf4\u660e\u7684\u5173\u952e\u5047\u8bbe;\u5047\u8bbe\u8be5\u7ea6\u675f\u5728\u7edf\u8ba1\u4e0a\u72ec\u7acb\u4e8e\u8bc1\u5238\u7684\u56de\u62a5\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u8fd9\u6837\u7684\u5047\u8bbe\u662f\u6709\u9053\u7406\u7684;\u60f3\u8c61\u4e00\u4e0b\uff0c\u4f7f\u7528\u5305\u542b\u8d28\u6570\u7684\u7edf\u4e00\u8bc1\u5238\u8bc6\u522b\u7a0b\u5e8f\u59d4\u5458\u4f1a \uff08CUSIP\uff09 \u6807\u8bc6\u7b26\u6784\u5efa\u4e00\u4e2a\u8bc1\u5238\u5b50\u96c6\u3002\u663e\u7136\uff0c\u8fd9\u79cd\u7ea6\u675f\u4e0e\u4efb\u4f55\u8bc1\u5238\u7684\u56de\u62a5\u65e0\u5173;\u56e0\u6b64\uff0c\u65bd\u52a0\u8fd9\u6837\u7684\u9650\u5236\u53ea\u4f1a\u964d\u4f4e\u4f18\u5316\u6295\u8d44\u7ec4\u5408\u7684\u98ce\u9669\u8c03\u6574\u540e\u56de\u62a5\u3002</p> <p>\u5982\u679c\u7ea6\u675f\u4e0d\u72ec\u7acb\u4e8e returns \u600e\u4e48\u529e\uff1f\u4f8b\u5982\uff0c\u8003\u8651\u4ee5\u4e0b\u7ea6\u675f\u6761\u4ef6\uff1a\u201c\u4ec5\u6295\u8d44\u4e8e\u90a3\u4e9b\u5728\u672a\u6765 12 \u4e2a\u6708\u5185\u80a1\u4ef7\u5c06\u5347\u503c\u8d85\u8fc7 10% \u7684\u516c\u53f8\u3002\u9664\u4e86\u65bd\u52a0\u8fd9\u79cd\u6761\u4ef6\u7684\u4e0d\u53ef\u884c\u6027\u4e4b\u5916\uff0c\u5f88\u660e\u663e\uff0c\u8fd9\u79cd\u9650\u5236\u5b9e\u9645\u4e0a\u4f1a\u589e\u52a0\u4f18\u5316\u6295\u8d44\u7ec4\u5408\u7684\u98ce\u9669\u8c03\u6574\u540e\u56de\u62a5\u3002\u56e0\u6b64\uff0c\u5f71\u54cd\u529b\u6295\u8d44\u7684\u5f71\u54cd\u662f\u4ec0\u4e48\u8fd9\u4e2a\u95ee\u9898\u7684\u7b54\u6848\u5b8c\u5168\u53d6\u51b3\u4e8e\u5f71\u54cd\u529b\u6807\u51c6\u662f\u5426\u4ee5\u53ca\u5982\u4f55\u4e0e\u6240\u8003\u8651\u7684\u8bc1\u5238\u7684\u8868\u73b0\u7279\u5f81\u76f8\u5173\u3002</p> <p>\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u5f00\u53d1\u4e86\u4e00\u4e2a\u901a\u7528\u6846\u67b6\u6765\u91cf\u5316\u5f71\u54cd\u529b\u6295\u8d44\u7684\u8d22\u52a1\u5f71\u54cd\u3002\u6211\u4eec\u5c06\u5f71\u54cd\u529b\u6295\u8d44\u6b63\u5f0f\u5b9a\u4e49\u4e3a\u6839\u636e\u5f71\u54cd\u529b\u56e0\u5b50\\(X_i\\)(\u5bf9\\(X_i\\)\uff0c\u56e0\u6b64\\(X_i\\)\u8d8a\u9ad8\u5f71\u54cd\u529b\u8d8a\u5927)\u5bf9 N \u53ea\u8bc1\u5238\u7684\u6295\u8d44\u53ef\u884c\u57df\u8fdb\u884c\u6392\u5e8f\u548c\u9009\u62e9\uff08\u4f8b\u5982\uff0c\u78b3\u6392\u653e\u91cf\u66f4\u4f4e\u3001\u53ef\u6301\u7eed\u6027\u66f4\u9ad8\u3001ESG \u8bc4\u5206\u66f4\u9ad8\u7b49\uff09\u3002\u56e0\u6b64\uff0c\u5728\u5176\u4ed6\u6761\u4ef6\u76f8\u540c\u7684\u60c5\u51b5\u4e0b\uff0c\u5f71\u54cd\u529b\u6295\u8d44\u8005\u88ab\u5047\u5b9a\u66f4\u559c\u6b22\\(X_i\\)\u503c\u66f4\u9ad8\u7684\u8bc1\u5238\u3002\u8be5\u5f71\u54cd\u56e0\u5b50\u5b9a\u4e49\u4e86\u53ef\u884c\u57df\u4e2d\u6240\u6709\u8bc1\u5238\u7684\u7b49\u7ea7\u6392\u5e8f\uff0c\u4ece\u4e2d\u53ef\u4ee5\u6784\u5efa\u5f71\u54cd\u529b\u6295\u8d44\u7ec4\u5408\uff08\u5373 ESG \u6392\u540d\u8bc1\u5238\u7684\u524d\u5341\u5206\u4f4d\u6570\u6216\u78b3\u6392\u653e\u6392\u540d\u8bc1\u5238\u7684\u540e\u5341\u5206\u4f4d\u6570\uff09\u3002\u56e0\u6b64\uff0c\u5bf9\u6295\u8d44\u4e1a\u7ee9\u7684\u5f71\u54cd\u662f\u7531\u5f71\u54cd\u6307\u6807\u7684\u5411\u91cf X \u2261 [X1 X2 \u22ef XN]T \u4e0e\u5404\u4e2a\u8bc1\u5238\u7684\u6295\u8d44\u4e1a\u7ee9\u7684\u8054\u5408\u5206\u5e03\u51b3\u5b9a\u7684\u3002</p> <pre><code>To formalize this idea, we first propose a general linear multifactor model for asset returns and define excess returns or \u201calphas\u201d as nonzero intercepts that we model as mean-zero random variables. This framework allows for the possibility of superior investment performance for individual securities but also includes the conventional case of equilibrium or no-arbitrage pricing if we  set the variance of the alphas to zero. In fact, the implications from our model are broadly applicable to an equilibrium asset-pricing setup where \u201calpha\u201d is reinterpreted as omitted factors of which investors are either unaware or unable to access as easily as professional portfolio managers. Such an agnostic approach to investment performance allows us to determine conditions under which impact investing does and does not change the risk/reward profile of a given investment product.\n</code></pre> <p>\u4e3a\u4e86\u6b63\u5f0f\u5316\u8fd9\u4e2a\u60f3\u6cd5\uff0c\u6211\u4eec\u9996\u5148\u63d0\u51fa\u4e86\u4e00\u4e2a\u7528\u4e8e\u8d44\u4ea7\u56de\u62a5\u7684\u901a\u7528\u7ebf\u6027\u591a\u56e0\u5b50\u6a21\u578b\uff0c\u5e76\u5c06\u8d85\u989d\u56de\u62a5\u6216\u201calphas\u201d\u5b9a\u4e49\u4e3a\u975e\u96f6\u622a\u8ddd\uff0c\u6211\u4eec\u5c06\u5176\u5efa\u6a21\u4e3a\u5747\u503c\u96f6\u968f\u673a\u53d8\u91cf\u3002\u8be5\u6846\u67b6\u5141\u8bb8\u5355\u4e2a\u8bc1\u5238\u83b7\u5f97\u5353\u8d8a\u6295\u8d44\u4e1a\u7ee9\u7684\u53ef\u80fd\u6027\uff0c\u4f46\u5982\u679c\u6211\u4eec\u5c06 alpha \u7684\u65b9\u5dee\u8bbe\u7f6e\u4e3a\u96f6\uff0c\u5219\u8fd8\u5305\u62ec\u5747\u8861\u6216\u65e0\u5957\u5229\u5b9a\u4ef7\u7684\u4f20\u7edf\u60c5\u51b5\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u6a21\u578b\u7684\u5f71\u54cd\u5e7f\u6cdb\u9002\u7528\u4e8e\u5747\u8861\u8d44\u4ea7\u5b9a\u4ef7\u8bbe\u7f6e\uff0c\u5176\u4e2d\u201c\u963f\u5c14\u6cd5\u201d\u88ab\u91cd\u65b0\u89e3\u91ca\u4e3a\u88ab\u5ffd\u7565\u7684\u56e0\u7d20\uff0c\u6295\u8d44\u8005\u8981\u4e48\u4e0d\u77e5\u9053\uff0c\u8981\u4e48\u65e0\u6cd5\u50cf\u4e13\u4e1a\u6295\u8d44\u7ec4\u5408\u7ecf\u7406\u90a3\u6837\u5bb9\u6613\u83b7\u5f97\u8fd9\u4e9b\u56e0\u7d20\u3002\u8fd9\u79cd\u4e0d\u53ef\u77e5\u7684\u6295\u8d44\u8868\u73b0\u65b9\u6cd5\u4f7f\u6211\u4eec\u80fd\u591f\u786e\u5b9a\u5f71\u54cd\u529b\u6295\u8d44\u5728\u54ea\u4e9b\u6761\u4ef6\u4e0b\u4f1a\u6539\u53d8\u7279\u5b9a\u6295\u8d44\u4ea7\u54c1\u7684\u98ce\u9669/\u56de\u62a5\u72b6\u51b5\u3002</p> <p>\u7279\u522b\u662f\uff0c\u6211\u4eec\u5728\u6709\u9650\u6837\u672c\u548c\u6e10\u8fd1\uff08\u968f\u7740\u8bc1\u5238\u6570\u91cf\u65e0\u9650\u589e\u52a0\uff09\u4e2d\u63a8\u5bfc\u51fa\u4e86\u6839\u636e\u5176\u5f71\u54cd\u56e0\u5b50 X \u6392\u540d\u7684\u5355\u4e2a alpha \u7684\u5206\u5e03\u3002\u4f17\u6240\u5468\u77e5\uff0c\u5df2\u6392\u5e8f\u7684\u968f\u673a\u53d8\u91cf\uff08\u79f0\u4e3a\u987a\u5e8f\u7edf\u8ba1\u91cf\uff09\u7684\u5206\u5e03\u4e0e\u5176\u672a\u6392\u5e8f\u7684\u7248\u672c\u5177\u6709\u4e0d\u540c\u7684\u5206\u5e03\u3002\u7136\u800c\uff0c\u5c31\u6211\u4eec\u7684\u76ee\u7684\u800c\u8a00\uff0c\u8be5\u6587\u732e\u4e2d\u66f4\u76f8\u5173\u7684\u90e8\u5206\u4fa7\u91cd\u4e8e\u8bf1\u5bfc\u987a\u5e8f\u7edf\u8ba1\uff0c\u5176\u4e2d\u968f\u673a\u53d8\u91cf\u4e0d\u662f\u6839\u636e\u5b83\u4eec\u81ea\u5df1\u7684\u503c\u800c\u662f\u6839\u636e\u5176\u4ed6\u968f\u673a\u53d8\u91cf\u7684\u503c\u8fdb\u884c\u6392\u540d\uff08\u4f8b\u5982\uff0c\u4e0d\u662f\u6839\u636e\u5b83\u4eec\u7684\u56de\u62a5\u800c\u662f\u6839\u636e\u57fa\u91d1\u7684\u5e02\u573a\u8d1d\u5854\u503c\u5bf9\u4e00\u7ec4\u5171\u540c\u57fa\u91d1\u7684\u56de\u62a5\u8fdb\u884c\u6392\u540d\uff09\u3002\u6211\u4eec\u4f7f\u7528\u8bf1\u5bfc\u8ba2\u5355\u7edf\u8ba1\u6570\u636e\u7684\u5c5e\u6027\u6765\u63a8\u5bfc\u51fa\u5f71\u54cd\u529b\u6295\u8d44\u7ec4\u5408\u7684 alpha \u5206\u5e03\uff0c\u6309\u4efb\u610f\u5f71\u54cd\u529b\u8bc4\u5206 X \u6392\u540d\uff0c\u4f7f\u6211\u4eec\u80fd\u591f\u91cf\u5316\u5f71\u54cd\u529b\u6295\u8d44\u7684\u5f71\u54cd\u3002</p> <p>\u4f7f\u7528\u8fd9\u4e2a\u6846\u67b6\uff0c\u6211\u4eec\u8868\u660e\u8bf1\u5bfc\u6392\u5e8f\u7684\u9884\u671f alpha \u7531\u4e09\u4e2a\u9879\u51b3\u5b9a\uff1aX \u4e0e\u5355\u4e2a\u8bc1\u5238\u7684 alpha \u4e4b\u95f4\u7684\u76f8\u5173\u6027\u3001\u5355\u4e2a\u8bc1\u5238 alpha \u7684\u6807\u51c6\u5dee\uff0c\u4ee5\u53ca\u6355\u6349\u8bc1\u5238\u5f71\u54cd\u56e0\u5b50\u662f\u9ad8\u4e8e\u8fd8\u662f\u4f4e\u4e8e\u5e73\u5747\u6c34\u5e73\u7684\u6a2a\u622a\u9762\u6807\u51c6\u5316\u5f71\u54cd\u5206\u6570\u3002\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u63d0\u4f9b\u4e86\u6765\u81ea\u8bf1\u5bfc\u6392\u5e8f\u7684\u9884\u671f alpha \u7684\u66ff\u4ee3\u7279\u5f81\uff0c\u4f5c\u4e3a\u57fa\u4e8e alpha \u8ba2\u8d2d\u8bc1\u5238\u7684\u9884\u671f alpha \u7684\u6298\u6263\u7248\u672c\uff08\u5373\uff0c\u901a\u8fc7\u4e00\u4e2a\u5168\u77e5\u7684\u9884\u8a00\u673a\uff0c\u5b9e\u9645\u4e0a\uff0c\u8fd9\u5f53\u7136\u662f\u65e0\u6cd5\u5b9e\u73b0\u7684\uff0c\u56e0\u4e3a alpha \u662f\u4e0d\u53ef\u89c2\u5bdf\u7684\uff09\u3002\u4e0e Sharpe-Lintner Capital \u8d44\u4ea7\u5b9a\u4ef7\u6a21\u578b \uff08CAPM\uff09\uff08Sharpe 1964\uff0cLintner 1965\uff09\u975e\u5e38\u76f8\u4f3c\uff0c\u8be5\u6a21\u578b\u901a\u8fc7\u5e02\u573a\u8d1d\u5854\u91cf\u5316\u5355\u4e2a\u8bc1\u5238\u7684\u9884\u671f\u56de\u62a5\uff0c4 \u8fd9\u4e2a\u7b80\u5355\u800c\u6df1\u523b\u7684\u7ed3\u679c\u7a81\u51fa\u4e86\u5f71\u54cd\u56e0\u5b50\u83b7\u5f97\u8d85\u989d\u56de\u62a5\u7684\u673a\u5236;\u5b83\u5728\u5b8c\u5168\u77e5\u8bc6\u7684\u60c5\u51b5\u4e0b\u5b9e\u73b0\u4e86\u6700\u5927\u53ef\u80fd alpha \u7684\u4e00\u5c0f\u90e8\u5206\uff0c\u5176\u4e2d\u8be5\u5206\u6570\u53ea\u662f X \u4e0e\u5355\u4e2a\u8bc1\u5238\u7684 alpha \u4e4b\u95f4\u7684\u76f8\u5173\u6027\u3002</p> <p>\u5229\u7528\u8fd9\u4e00\u89c1\u89e3\uff0c\u6211\u4eec\u91cf\u5316\u4e86\u57fa\u4e8e\u5f71\u54cd\u56e0\u5b50 X \u5f62\u6210\u7684\u6295\u8d44\u7ec4\u5408\u7684 alpha\u2014\u2014\u5305\u62ec\u4ece\u9876\u90e8\u6216\u5e95\u90e8\u5f71\u54cd\u56e0\u5b50\u5206\u4f4d\u6570\u521b\u5efa\u6295\u8d44\u7ec4\u5408\u7684\u5e38\u89c1\u542f\u53d1\u5f0f\u65b9\u6cd5\u2014\u2014\u7136\u540e\u5e94\u7528 Treynor \u548c Black \uff081973\uff09 \u6846\u67b6\u5728\u5f62\u6210\u591a\u5934/\u7a7a\u5934\u548c\u4ec5\u591a\u5934\u6295\u8d44\u7ec4\u5408\u65f6\u5f97\u51fa\u6700\u4f73\u6743\u91cd\uff0c\u4ee5\u6700\u5927\u5316\u590f\u666e\u6bd4\u7387\u3002\u6211\u4eec\u8868\u660e\uff0c\u53ea\u8981\u5f71\u54cd\u56e0\u5b50 X \u4e0e\u5355\u4e2a\u8bc1\u5238\u7684\u672a\u89c2\u5bdf\u5230\u7684 alpha \u5448\u6b63\u76f8\u5173\uff0c\u8fd9\u79cd\u5f71\u54cd\u529b\u6295\u8d44\u7ec4\u5408\u5c31\u4e0e\u201c\u8d85\u9ad8\u6548\u8fb9\u754c\u201d\u76f8\u5173\u3002\u6211\u4eec\u8fd8\u5bf9\u6211\u4eec\u7684\u7ed3\u679c\u63d0\u4f9b\u5747\u8861/\u65e0\u5957\u5229\u89e3\u91ca\uff0c\u5176\u4e2d\u8d85\u989d\u56de\u62a5\u6765\u81ea\u6295\u8d44\u8005\u53ef\u80fd\u4e0d\u77e5\u9053\u4f46\u6295\u8d44\u7ec4\u5408\u7ecf\u7406\u53ef\u4ee5\u8bbf\u95ee\u7684\u5f71\u54cd\u529b\u56e0\u7d20\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8d85\u989d\u56de\u62a5\u5c31\u6295\u8d44\u8005\u89c2\u5bdf\u5230\u7684\u56e0\u7d20\u800c\u8a00\u53ea\u662f\u201c\u8d85\u989d\u201d\uff0c\u5e76\u4ee3\u8868\u4e86\u7279\u5b9a\u5f71\u54cd\u56e0\u7d20\u7684\u98ce\u9669\u6ea2\u4ef7\u3002</p> <p>Treynor-Black \u6295\u8d44\u7ec4\u5408\u4f7f\u6211\u4eec\u80fd\u591f\u6784\u5efa\u5f71\u54cd\u529b\u6295\u8d44\u7684\u8d22\u52a1\u5f71\u54cd\u7684\u81ea\u7136\u8861\u91cf\u6807\u51c6;\u5f53\u5f71\u54cd\u56e0\u5b50\u4e0e\u5355\u4e2a\u8bc1\u5238\u672a\u89c2\u5bdf\u5230\u7684 Alpha \u5448\u6b63\u76f8\u5173\u65f6\uff0c\u5b83\u5c31\u5177\u6709\u6b63 Alpha\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5f53\u5f71\u54cd\u56e0\u5b50\u4e0e alpha \u5448\u8d1f\u76f8\u5173\u5e76\u4e14\u6295\u8d44\u8005\u5265\u79bb\u6392\u540d\u9760\u540e\u7684\u8bc1\u5238\uff08\u7531\u4e8e\u4e0e X \u5448\u8d1f\u76f8\u5173\uff0c\u8fd9\u4e9b\u8bc1\u5238\u5e73\u5747\u5177\u6709\u6b63 alpha\uff09\u65f6\uff0c\u5f71\u54cd\u56e0\u5b50\u53ef\u80fd\u4f1a\u4ea7\u751f\u6210\u672c\uff08\u5728\u6211\u4eec\u7684\u6846\u67b6\u4e2d\u4e5f\u53ef\u4ee5\u91cf\u5316\uff09\u3002\u8fd9\u4e3a\u5173\u4e8e\u91c7\u7528\u5f71\u54cd\u6295\u8d44\u6548\u679c\u7684\u4e0d\u4e00\u81f4\u4e14\u6709\u65f6\u76f8\u4e92\u77db\u76fe\u7684\u5b9e\u8bc1\u53d1\u73b0\u63d0\u4f9b\u4e86\u4e00\u4e2a\u53ef\u80fd\u7684\u89e3\u91ca\u3002\u5f71\u54cd\u56e0\u5b50\u4e0e Alpha \u4e4b\u95f4\u7684\u76f8\u5173\u6027\u53d7\u4e0d\u540c\u5f71\u54cd\u6307\u6807\u7684\u5f71\u54cd\uff0c5 \u4e0d\u540c\u7684\u5e02\u573a\u6761\u4ef6\uff0c6 \u4ee5\u53ca\u4e0d\u540c\u7684 Alpha \u8d44\u4ea7\u5b9a\u4ef7\u6a21\u578b\uff0c7 \u6240\u6709\u8fd9\u4e9b\u90fd\u4f1a\u5f71\u54cd\u5f71\u54cd\u529b\u6295\u8d44\u6536\u76ca\u6216\u6210\u672c\u7684\u6700\u7ec8\u4f30\u8ba1\u3002</p> <p>\u4e3a\u4e86\u8bf4\u660e\u6211\u4eec\u7ed3\u679c\u7684\u5b9e\u9645\u76f8\u5173\u6027\uff0c\u6211\u4eec\u5c06\u6211\u4eec\u7684\u6846\u67b6\u5e94\u7528\u4e8e\u4e94\u4e2a\u7279\u5b9a\u7684\u5f71\u54cd\u529b\u6295\u8d44\u80cc\u666f\u3002\u6bcf\u79cd\u5f62\u5f0f\u7684\u5f71\u54cd\u529b\u6295\u8d44\u7684\u5177\u4f53\u76f8\u5173\u6027\uff08\u6b63\u6216\u8d1f\uff09\u53d6\u51b3\u4e8e\u5f71\u54cd\u529b\u7684\u5177\u4f53\u6027\u8d28\u3001\u5b9e\u73b0\u8be5\u5f71\u54cd\u529b\u6240\u6d89\u53ca\u7684\u98ce\u9669\uff0c\u4ee5\u53ca\u5b83\u4e0e\u963f\u5c14\u6cd5\u4ea7\u751f\u57fa\u7840\u8fc7\u7a0b\u7684\u5173\u7cfb\u3002</p> <p>\u7b2c\u4e00\u4e2a\u4f8b\u5b50\u662f\u751f\u7269\u6280\u672f\u98ce\u9669\u6148\u5584\u4e8b\u4e1a \uff08VP\uff09\uff0c\u8fd9\u662f\u4e00\u79cd\u7279\u6b8a\u5f62\u5f0f\u7684\u751f\u7269\u533b\u5b66\u5f71\u54cd\u529b\u6295\u8d44\uff0c\u975e\u8425\u5229\u7ec4\u7ec7\u548c\u4f7f\u547d\u9a71\u52a8\u578b\u7ec4\u7ec7\u4e3a\u63a8\u8fdb\u5176\u76ee\u6807\u7684\u5021\u8bae\u63d0\u4f9b\u8d44\u91d1\uff0c\u5e76\u53ef\u80fd\u83b7\u5f97\u53ef\u4ee5\u518d\u6295\u8d44\u4e8e\u5176\u4f7f\u547d\u7684\u56de\u62a5\u3002\u6211\u4eec\u4ee5 Kim \u548c Lo \uff082019\uff09 \u5173\u4e8e\u56ca\u6027\u7ea4\u7ef4\u5316 \uff08CF\uff09 \u57fa\u91d1\u4f1a\u7684\u6848\u4f8b\u7814\u7a76\u4e3a\u4f8b\uff0c\u8868\u660e\u901a\u8fc7\u63a8\u8fdb\u7f55\u89c1\u75c5\u7684\u836f\u7269\u5f00\u53d1\u53ef\u4ee5\u5b9e\u73b0\u663e\u7740\u7684\u6b63 \u03b1\uff0c\u8fd9\u8bf4\u660e\u4e86\u201c\u901a\u8fc7\u505a\u597d\u4e8b\u6765\u505a\u597d\u4e8b\u201d\u7684\u53ef\u884c\u6027\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4ece\u8d22\u52a1\u89d2\u5ea6\u6765\u770b\uff0c\u4e0e\u65e9\u671f\u836f\u7269\u5f00\u53d1\u8ba1\u5212\u76f8\u5173\u7684\u6311\u6218 Fagnan \u7b49\u4eba \uff082013\uff09 \u5f3a\u8c03\u7684\u6210\u529f\u6982\u7387\u4f4e\u3001\u65f6\u95f4\u8de8\u5ea6\u957f\u548c\u8d44\u672c\u9700\u6c42\u5927\u2014\u2014\u88ab\u6b63\u76f8\u5173 \u03c1 \u6240\u62b5\u6d88\u3002</p> <p>\u7b2c\u4e8c\u4e2a\u7533\u8bf7\u6d89\u53ca\u7814\u53d1 \uff08R&amp;D\uff09 \u8d22\u56e2\uff0c\u8fd9\u662f\u53e6\u4e00\u79cd\u5f62\u5f0f\u7684\u5f71\u54cd\u529b\u6295\u8d44\u3002\u6211\u4eec\u4ee5\u534a\u5bfc\u4f53\u5236\u9020\u6280\u672f\u516c\u53f8\uff08\u201cSematech\u201d\uff09\u4e3a\u4f8b\uff0c\u8fd9\u662f\u4e00\u4e2a\u6210\u7acb\u4e8e1987\u5e74\uff0c\u7531\u7f8e\u56fd\u653f\u5e9c\u548c14\u5bb6\u7f8e\u56fd\u534a\u5bfc\u4f53\u516c\u53f8\u8d44\u52a9\u7684\u77e5\u540d\u7814\u53d1\u8054\u76df\uff0c\u5176\u76ee\u7684\u662f\u901a\u8fc7\u5229\u7528\u5171\u4eab\u7684\u7814\u53d1\u8d44\u6e90\u6765\u89e3\u51b3\u5e38\u89c1\u7684\u5236\u9020\u95ee\u9898\u3002\u4f7f\u7528\u7b80\u5355\u7684\u53cc\u91cd\u5dee\u5206\u65b9\u6cd5\uff0c\u6211\u4eec\u4f30\u8ba1\u52a0\u5165\u8be5\u8d22\u56e2\u4f1a\u5bfc\u81f4\u6210\u5458\u516c\u53f8\u80a1\u7968\u7684 alpha \u589e\u52a0\u7ea6 10%\uff0c\u8fd9\u610f\u5473\u7740\u5bf9\u8be5\u8d22\u56e2\u7684\u6295\u8d44\u5c06\u83b7\u5f97\u53ef\u89c2\u7684\u56de\u62a5\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u7814\u53d1\u8054\u76df\u51cf\u5c11\u4e86\u7814\u53d1\u91cd\u590d\uff0c\u63d0\u9ad8\u4e86\u6210\u5458\u516c\u53f8\u7684\u76c8\u5229\u80fd\u529b\uff08Irwin\u548cKlenow 1996a\uff09\uff0c\u4ece\u800c\u5728\u5f71\u54cd\u548c\u56de\u62a5\u4e4b\u95f4\u4ea7\u751f\u4e86\u6b63\u76f8\u5173\u3002</p> <p>\u7b2c\u4e09\u4e2a\u5e94\u7528\u6d89\u53ca\u8861\u91cf\u4ece\u7f6a\u6076\u80a1\u7968\uff08\u4ece\u4e8b\u4e00\u4e9b\u4eba\u8ba4\u4e3a\u5728\u793e\u4f1a\u4e0a\u4e0d\u53d7\u6b22\u8fce\u7684\u4e1a\u52a1\u4f46\u88ab\u8bb0\u5f55\u4e3a\u5177\u6709\u6b63 alpha \u7684\u516c\u53f8\u7684\u80a1\u7968\uff09\u4e2d\u64a4\u8d44\u7684\u6210\u672c\uff0c\u8fd9\u53ef\u4ee5\u7528 Merton \uff081987\uff09 \u88ab\u5ffd\u89c6\u7684\u80a1\u7968\u548c\u5206\u5272\u5e02\u573a\u7684\u6a21\u578b\u6765\u89e3\u91ca\u3002\u4ee5 Hong \u548c Kacperczyk \uff082009\uff09 \u4ee5\u53ca Blitz \u548c Fabozzi \uff082017\uff09 \u4e3a\u4f8b\uff0c\u6211\u4eec\u4f30\u8ba1\u6bcf\u5e74\u653e\u5f03\u7684 alpha \u7684\u5265\u79bb\u6210\u672c\u5728 0.6% \u5230 3.3% \u4e4b\u95f4\u3002\u6b64\u793a\u4f8b\u8bf4\u660e\u4e86\u9884\u4f30 Alpha \u91cf\u7ea7\u5bf9\u6240\u4f7f\u7528\u7684\u7279\u5b9a\u8d44\u4ea7\u5b9a\u4ef7\u6a21\u578b\u7684\u4f9d\u8d56\u6027\uff0c\u8fd9\u662f\u6240\u6709\u6548\u679c\u5f52\u56e0\u7ec3\u4e60\u4e2d\u4f17\u6240\u5468\u77e5\u7684\u95ee\u9898\u3002</p> <p>\u7b2c\u56db\uff0c\u6211\u4eec\u5c06\u6211\u4eec\u7684\u6846\u67b6\u5e94\u7528\u4e8e\u51e0\u9879 ESG \u5b9e\u8bc1\u7814\u7a76\u3002\u8fd9\u4e9b\u7814\u7a76\u4e2d\u7684\u5177\u4f53 ESG \u6307\u6807\u4e0e\u5355\u4e2a\u8bc1\u5238\u672a\u89c2\u5bdf\u5230\u7684 alpha \u4e4b\u95f4\u7684\u76f8\u5173\u6027\u51b3\u5b9a\u4e86\u5bf9 ESG \u6295\u8d44\u6536\u76ca\uff08\u6216\u6210\u672c\uff09\u7684\u6700\u7ec8\u4f30\u8ba1\u3002\u5728\u67d0\u4e9b\u5e02\u573a\u6761\u4ef6\u4e0b\uff0c\u5b83\u4eec\u7684\u8303\u56f4\u4ece\u503a\u5238\u7684 0.05%\uff08Baker \u7b49\u4eba\uff0c2022 \u5e74\uff09\u5230\u80a1\u7968\u7684 2.65%\uff08Bansal \u7b49\u4eba\uff0c2022 \u5e74\uff09\u3002\u8fd9\u51f8\u663e\u4e86\u8d44\u4ea7\u7c7b\u522b\u3001\u5f71\u54cd\u529b\u8861\u91cf\u6307\u6807\u548c\u7279\u5b9a\u5e02\u573a\u6761\u4ef6\u5728\u786e\u5b9a\u5f71\u54cd\u529b\u6295\u8d44\u7684\u963f\u5c14\u6cd5\u65b9\u9762\u7684\u91cd\u8981\u6027\uff0c\u4ee5\u53ca\u9700\u8981\u5408\u7406\u5316 ESG \u5bf9\u8d44\u4ea7\u4ef7\u683c\u7684\u9ad8\u5ea6\u52a8\u6001\u5f71\u54cd\uff0c\u8d85\u8d8a ESG \u6295\u8d44\u7684\u5747\u8861\u6a21\u578b\u3002</p> <p>\u6700\u540e\uff0c\u6211\u4eec\u5e94\u7528\u6211\u4eec\u7684\u6846\u67b6\u6765\u89e3\u91ca 2021 \u5e74 1 \u6708 GameStop Corp. \uff08GME\uff09 \u548c\u5176\u4ed6\u201c\u6a21\u56e0\u201d\u80a1\u7968\u7684\u4ef7\u683c\u98d9\u5347\uff0c\u5176\u4e2d\u5229\u7528\u673a\u6784\u6295\u8d44\u8005\u7a7a\u5934\u5934\u5bf8\u7684\u53bb\u4e2d\u5fc3\u5316\u7a7a\u5934\u6324\u538b\u5bfc\u81f4\u5176\u4ef7\u683c\u5728\u5d29\u76d8\u524d\u6025\u5267\u4e0a\u6da8\u3002\u5c06\u6b64\u7c7b\u73b0\u8c61\u5f52\u7c7b\u4e3a\u5f71\u54cd\u529b\u6295\u8d44\u4f3c\u4e4e\u5f88\u5947\u602a\uff0c\u4f46\u5b83\u4eec\u5728\u56de\u62a5\u5982\u4f55\u673a\u68b0\u4ea7\u751f\u65b9\u9762\u4e0e\u5176\u4ed6\u793a\u4f8b\u6709\u76f8\u4f3c\u4e4b\u5904\uff0c\u4e5f\u8bb8\uff0c\u4e00\u4e2a\u540d\u4e3a\u201c\u4ef7\u683c-\u5f71\u54cd\u529b\u6295\u8d44\u201d\u7684\u5355\u72ec\u7c7b\u522b\u4f1a\u66f4\u5408\u9002\u3002\u6211\u4eec\u7684\u6846\u67b6\u6709\u52a9\u4e8e\u91cf\u5316\u4ef7\u683c\u5f71\u54cd\u6295\u8d44\u7684\u8d22\u52a1\u5f71\u54cd\u3002\u8861\u91cf\u6b64\u7c7b\u6295\u8d44\u7684\u89c4\u6a21\u5e76\u4e86\u89e3\u5176\u8d22\u52a1\u5f71\u54cd\u53ef\u4ee5\u66f4\u597d\u5730\u8ba9\u76d1\u7ba1\u673a\u6784\u548c\u653f\u7b56\u5236\u5b9a\u8005\u4e86\u89e3\u8fd9\u79cd\u73b0\u8c61\u7684\u8303\u56f4\u548c\u4e25\u91cd\u6027\uff0c\u4ee5\u4fbf\u4ed6\u4eec\u80fd\u591f\u6295\u5165\u9002\u5f53\u7684\u8d44\u6e90\u6765\u89e3\u51b3\u5b83\u3002</p> <p>\u603b\u4f53\u800c\u8a00\uff0c\u8fd9\u4e94\u4e2a\u4f8b\u5b50\u5f3a\u8c03\u4e86\u9009\u62e9\u57fa\u7ebf\u8d44\u4ea7\u5b9a\u4ef7\u6a21\u578b\u5e76\u6839\u636e\u7ecf\u6d4e\u3001\u5236\u5ea6\u548c\u5e02\u573a\u539f\u7406\u5f62\u6210\u5f71\u54cd\u53d8\u91cf\u7684\u91cd\u8981\u6027\uff0c\u4ee5\u4fbf\u5728\u5f71\u54cd\u548c\u56de\u62a5\u4e4b\u95f4\u5efa\u7acb\u5065\u5168\u548c\u7a33\u5065\u7684\u5173\u7cfb\u3002\u6211\u4eec\u7684\u6a21\u578b\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7edf\u4e00\u7684\u6846\u67b6\uff0c\u53ef\u4ee5\u9488\u5bf9\u5404\u79cd\u73af\u5883\u8fdb\u884c\u6821\u51c6\uff0c\u5e76\u4e3a\u5982\u4f55\u601d\u8003\u5f71\u54cd\u529b\u6295\u8d44\u548c\u91cf\u5316\u5176\u8d22\u52a1\u540e\u679c\u63d0\u4f9b\u4e86\u5b66\u672f\u4e25\u8c28\u6027\u3002\u6b64\u5916\uff0c\u6211\u4eec\u7684\u6846\u67b6\u4e3a\u6295\u8d44\u7ec4\u5408\u7ecf\u7406\u63d0\u4f9b\u4e86\u4e00\u79cd\u7cfb\u7edf\u4e14\u653f\u6cbb\u4e2d\u7acb\u7684\u65b9\u6cd5\uff0c\u4ee5\u62ab\u9732\u5f71\u54cd\u529b\u6295\u8d44\u7684\u8d22\u52a1\u540e\u679c\uff0c\u4ece\u800c\u89e3\u51b3\u5176\u5ba2\u6237\u4e0d\u77e5\u9053\u6216\u4e0d\u613f\u610f\u627f\u62c5\u5176\u7ecf\u7406\u5f71\u54cd\u529b\u6807\u51c6\u540e\u679c\u7684\u4efb\u4f55\u62c5\u5fe7\u3002</p>"},{"location":"blog/pytorch/","title":"Pytorch","text":"<p>pytorch \u5c0f\u77e5\u8bc6\uff1a</p> <p>register_buffer</p>"},{"location":"blog/sympy%E5%BA%93/","title":"Sympy\u5e93","text":"<p>SymPy\u662f\u5f00\u6e90\u514d\u8d39\u7684python\u5e93\uff0c\u5177\u6709\u5f3a\u5927\u7684\u7b26\u53f7\u8fd0\u7b97\u548c\u6570\u503c\u8ba1\u7b97\u529f\u80fd\uff0c\u8986\u76d6\u51fd\u6570\u6c42\u6839\u3001\u7ebf\u6027\u4ee3\u6570\u3001\u5fae\u79ef\u5206\u3001\u5e38/\u504f\u5fae\u5206\u65b9\u7a0b\u6c42\u89e3\u7b49\u79d1\u5b66\u8ba1\u7b97\u5185\u5bb9\uff0c\u5b8c\u5168\u7531python\u8bed\u8a00\u7f16\u5199\u5e76\u5b8c\u5168\u8fd0\u7528\u4e8epython\u8bed\u8a00\u5f53\u4e2d\u3002</p> <p>\u5b9a\u4e49\u7b26\u53f7 \u5b9a\u4e49\u5355\u4e2a\u53d8\u91cf\u7528sympy.Symbol('')\uff0c\u7a7a\u683c\u3001\u5176\u4ed6\u7b26\u53f7\u5747\u8ba1\u5165\u53d8\u91cf\u540d\u7684\u4e00\u90e8\u5206\uff08\u5305\u62ec\u8f6c\u4e49\u7b26\u3001#\u53f7\u7b49\uff09\uff0c\u8fd9\u79cd\u65b9\u6cd5\u662f\u5b9a\u4e49\u5e76\u521d\u59cb\u5316\u4e86\u4e00\u4e2aSymbol\u7c7b\u7684\u5bf9\u8c61 <p><code>class Symbol(sympy.core.expr.AtomicExpr, sympy.logic.boolalg.Boolean)</code></p> <p>\u5b9a\u4e49\u591a\u4e2a\u53d8\u91cf\u7528sympy.symbols()\uff0c\u53d8\u91cf\u540d\u4e4b\u95f4\u7528\u7a7a\u683c/\u9017\u53f7\u5206\u9694\uff0c\u4f46\u90fd\u5728\u5f15\u53f7\u5185\uff0c\u8fd9\u79cd\u65b9\u6cd5\u53ef\u4ee5\u4e00\u6b21\u6027\u5b9a\u4e49\u591a\u4e2aSymbol\u7c7b\u7684\u5bf9\u8c61 <p><code>symbols(names, *, cls=&lt;class 'sympy.core.symbol.Symbol'&gt;, **args)</code></p>"},{"location":"blog/sympy%E5%BA%93/#x","title":"\u5b9a\u4e49\u5355\u4e2a\u81ea\u53d8\u91cfx","text":"<p>x1 = sympy.Symbol('x')              # x1 = x x2 = sympy.Symbol('x y')            # x2 = x y</p>"},{"location":"blog/sympy%E5%BA%93/#_1","title":"\u5b9a\u4e49\u591a\u4e2a\u53d8\u91cf","text":"<p>y1, y2 = sympy.symbols('y1 y2#')    # y1 = y1, y2 = y2# y3, y4 = sympy.symbols('y3,y4@')    # y3 = y3, y4 = y4@ y5     = sympy.symbols('y5,y6 ')    # y5 = tuple(y5, y6) y6     = sympy.symbols('y6')        # y6 = y6</p>"},{"location":"blog/sympy%E5%BA%93/#_2","title":"\u5b9a\u4e49\u4e00\u4e2a\u52a0\u7c97\u7b26\u53f7","text":"<p>u = sympy.Symbol('\\boldsymbol u')</p>"},{"location":"blog/sympy%E5%BA%93/#_3","title":"\u8f93\u51fa\u7b80\u5355\u8868\u8fbe\u5f0f","text":"<p>print(x1) print(2*x1 + 3) sympy.symbols()\u4e2d\u7b2c\u4e00\u4e2a\u53c2\u6570\u53ef\u4ee5\u4e3a\u5143\u7ec4\u3001\u5217\u8868\u548c\u5b57\u5178\uff1a</p> <p>sympy.symbols(('a', 'b', 'c')) sympy.symbols(['a', 'b', 'c']) sympy.symbols({'a', 'b', 'c'}) \u5229\u7528\u5192\u53f7:\u5b9a\u4e49\u4e00\u7cfb\u5217\u81ea\u53d8\u91cf</p> <p>sympy.symbols('x:10')            # (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9) sympy.symbols('x5:10')           # (x5, x6, x7, x8, x9) sympy.symbols('x5(:2)')          # (x50, x51) sympy.symbols('x5:10,y:5')       # (x5, x6, x7, x8, x9, y0, y1, y2, y3, y4) sympy.symbols(('x5:10', 'y:5'))  # ((x5, x6, x7, x8, x9), (y0, y1, y2, y3, y4))</p> <p>sympy.symbols('x:z')             # (x, y, z) sympy.symbols('x:c')             # () sympy.symbols('x(:c)')           # (xa, xb, xc) sympy.symbols(':c')              # (a, b, c) sympy.symbols('a:d, x:z')        # (a, b, c, d, x, y, z) sympy.symbols(('a:d', 'x:z'))    # ((a, b, c, d), (x, y, z)) sympy.symbols('x:2(1:3)')        # (x01, x02, x11, x12)</p> <p>sympy.symbols('x((a:b))')        # (x(a), x(b)) sympy.symbols(r'x(:1\\,:2)')      # (x(0,0), x(0,1)) \u5b9a\u4e49\u6574\u6570\u53d8\u91cf</p> <p>a = symbols('a', integer=True) a.is_integer                      # True \u5b9a\u4e49\u51fd\u6570 \u5728SymPy\u4e2d\uff0c\u51fd\u6570\u4e5f\u662f\u4e00\u79cd\u7b26\u53f7\u3002\u5b9a\u4e49\u51fd\u6570\uff1a</p>"},{"location":"blog/sympy%E5%BA%93/#1","title":"\u65b9\u6cd51","text":"<p>f = Function('f')       # f f = Function('f')(x)    # f(x)</p>"},{"location":"blog/sympy%E5%BA%93/#2","title":"\u65b9\u6cd52","text":"<p>g, h = symbols('g,h', cls=Function) \u88ab\u5b9a\u4e49\u4e3a\u51fd\u6570\u7684\u7b26\u53f7\u7ee7\u627f\u4e86\u57fa\u7c7bclass sympy.core.function.Function(*args)\u7684\u4e00\u4e9b\u51fd\u6570\uff0c\u540e\u9762\u6162\u6162\u4ecb\u7ecd\u3002\u5f53\u51fd\u6570\u88ab\u6307\u5b9a\u4e86\u81ea\u53d8\u91cf\u540e\uff0c\u5c31\u53ef\u4ee5\u505a\u4e00\u4e9b\u7b26\u53f7\u8fd0\u7b97\u4e86\uff1a</p> <p>f = Function('x') f(x).diff(x)</p>"},{"location":"blog/sympy%E5%BA%93/#derivativefx-x","title":"Derivative(f(x), x)","text":""},{"location":"blog/sympy%E5%BA%93/#_4","title":"\u6216","text":"<p>f = Function('x')(x) f.diff(x)</p>"},{"location":"blog/sympy%E5%BA%93/#derivativefx-x_1","title":"Derivative(f(x), x)","text":"<p>\u8868\u8fbe\u5f0f \u7531\u7b26\u53f7\u7ecf\u8fc7\u8fd0\u7b97\u7b26\u6216\u51fd\u6570\u5904\u7406\u8fd4\u56de\u7684\u7ed3\u679c\u662f\u8868\u8fbe\u5f0f\uff0c\u5355\u4e2a\u7b26\u53f7\u4e5f\u53ef\u4ee5\u770b\u4f5c\u8868\u8fbe\u5f0f\u3002\u5982</p> <p>from sympy import symbols x, y = symbols('x y') expr = x + 2*y expr</p>"},{"location":"blog/sympy%E5%BA%93/#x-2y","title":"x + 2*y","text":"<p>SymPy\u53ef\u4ee5\u5c06\u5b57\u7b26\u4e32\u8f6c\u5316\u4e3a\u8868\u8fbe\u5f0f\uff0c\u4f7f\u7528sympy.simpify()\u51fd\u6570</p> <p>x = sympy.symbols('x') str1  = 'x**3 + 2' expr1 = sympy.sympify(str1)</p> <p>print(f\"{expr1} = {expr1.subs(x, 2)}, when x=2\") \u67e5\u8be2\u8868\u8fbe\u5f0f\u662f\u5426\u4e3a\u6b63\u6570</p> <p>x = Symbol('x', positive=True) expr = 1 + x**2 expr.is_positive</p>"},{"location":"blog/sympy%E5%BA%93/#true","title":"True","text":"<p>expr.is_negative</p>"},{"location":"blog/sympy%E5%BA%93/#false","title":"False","text":"<p>\u7b49\u5f0f/\u4e0d\u7b49\u5f0f \u5728SymPy\u4e2d\uff0c\u7b49\u5f0f\u4e0d\u7528=\u8868\u793a\uff0c\u800c\u7528Eq\u51fd\u6570\u8868\u793a</p> <p>expr = Eq(x, y) \u5728SymPy\u4e2d\uff0c\u4efb\u4f55\u6ca1\u6709\u7528Eq\u7ec4\u6210\u7b49\u5f0f\u7684\u8868\u8fbe\u5f0f\uff0c\u5728\u6c42\u89e3\u65b9\u7a0b\u65f6\u5176\u503c\u9ed8\u8ba4\u4e3a\u96f6\uff0c\u5373\u4e0b\u5217\u4e09\u4e2a\u8bed\u53e5\u5177\u6709\u76f8\u540c\u7684\u8f93\u51fa</p> <p>solveset(Eq(x2, 1), x) solveset(Eq(x2 - 1, 0), x) solveset(x**2 - 1, x)</p>"},{"location":"blog/sympy%E5%BA%93/#-1-1","title":"{-1, 1}","text":"<p>\u5728SymPy\u4e2d\uff0c\u5927\u4e8e\u3001\u5c0f\u4e8e\u3001\u5927\u4e8e\u7b49\u4e8e\u3001\u5c0f\u4e8e\u7b49\u4e8e\u53ef\u4ee5\u76f4\u63a5\u7528&gt;\u3001&lt;\u3001&gt;=\u3001&lt;=\u7b26\u53f7\u8868\u793a</p> <p>expr = x &gt; y expr</p>"},{"location":"blog/sympy%E5%BA%93/#x-y","title":"x &gt; y","text":""},{"location":"blog/talib/","title":"Talib","text":""},{"location":"blog/talib/#linux","title":"\u5b89\u88c5\uff1a(\u5728linux\u64cd\u4f5c\u7cfb\u7edf\u4e0b)","text":"<pre><code>!git clone https://github.com/TA-Lib/ta-lib.git\ncd ta-lib\n! sudo chmod u+x autogen.sh\n!sudo apt-get install automake --yes\n!./autogen.sh\n! apt-get update\n! apt-get install rpm --yes\n#! rpm -qf /usr/bin/autoconf\n!wget ftp://ftp.gnu.org/gnu/autoconf/autoconf-2.71.tar.gz\n! tar zxvf autoconf-2.71.tar.gz\ncd autoconf-2.71\n! ./configure --prefix=/usr/\n! make &amp;&amp; make install\ncd ..\n! sudo apt install libtool --yes\n!./autogen.sh\n!./configure --prefix=/usr\n!make\n!sudo make install\n!pip install TA-Lib\n</code></pre>"},{"location":"blog/thesis/","title":"Thesis","text":"<p>A Simple New Approach to Variable Selection in Regression, with Application to Genetic Fine Mapping</p> <p>\"\u5728\u56de\u5f52\u6a21\u578b\u4e2d\u8bc6\u522b\u6216'\u9009\u62e9'\u76f8\u5173\u53d8\u91cf\u7684\u9700\u6c42\u5728\u5404\u79cd\u5e94\u7528\u4e2d\u90fd\u5b58\u5728\uff0c\u5e76\u63a8\u52a8\u4e86\u76f8\u5e94\u591a\u6837\u5316\u65b9\u6cd5\u7684\u53d1\u5c55\uff08\u4f8b\u5982\uff0c\u53c2\u89c1O'Hara\u548cSillanp\u00e4\u00e4 (2009)\u7b49\u4eba\u7684\u7efc\u8ff0\uff09\u3002\u7136\u800c\uff0c\u53d8\u91cf\u9009\u62e9\u662f\u4e00\u4e2a\u590d\u6742\u7684\u95ee\u9898\uff0c\u5c3d\u7ba1\u8fd9\u4e2a\u9886\u57df\u5df2\u6709\u5927\u91cf\u5de5\u4f5c\uff0c\u4f46\u73b0\u6709\u65b9\u6cd5\u4ecd\u672a\u5b8c\u5168\u89e3\u51b3\u4e00\u4e9b\u91cd\u8981\u95ee\u9898\u3002\u5176\u4e2d\u4e00\u4e2a\u95ee\u9898\u662f\u8bc4\u4f30\u5e94\u8be5\u9009\u62e9\u54ea\u4e9b\u53d8\u91cf\u7684\u4e0d\u786e\u5b9a\u6027\uff0c\u7279\u522b\u662f\u5728\u6d89\u53ca\u9ad8\u5ea6\u76f8\u5173\u53d8\u91cf\u7684\u60c5\u51b5\u4e0b\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u4ecb\u7ecd\u4e00\u4e2a\u7b80\u5355\u4e14\u8ba1\u7b97\u53ef\u6269\u5c55\u7684\u53d8\u91cf\u9009\u62e9\u65b9\u6cd5\u6765\u5e2e\u52a9\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\"</p> <p>\"\u9ad8\u5ea6\u76f8\u5173\u7684\u53d8\u91cf\u5bf9\u53d8\u91cf\u9009\u62e9\u65b9\u6cd5\u6784\u6210\u660e\u663e\u6311\u6218\uff0c\u56e0\u4e3a\u5b83\u4eec\u5f88\u96be\u76f8\u4e92\u533a\u5206\u3002\u5b9e\u9645\u4e0a\uff0c\u5728\u6781\u7aef\u60c5\u51b5\u4e0b\uff0c\u5f53\u4e24\u4e2a\u53d8\u91cf\uff08\u6bd4\u5982x1\u548cx2\uff09\u5b8c\u5168\u76f8\u5173\u65f6\uff0c\u4ec5\u51ed\u56de\u5f52\u5206\u6790\u65e0\u6cd5\u65ad\u5b9a\u5e94\u8be5\u9009\u62e9\u5176\u4e2d\u54ea\u4e00\u4e2a\u53d8\u91cf\u4f5c\u4e3a\u76f8\u5173\u53d8\u91cf\u3002\u5728\u67d0\u4e9b\u5e94\u7528\u4e2d\uff0c\u8fd9\u79cd\u6a21\u7cca\u6027\u9020\u6210\u7684\u5b9e\u9645\u95ee\u9898\u5f88\u5c11\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5728\u67d0\u4e9b\u5e94\u7528\u4e2d\uff0c\u53d8\u91cf\u9009\u62e9\u4ec5\u7528\u4e8e\u5e2e\u52a9\u5efa\u7acb\u51c6\u786e\u7684\u9884\u6d4b\u5668\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4efb\u610f\u9009\u62e9\u4e24\u4e2a\u76f8\u540c\u53d8\u91cf\u4e2d\u7684\u4e00\u4e2a\uff08\u6216\u4e24\u4e2a\uff09\u5c31\u8db3\u591f\u4e86\uff1b\u9884\u6d4b\u51c6\u786e\u6027\u4e0d\u53d7\u8fd9\u79cd\u9009\u62e9\u7684\u5f71\u54cd\u3002\u7136\u800c\uff0c\u5728\u5176\u4ed6\u79d1\u5b66\u5e94\u7528\u4e2d\uff0c\u53d8\u91cf\u9009\u62e9\u88ab\u7528\u4f5c\u5e2e\u52a9\u4e86\u89e3\u4e16\u754c\u7684\u624b\u6bb5\uff0c\u5728\u8fd9\u4e9b\u5e94\u7528\u4e2d\uff0c\u9ad8\u5ea6\u76f8\u5173\u53d8\u91cf\u9020\u6210\u7684\u6a21\u7cca\u6027\u66f4\u6210\u95ee\u9898\uff0c\u56e0\u4e3a\u79d1\u5b66\u7ed3\u8bba\u53d6\u51b3\u4e8e\u9009\u62e9\u54ea\u4e9b\u53d8\u91cf\u3002\u5728\u8fd9\u4e9b\u5e94\u7528\u4e2d\uff0c\u627f\u8ba4\u53d8\u91cf\u9009\u62e9\u7684\u4e0d\u786e\u5b9a\u6027\u81f3\u5173\u91cd\u8981\u3002\u8fd9\u9700\u8981\u80fd\u591f\u5f97\u51fa\u8bf8\u5982'x1\u6216x2\u662f\u76f8\u5173\u7684\uff0c\u6211\u4eec\u65e0\u6cd5\u51b3\u5b9a\u662f\u54ea\u4e00\u4e2a'\u8fd9\u6837\u7684\u7ed3\u8bba\u7684\u65b9\u6cd5\uff0c\u800c\u4e0d\u662f\u4efb\u610f\u9009\u62e9\u4e00\u4e2a\u53d8\u91cf\u5e76\u5ffd\u7565\u53e6\u4e00\u4e2a\u7684\u65b9\u6cd5\u3002\"</p> <p>\u7b2c\u4e09\u6bb5\uff08\u5173\u4e8e\u9057\u4f20\u7cbe\u7ec6\u5b9a\u4f4d\u7684\u5e94\u7528\uff09: \"\u8fd9\u4e9b\u95ee\u9898\u5728\u9057\u4f20\u7cbe\u7ec6\u5b9a\u4f4d\u4e2d\u7279\u522b\u660e\u663e\uff08\u4f8b\u5982 Veyrieras \u7b49\u4eba(2008)\u7684\u7814\u7a76\uff09\u3002\u7cbe\u7ec6\u5b9a\u4f4d\u7684\u76ee\u6807\u662f\u8bc6\u522b\u56e0\u679c\u5f71\u54cd\u67d0\u4e9b\u611f\u5174\u8da3\u7279\u5f81\uff08\u5982\u8840\u6db2\u4e2d\u7684\u4f4e\u5bc6\u5ea6\u8102\u86cb\u767d\u80c6\u56fa\u9187\u548c\u7ec6\u80de\u4e2d\u7684\u57fa\u56e0\u8868\u8fbe\uff09\u7684\u9057\u4f20\u53d8\u5f02\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u7cbe\u7ec6\u5b9a\u4f4d\u7684\u4e3b\u8981\u76ee\u6807\u662f\u4e86\u89e3\u4e16\u754c\uff0c\u800c\u4e0d\u662f\u5efa\u7acb\u66f4\u597d\u7684\u9884\u6d4b\u5668\u3002\uff08\u8fd9\u5e76\u4e0d\u662f\u8bf4\u9884\u6d4b\u9057\u4f20\u7279\u5f81\u4e0d\u91cd\u8981\uff1b\u5b9e\u9645\u4e0a\uff0c\u4e5f\u6709\u5927\u91cf\u5173\u4e8e\u9057\u4f20\u7279\u5f81\u9884\u6d4b\u7684\u5de5\u4f5c\uff0c\u4f46\u8fd9\u4e0d\u662f\u7cbe\u7ec6\u5b9a\u4f4d\u7684\u4e3b\u8981\u76ee\u6807\u3002\uff09\u76ee\u524d\u6700\u6210\u529f\u7684\u7cbe\u7ec6\u5b9a\u4f4d\u65b9\u6cd5\u5c06\u95ee\u9898\u6846\u5b9a\u4e3a\u53d8\u91cf\u9009\u62e9\u95ee\u9898\uff0c\u5efa\u7acb\u4e00\u4e2a\u56de\u5f52\u6a21\u578b\uff0c\u5176\u4e2d\u56de\u5f52\u7ed3\u679c\u662f\u611f\u5174\u8da3\u7684\u7279\u5f81\uff0c\u5019\u9009\u9884\u6d4b\u53d8\u91cf\u662f\u53ef\u7528\u7684\u9057\u4f20\u53d8\u5f02\u3002\u5728\u56de\u5f52\u6a21\u578b\u4e2d\u8fdb\u884c\u53d8\u91cf\u9009\u62e9\u53ef\u4ee5\u8bc6\u522b\u53ef\u80fd\u56e0\u679c\u5f71\u54cd\u7279\u5f81\u7684\u53d8\u5f02\u3002\u7cbe\u7ec6\u5b9a\u4f4d\u5177\u6709\u6311\u6218\u6027\uff0c\u56e0\u4e3a\u53d8\u91cf\uff08\u9057\u4f20\u53d8\u5f02\uff09\u53ef\u80fd\u9ad8\u5ea6\u76f8\u5173\uff0c\u8fd9\u662f\u7531\u4e8e\u79f0\u4e3a\u8fde\u9501\u4e0d\u5e73\u8861\u7684\u73b0\u8c61\u3002\u5b9e\u9645\u4e0a\uff0c\u5178\u578b\u7814\u7a76\u4e2d\u5305\u542b\u8bb8\u591a\u6837\u672c\u76f8\u5173\u6027\u8d85\u8fc70.99\u751a\u81f3\u7b49\u4e8e1\u7684\u9057\u4f20\u53d8\u5f02\u5bf9\u3002\"</p> <p>\u7b2c\u56db\u6bb5\uff08\u5173\u4e8e\u4ed6\u4eec\u7684\u65b9\u6cd5\uff09: \"\u6211\u4eec\u7684\u65b9\u6cd5\u5efa\u7acb\u5728\u4e4b\u524d\u8d1d\u53f6\u65af\u53d8\u91cf\u9009\u62e9\u56de\u5f52\uff08BVSR\uff09\u5de5\u4f5c\u7684\u57fa\u7840\u4e0a\uff0c\u8fd9\u4e9b\u5de5\u4f5c\u5df2\u7ecf\u5e7f\u6cdb\u5e94\u7528\u4e8e\u9057\u4f20\u7cbe\u7ec6\u5b9a\u4f4d\u548c\u76f8\u5173\u5e94\u7528\u4e2d\u3002BVSR\u662f\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u7684\u4e00\u4e2a\u6709\u5438\u5f15\u529b\u7684\u65b9\u6cd5\uff0c\u56e0\u4e3a\u539f\u5219\u4e0a\u5b83\u53ef\u4ee5\u8bc4\u4f30\u9009\u62e9\u54ea\u4e9b\u53d8\u91cf\u7684\u4e0d\u786e\u5b9a\u6027\uff0c\u5373\u4f7f\u53d8\u91cf\u9ad8\u5ea6\u76f8\u5173\u3002\u7136\u800c\uff0c\u5728\u5b9e\u8df5\u4e2d\u5e94\u7528BVSR\u4ecd\u7136\u56f0\u96be\uff0c\u81f3\u5c11\u6709\u4e24\u4e2a\u539f\u56e0\u3002\u9996\u5148\uff0cBVSR\u5728\u8ba1\u7b97\u4e0a\u5177\u6709\u6311\u6218\u6027\uff0c\u901a\u5e38\u9700\u8981\u5b9e\u73b0\u590d\u6742\u7684\u9a6c\u5c14\u53ef\u592b\u94fe\u8499\u7279\u5361\u7f57\u6216\u968f\u673a\u641c\u7d22\u7b97\u6cd5\u3002\u5176\u6b21\uff0c\u53ef\u80fd\u66f4\u91cd\u8981\u7684\u662f\uff0cBVSR\u65b9\u6cd5\u7684\u8f93\u51fa\u901a\u5e38\u662f\u4e00\u4e2a\u590d\u6742\u7684\u540e\u9a8c\u5206\u5e03\u2014\u2014\u6216\u8fd1\u4f3c\u540e\u9a8c\u5206\u5e03\u7684\u6837\u672c\u2014\u2014\u8fd9\u53ef\u80fd\u96be\u4ee5\u63d0\u70bc\u6210\u5bb9\u6613\u7406\u89e3\u7684\u7ed3\u679c\u3002\"</p> <p>\u7b2c\u4e94\u6bb5\uff08\u5173\u4e8e\u4ed6\u4eec\u7684\u521b\u65b0\uff09\uff1a \"\u6211\u4eec\u7684\u5de5\u4f5c\u901a\u8fc7\u51e0\u9879\u521b\u65b0\u89e3\u51b3\u4e86BVSR\u7684\u8fd9\u4e9b\u7f3a\u70b9\u3002\u6211\u4eec\u5f15\u5165\u4e86\u4e00\u4e2a\u65b0\u7684BVSR\u516c\u5f0f\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a'\u5355\u6548\u5e94\u4e4b\u548c'\u6a21\u578b\uff08SuSiE\uff09\u3002\u8fd9\u4e2a\u6a21\u578b\u867d\u7136\u4e0e\u73b0\u6709BVSR\u6a21\u578b\u76f8\u4f3c\uff0c\u4f46\u5177\u6709\u4e0d\u540c\u7684\u7ed3\u6784\uff0c\u81ea\u7136\u5bfc\u81f4\u4e86\u4e00\u4e2a\u7b80\u5355\u3001\u76f4\u89c2\u4e14\u5feb\u901f\u7684\u6a21\u578b\u62df\u5408\u7a0b\u5e8f\u2014\u2014\u8fed\u4ee3\u8d1d\u53f6\u65af\u9010\u6b65\u9009\u62e9\uff08IBSS\uff09\uff0c\u8fd9\u662f\u4f20\u7edf\u9010\u6b65\u9009\u62e9\u65b9\u6cd5\u7684\u8d1d\u53f6\u65af\u7c7b\u6bd4\uff08\u5e76\u4e14\u6bd4\u8fd9\u4e9b\u4f20\u7edf\u9009\u62e9\u65b9\u6cd5\u5177\u6709\u91cd\u8981\u4f18\u52bf\uff0c\u6211\u4eec\u5c06\u5728\u4e0b\u9762\u89e3\u91ca\uff09\u3002\u6211\u4eec\u901a\u8fc7\u8bc1\u660e\u5b83\u4f18\u5316\u4e86SuSiE\u4e0b\u540e\u9a8c\u5206\u5e03\u7684\u53d8\u5206\u8fd1\u4f3c\uff0c\u4e3a\u8fd9\u4e2a\u76f4\u89c2\u7b97\u6cd5\u63d0\u4f9b\u4e86\u539f\u5219\u6027\u7684\u8bc1\u660e\u3002\u867d\u7136BVSR\u7684\u53d8\u5206\u65b9\u6cd5\u5df2\u7ecf\u5b58\u5728\uff0c\u4f46\u6211\u4eec\u7684\u65b0\u65b9\u6cd5\u5f15\u5165\u4e86\u4e00\u4e2a\u4e0d\u540c\u7684\u8fd1\u4f3c\u5206\u5e03\u65cf\uff0c\u5728\u9ad8\u5ea6\u76f8\u5173\u53d8\u91cf\u7684\u8bbe\u7f6e\u4e2d\u63d0\u4f9b\u4e86\u66f4\u51c6\u786e\u7684\u63a8\u65ad\u3002\"</p> <p>\u7b2c\u516d\u6bb5\uff08\u5173\u4e8e\u65b9\u6cd5\u7684\u5173\u952e\u7279\u5f81\uff09\uff1a \"\u6211\u4eec\u65b9\u6cd5\u7684\u4e00\u4e2a\u5173\u952e\u7279\u5f81\uff0c\u4e5f\u662f\u533a\u522b\u4e8e\u5927\u591a\u6570\u73b0\u6709BVSR\u65b9\u6cd5\u7684\u5730\u65b9\uff0c\u662f\u5b83\u4ea7\u751f\u4e86\u53d8\u91cf\u7684'\u53ef\u4fe1\u96c6'\uff0c\u8fd9\u4e9b\u53ef\u4fe1\u96c6\u91cf\u5316\u4e86\u5f53\u591a\u4e2a\u9ad8\u5ea6\u76f8\u5173\u7684\u53d8\u91cf\u76f8\u4e92\u7ade\u4e89\u65f6\uff0c\u9009\u62e9\u54ea\u4e2a\u53d8\u91cf\u7684\u4e0d\u786e\u5b9a\u6027\u3002\u8fd9\u4e9b\u53ef\u4fe1\u96c6\u7684\u8bbe\u8ba1\u76ee\u6807\u662f\u5c3d\u53ef\u80fd\u5c0f\uff0c\u540c\u65f6\u4ecd\u80fd\u6355\u83b7\u76f8\u5173\u53d8\u91cf\u3002\u53ef\u4ee5\u8bf4\uff0c\u8fd9\u6b63\u662f\u6211\u4eec\u5e0c\u671b\u4ece\u57fa\u4e8e\u9a6c\u5c14\u53ef\u592b\u94fe\u8499\u7279\u5361\u7f57\u6216\u968f\u673a\u641c\u7d22BVSR\u65b9\u6cd5\u4e2d\u83b7\u5f97\u7684\u540e\u9a8c\u603b\u7ed3\uff0c\u4f46\u8fd9\u9700\u8981\u5bf9\u5176\u8f93\u51fa\u8fdb\u884c\u975e\u5e73\u51e1\u7684\u540e\u5904\u7406\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u76f4\u63a5\u63d0\u4f9b\u8fd9\u79cd\u540e\u9a8c\u603b\u7ed3\uff0c\u800c\u4e14\u51e0\u4e4e\u4e0d\u9700\u8981\u989d\u5916\u7684\u8ba1\u7b97\u52aa\u529b\u3002\"</p> <p>\u7b2c\u4e03\u6bb5\uff08\u8bba\u6587\u7ed3\u6784\uff09\uff1a \"\u672c\u6587\u7684\u7ed3\u6784\u5982\u4e0b\u3002\u7b2c2\u8282\u63d0\u4f9b\u4e86\u6211\u4eec\u5de5\u4f5c\u7684\u8fdb\u4e00\u6b65\u52a8\u673a\uff0c\u4ee5\u53caBVSR\u7684\u7b80\u8981\u80cc\u666f\u3002\u7b2c3\u8282\u63cf\u8ff0\u4e86\u65b0\u7684SuSiE\u6a21\u578b\u548c\u62df\u5408\u7a0b\u5e8f\u3002\u7b2c4\u8282\u4f7f\u7528\u6a21\u62df\uff08\u8bbe\u8ba1\u7528\u4e8e\u6a21\u4eff\u771f\u5b9e\u7684\u9057\u4f20\u7cbe\u7ec6\u5b9a\u4f4d\u7814\u7a76\uff09\u6765\u5c55\u793a\u6211\u4eec\u7684\u65b9\u6cd5\u4e0e\u73b0\u6709\u65b9\u6cd5\u76f8\u6bd4\u7684\u6709\u6548\u6027\u3002\u7b2c5\u8282\u8bf4\u660e\u4e86\u6211\u4eec\u7684\u65b9\u6cd5\u5728\u5f71\u54cd\u526a\u63a5\u7684\u9057\u4f20\u53d8\u5f02\u7cbe\u7ec6\u5b9a\u4f4d\u4e2d\u7684\u5e94\u7528\uff0c\u7b2c6\u8282\u7b80\u8981\u5f3a\u8c03\u4e86\u6211\u4eec\u7684\u65b9\u6cd5\u5728\u5176\u4ed6\u5e94\u7528\uff08\u5982\u53d8\u70b9\u95ee\u9898\uff09\u4e2d\u7684\u524d\u666f\uff08\u548c\u5c40\u9650\u6027\uff09\u3002\u6211\u4eec\u4ee5\u8ba8\u8bba\u7ed3\u675f\uff0c\u5f3a\u8c03\u4e86\u8fdb\u4e00\u6b65\u5de5\u4f5c\u7684\u65b9\u5411\u3002\"</p> <p>\u8fd9\u7bc7\u8bba\u6587\u7684\u4e3b\u8981\u8d21\u732e\uff1a \u63d0\u51fa\u4e86\u65b0\u7684SuSiE\u6a21\u578b\uff0c\u6539\u8fdb\u4e86\u73b0\u6709\u7684BVSR\u65b9\u6cd5 \u5f15\u5165\u4e86\u8fed\u4ee3\u8d1d\u53f6\u65af\u9010\u6b65\u9009\u62e9\uff08IBSS\uff09\u7b97\u6cd5 \u63d0\u4f9b\u4e86\u5904\u7406\u9ad8\u5ea6\u76f8\u5173\u53d8\u91cf\u7684\u65b0\u65b9\u6cd5 \u80fd\u591f\u76f4\u63a5\u751f\u6210\u6613\u4e8e\u7406\u89e3\u7684\u53ef\u4fe1\u96c6 \u5728\u8ba1\u7b97\u6548\u7387\u548c\u7ed3\u679c\u89e3\u91ca\u6027\u4e0a\u90fd\u6709\u6539\u8fdb \u8bba\u6587\u7684\u5e94\u7528\u9886\u57df\uff1a \u4e3b\u8981\u9488\u5bf9\u9057\u4f20\u7cbe\u7ec6\u5b9a\u4f4d \u53ef\u6269\u5c55\u5230\u5176\u4ed6\u53d8\u91cf\u9009\u62e9\u95ee\u9898 \u7279\u522b\u9002\u7528\u4e8e\u5904\u7406\u9ad8\u5ea6\u76f8\u5173\u53d8\u91cf\u7684\u60c5\u51b5 \u9002\u5408\u9700\u8981\u91cf\u5316\u9009\u62e9\u4e0d\u786e\u5b9a\u6027\u7684\u79d1\u5b66\u5e94\u7528</p>"},{"location":"blog/%E4%BD%BF%E7%94%A8%20joblib%20%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%9A%84%E5%B9%B6%E8%A1%8C%E8%AE%A1%E7%AE%97/","title":"\u4f7f\u7528 joblib \u5b9e\u73b0\u5e76\u884c\u8ba1\u7b97","text":"<p>\u4f7f\u7528 joblib \u5b9e\u73b0\u7b80\u5355\u7684\u5e76\u884c\u8ba1\u7b97\u3002</p>"},{"location":"blog/%E4%BD%BF%E7%94%A8%20joblib%20%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%9A%84%E5%B9%B6%E8%A1%8C%E8%AE%A1%E7%AE%97/#cpu","title":"\u67e5\u770b CPU \u6570\u91cf\u00b6","text":"<ul> <li>\u4f7f\u7528 multiprocessing\uff1a</li> </ul> <pre><code>import multiprocessing\n\nmultiprocessing.cpu_count()\n</code></pre> <ul> <li>\u4f7f\u7528 joblib\uff1a</li> </ul> <pre><code>import joblib\n\njoblib.cpu_count()\n</code></pre>"},{"location":"blog/%E4%BD%BF%E7%94%A8%20joblib%20%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%9A%84%E5%B9%B6%E8%A1%8C%E8%AE%A1%E7%AE%97/#_1","title":"\u4e32\u884c\u8fd0\u884c\u51fd\u6570","text":"<pre><code>def single(a):\n    \"\"\"\u5b9a\u4e49\u4e00\u4e2a\u7b80\u5355\u7684\u51fd\u6570\"\"\"\n    time.sleep(1)  # \u4f11\u7720 1s\n    print(a)  # \u6253\u5370\u51fa a\n</code></pre> <p>\u76f4\u63a5\u4f7f\u7528<code>for</code> \u5faa\u73af\u8fd0\u884c\u51fd\u6570 10 \u6b21\uff0c\u9700\u8981\u82b1 10 \u79d2\uff1a</p> <pre><code>import time\n\nstart = time.time()  # \u8bb0\u5f55\u5f00\u59cb\u7684\u65f6\u95f4\nfor i in range(10):  # \u6267\u884c 10 \u6b21 single() \u51fd\u6570\n    single(i)\nTime = time.time() - start  # \u8ba1\u7b97\u6267\u884c\u7684\u65f6\u95f4\nprint(\"\u4e00\u5171\u8017\u65f6\" + str(Time) + \"s\")\n\u5e76\u884c\u8fd0\u884c\u51fd\u6570\u00b6\n</code></pre>"},{"location":"blog/%E4%BD%BF%E7%94%A8%20joblib%20%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%9A%84%E5%B9%B6%E8%A1%8C%E8%AE%A1%E7%AE%97/#_2","title":"\u5e76\u884c\u8fd0\u884c\u51fd\u6570","text":"<pre><code>from joblib import Parallel, delayed\n\nstart = time.time()  # \u8bb0\u5f55\u5f00\u59cb\u7684\u65f6\u95f4\nParallel(n_jobs=5)(delayed(single)(i * 3) for i in range(10))  # \u5e76\u884c\u5316\u5904\u7406\nTime = time.time() - start  # \u8ba1\u7b97\u6267\u884c\u7684\u65f6\u95f4\nprint(\"\u4e00\u5171\u8017\u65f6\" + str(Time) + \"s\")\n</code></pre> <ul> <li>\u4e00\u5171\u8017\u65f6 2.76 \u79d2\u3002\u8fd9\u662f\u7531\u4e8e\u540c\u65f6\u8fd0\u884c 5 \u6b21\u51fd\u6570\uff0c\u603b\u5171\u8fd0\u884c 10 \u6b21\uff0c\u4e00\u5171\u82b1\u4e86 2 \u8f6e\u65f6\u95f4\u3002</li> <li>\u5e76\u4e14\uff0c\u51fd\u6570\u7684\u6253\u5370\u7ed3\u679c\u4e5f\u662f\u6bcf 5 \u4e2a\u540c\u65f6\u6253\u5370\u51fa\u6765\u7684\u3002</li> <li>\u5f53n_jobs\u7684\u503c\u4e3a 1 \u65f6\uff0c\u5373\u76f8\u5f53\u4e8efor\u5faa\u73af\u7684\u987a\u5e8f\u6267\u884c\uff0c\u7ed3\u679c\u4ecd\u7136\u4f1a\u662f 10 \u79d2\u3002</li> <li>\u5f53n_jobs\u7684\u503c\u4e3a -1 \u65f6\uff0c\u4f1a\u4f7f\u7528\u6240\u6709\u7684 CPU\u3002</li> <li>\u5f53n_jobs\u7684\u503c\u4e3a\u5176\u5b83\u8d1f\u503c\u65f6\uff0c\u4f1a\u4f7f\u7528\u6240\u6709\u7684 CPU \u6570\u91cf\u51cf\u53bbn_jobs\u3002\u4f8b\u5982\u4e00\u5171\u6709 8 \u4e2a CPU\uff0c\u5219n_jobs=-2\u610f\u5473\u7740\u4f7f\u7528 8-2=6 \u4e2a CPU\u3002</li> <li>\u5f53n_jobs=-1\u65f6\uff0c\u4f7f\u7528\u6240\u6709\u7684 CPU \u6267\u884c\u5e76\u884c\u8ba1\u7b97\u3002</li> <li>\u5f53n_jobs=1\u65f6\uff0c\u5c31\u4e0d\u4f1a\u4f7f\u7528\u5e76\u884c\u4ee3\u7801\uff0c\u5373\u7b49\u540c\u4e8e\u987a\u5e8f\u6267\u884c\uff0c\u53ef\u4ee5\u5728 debug \u60c5\u51b5\u4e0b\u4f7f\u7528\u3002</li> <li>\u5f53n_jobs&lt;-1\u65f6\uff0c\u5c06\u4f1a\u4f7f\u7528n_cpus + 1 + n_jobs\u4e2a CPU\uff0c\u4f8b\u5982n_jobs=-2\u65f6\uff0c\u5c06\u4f1a\u4f7f\u7528n_cpus-1\u4e2a CPU \u6838\uff0c\u5176\u4e2dn_cpus\u4e3a CPU \u6838\u7684\u6570\u91cf\u3002</li> <li>\u5f53n_jobs=None\u7684\u60c5\u51b5\u7b49\u540c\u4e8en_jobs=1\u3002</li> </ul>"},{"location":"blog/%E4%BD%BF%E7%94%A8%20joblib%20%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%9A%84%E5%B9%B6%E8%A1%8C%E8%AE%A1%E7%AE%97/#_3","title":"\u5176\u4ed6\uff1a","text":"<pre><code>from math import sqrt\nfrom joblib import Parallel, delayed\nParallel(n_jobs=1)(delayed(sqrt)(i*2) for i in range(10))\n#[0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0]\n</code></pre> <pre><code>[0.0,\n 1.4142135623730951,\n 2.0,\n 2.449489742783178,\n 2.8284271247461903,\n 3.1622776601683795,\n 3.4641016151377544,\n 3.7416573867739413,\n 4.0,\n 4.242640687119285]\n</code></pre> <pre><code>from math import modf\nfrom joblib import Parallel, delayed\nr = Parallel(n_jobs=1)(delayed(modf)(i/2.) for i in range(10))\nres, i = zip(*r)\nprint(res)\nprint(i)\n</code></pre> <pre><code>(0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5)\n(0.0, 0.0, 1.0, 1.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0)\n</code></pre> <p>\u53c2\u6570:verbose: int, default=0</p> <p>\u5197\u4f59\u7ea7\u522b\uff1a\u5982\u679c\u4e0d\u4e3a\u96f6\uff0c\u5219\u6253\u5370\u8fdb\u5ea6\u4fe1\u606f\u3002 \u8d85\u8fc7 50 \u65f6\uff0c\u8f93\u51fa\u5c06\u53d1\u9001\u5230 stdout\u3002 \u4fe1\u606f\u7684\u9891\u7387\u968f\u5197\u957f\u7a0b\u5ea6\u7684\u589e\u52a0\u800c\u589e\u52a0\u3002 \u5982\u679c\u8d85\u8fc7 10\uff0c\u5219\u62a5\u544a\u6240\u6709\u8fed\u4ee3\u3002</p> <p>\u8fdb\u5ea6\u8868\uff1averbose \u7684\u503c\u8d8a\u9ad8\uff0c\u4fe1\u606f\u8d8a\u591a\uff1a</p> <pre><code>from time import sleep\nfrom joblib import Parallel, delayed\nr = Parallel(n_jobs=2, verbose=10)(\n    delayed(sleep)(.2) for _ in range(10)) \n</code></pre> <pre><code>[Parallel(n_jobs=2)]: Using backend LokyBackend with 2 concurrent workers.\n[Parallel(n_jobs=2)]: Done   1 tasks      | elapsed:    0.9s\n[Parallel(n_jobs=2)]: Done   4 tasks      | elapsed:    1.1s\n[Parallel(n_jobs=2)]: Done  10 out of  10 | elapsed:    1.7s finished\n</code></pre> <p>pre_dispatch: {\u2018all\u2019, integer, or expression, as in \u20183n_jobs\u2019}, default=\u20192n_jobs\u2019</p> <p>\u8981\u9884\u5148\u5206\u914d\u7684\u6279\u6b21\uff08\u4efb\u52a1\uff09\u6570\u91cf\u3002 \u9ed8\u8ba4\u4e3a \"2*n_job\"\u3002 \u5f53 batch_size=\"auto \"\u65f6\uff0c\u8fd9\u662f\u5408\u7406\u7684\u9ed8\u8ba4\u503c\uff0c\u5de5\u4eba\u4e0d\u4f1a\u997f\u6b7b\u3002 \u8bf7\u6ce8\u610f\uff0c\u6b64\u5904\u53ea\u5141\u8bb8\u4f7f\u7528\u57fa\u672c\u8fd0\u7b97\uff0c\u4e14\u8868\u8fbe\u5f0f\u4e2d\u4e0d\u80fd\u4f7f\u7528\u4efb\u4f55\u6a21\u5757\u3002</p> <p>\u5728\u751f\u4ea7\u8005/\u6d88\u8d39\u8005\u60c5\u51b5\u4e0b\u4f7f\u7528 pre_dispatch\uff0c\u6570\u636e\u662f\u5373\u65f6\u751f\u6210\u7684\u3002 \u8bf7\u6ce8\u610f\uff0c\u5728\u5e76\u884c\u5faa\u73af\u542f\u52a8\u4e4b\u524d\uff0c\u751f\u4ea7\u8005\u9996\u5148\u88ab\u8c03\u7528 3 \u6b21\uff0c\u7136\u540e\u88ab\u8c03\u7528\u4ee5\u5373\u65f6\u751f\u6210\u65b0\u6570\u636e\uff1a</p> <pre><code>from math import sqrt\nfrom joblib import Parallel, delayed\ndef producer():\n    for i in range(6):\n        print('Produced %s' % i)\n        yield i\nout = Parallel(n_jobs=2, verbose=100, pre_dispatch='1.5*n_jobs')(\n    delayed(sqrt)(i) for i in producer())\n</code></pre> <pre><code>[Parallel(n_jobs=2)]: Using backend LokyBackend with 2 concurrent workers.\nProduced 0\nProduced 1\nProduced 2\n[Parallel(n_jobs=2)]: Done   1 tasks      | elapsed:    0.7s\nProduced 3\nProduced 4\n[Parallel(n_jobs=2)]: Done   2 tasks      | elapsed:    0.7s\n[Parallel(n_jobs=2)]: Done   3 tasks      | elapsed:    0.7s\nProduced 5\n[Parallel(n_jobs=2)]: Done   4 tasks      | elapsed:    0.7s\n[Parallel(n_jobs=2)]: Done   6 out of   6 | elapsed:    0.7s remaining:    0.0s\n[Parallel(n_jobs=2)]: Done   6 out of   6 | elapsed:    0.7s finished\n</code></pre>"},{"location":"blog/%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E2%80%94%E6%95%B0%E6%8D%AE%E7%AF%87/","title":"\u5b9e\u9a8c\u8bbe\u8ba1\u548c\u89c2\u5bdf\u6027\u7814\u7a76\u2014\u6570\u636e\u7bc7","text":"<p>\u662f\u7684\uff0c\u8fd9\u91cc\u6709\u4e00\u4e9b\u5e38\u7528\u7684\u7eb5\u5411\u6570\u636e\u96c6\u63a8\u8350\uff1a</p> <ol> <li>R\u5185\u7f6e\u6570\u636e\u96c6\uff1a</li> <li><code>ChickWeight</code>: \u9e21\u7684\u751f\u957f\u6570\u636e\uff0c\u8bb0\u5f55\u4e86\u4e0d\u540c\u996e\u98df\u65b9\u6848\u4e0b\u9e21\u7684\u4f53\u91cd\u53d8\u5316</li> <li><code>Orthodont</code>: \u7259\u9f7f\u6b63\u7578\u6570\u636e\uff0c\u8bb0\u5f55\u4e86\u513f\u7ae5\u7259\u9f7f\u751f\u957f\u7684\u7eb5\u5411\u6d4b\u91cf\u6570\u636e</li> <li> <p><code>Oxboys</code>: \u725b\u6d25\u7537\u5b69\u751f\u957f\u6570\u636e\uff0c\u8bb0\u5f55\u4e86\u9752\u6625\u671f\u7537\u5b69\u7684\u8eab\u9ad8\u53d8\u5316</p> </li> <li> <p>nlme\u5305\u4e2d\u7684\u6570\u636e\u96c6\uff1a <pre><code>library(nlme)\n</code></pre></p> </li> <li><code>Glucose</code>: \u8840\u7cd6\u6c34\u5e73\u968f\u65f6\u95f4\u53d8\u5316\u7684\u6570\u636e</li> <li><code>Pixel</code>: \u533b\u5b66\u56fe\u50cf\u50cf\u7d20\u5f3a\u5ea6\u6570\u636e</li> <li><code>Wheat</code>: \u5c0f\u9ea6\u4ea7\u91cf\u6570\u636e</li> <li> <p><code>BodyWeight</code>: \u5927\u9f20\u4f53\u91cd\u53d8\u5316\u6570\u636e</p> </li> <li> <p>lme4\u5305\u4e2d\u7684\u6570\u636e\u96c6\uff1a <pre><code>library(lme4)\n</code></pre></p> </li> <li><code>sleepstudy</code>: \u7761\u7720\u5265\u593a\u7814\u7a76\u6570\u636e</li> <li> <p><code>cake</code>: \u86cb\u7cd5\u914d\u6599\u5b9e\u9a8c\u6570\u636e</p> </li> <li> <p>\u5176\u4ed6\u5e38\u7528\u6570\u636e\u96c6\uff1a</p> </li> <li>CD4\u6570\u636e\u96c6\uff08AIDS\u7814\u7a76\u4e2dCD4\u7ec6\u80de\u8ba1\u6570\u7684\u7eb5\u5411\u6570\u636e\uff09</li> <li>ACTG 175\u4e34\u5e8a\u8bd5\u9a8c\u6570\u636e\uff08HIV\u6cbb\u7597\u7814\u7a76\uff09</li> <li> <p>Berkeley Growth Study\u6570\u636e\uff08\u513f\u7ae5\u751f\u957f\u53d1\u80b2\u7814\u7a76\uff09</p> </li> <li> <p>\u516c\u5f00\u6570\u636e\u5e93\uff1a</p> </li> <li>UCI Machine Learning Repository</li> <li>Harvard Dataverse</li> <li>Kaggle</li> </ol> <p>\u4f7f\u7528\u8fd9\u4e9b\u6570\u636e\u7684\u793a\u4f8b\u4ee3\u7801\uff1a <pre><code># \u52a0\u8f7d\u5185\u7f6e\u6570\u636e\ndata(ChickWeight)\ndata(Orthodont)\n\n# \u67e5\u770b\u6570\u636e\u7ed3\u6784\nstr(ChickWeight)\nhead(Orthodont)\n\n# \u52a0\u8f7dnlme\u5305\u6570\u636e\nlibrary(nlme)\ndata(Glucose)\ndata(Pixel)\n\n# \u52a0\u8f7dlme4\u5305\u6570\u636e\nlibrary(lme4)\ndata(sleepstudy)\n</code></pre></p> <p>\u9009\u62e9\u6570\u636e\u96c6\u65f6\uff0c\u5efa\u8bae\u8003\u8651\uff1a 1. \u6570\u636e\u7684\u5b8c\u6574\u6027 2. \u53d8\u91cf\u7684\u7c7b\u578b\u548c\u6570\u91cf 3. \u6d4b\u91cf\u65f6\u95f4\u70b9\u7684\u6570\u91cf 4. \u662f\u5426\u6709\u7f3a\u5931\u503c 5. \u6570\u636e\u7684\u6587\u6863\u8bf4\u660e\u662f\u5426\u5b8c\u5584</p> <p>\u8fd9\u4e9b\u6570\u636e\u96c6\u90fd\u6709\u8be6\u7ec6\u7684\u6587\u6863\u8bf4\u660e\uff0c\u53ef\u4ee5\u901a\u8fc7<code>?\u6570\u636e\u96c6\u540d\u79f0</code>\u6765\u67e5\u770b\uff0c\u4f8b\u5982\uff1a <pre><code>?ChickWeight\n?Orthodont\n?sleepstudy\n</code></pre></p> <p>\u6211\u4eec\u6700\u7ec8\u9009\u62e9\u4e86\u7761\u7720\u5265\u593a\u7814\u7a76\u6570\u636e\u3002 \u76f8\u5173\u7684\u6570\u636e\u5206\u6790\u94fe\u63a5</p>"},{"location":"blog/%E5%BC%82%E5%B8%B8%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95/","title":"\u5f02\u5e38\u68c0\u6d4b\u7b97\u6cd5","text":""},{"location":"blog/%E5%BC%82%E5%B8%B8%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95/#isolation-forest","title":"Isolation Forest","text":"<p>\u7528\u968f\u673a\u8bbe\u7f6e\u7684itree\u5bf9\u8fdb\u884c\u6570\u636e\u5206\u7c7b \u5f02\u5e38\u70b9\u4e00\u822c\u90fd\u662f\u975e\u5e38\u7a00\u6709\u7684\uff0c\u5728iTree\u4e2d\u4f1a\u5f88\u5feb\u88ab\u5212\u5206\u5230\u53f6\u5b50\u8282\u70b9\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528\u53f6\u5b50\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84h(x)\u957f\u5ea6\u6765\u5224\u65ad\u4e00\u6761\u8bb0\u5f55x\u662f\u5426\u662f\u5f02\u5e38\u70b9\u3002 \u4ece\u5f02\u5e38\u5206\u503c\u7684\u516c\u5f0f\u770b\uff0c\u5982\u679c\u6570\u636e x xx \u5728\u591a\u68f5 iTree \u4e2d\u7684\u5e73\u5747\u8def\u5f84\u957f\u5ea6\u8d8a\u77ed\uff0c\u5f97\u5206\u8d8a\u63a5\u8fd1 1\uff0c\u8868\u660e\u6570\u636e x xx \u8d8a\u5f02\u5e38\uff1b\u5982\u679c\u6570\u636e x xx \u5728\u591a\u68f5 iTree \u4e2d\u7684\u5e73\u5747\u8def\u5f84\u957f\u5ea6\u8d8a\u957f\uff0c\u5f97\u5206\u8d8a\u63a5\u8fd1 0\uff0c\u8868\u793a\u6570\u636e x xx \u8d8a\u6b63\u5e38\uff1b\u5982\u679c\u6570\u636e x xx \u5728\u591a\u68f5 iTree \u4e2d\u7684\u5e73\u5747\u8def\u5f84\u957f\u5ea6\u63a5\u8fd1\u6574\u4f53\u5747\u503c\uff0c\u5219\u6253\u5206\u4f1a\u5728 0.5 \u9644\u8fd1\u3002</p>"},{"location":"blog/%E5%BC%82%E5%B8%B8%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95/#_1","title":"\u7ebf\u6027\u56de\u5f52\u4e2d\u7684\u5f02\u5e38\u70b9\u68c0\u6d4b:","text":""},{"location":"blog/%E5%BC%82%E5%B8%B8%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95/#_2","title":"\u9ad8\u6760\u6746\u70b9","text":""},{"location":"blog/%E5%BC%82%E5%B8%B8%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95/#_3","title":"\u79bb\u7fa4\u70b9","text":""},{"location":"blog/%E5%BC%82%E5%B8%B8%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95/#_4","title":"\u5f3a\u5f71\u54cd\u70b9","text":""},{"location":"blog/%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97/","title":"\u76f8\u5173\u6027","text":"<p>ACF <pre><code>acf(data)\n</code></pre></p> <p>\u6e38\u7a0b\u68c0\u9a8c</p> <pre><code>runs(data-mean(data))\n</code></pre>"},{"location":"blog/%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97/#_2","title":"\u57fa\u7840\u6982\u5ff5","text":"<p>\u5747\u503c\u51fd\u6570 \u81ea\u534f\u65b9\u5dee\u51fd\u6570 \u81ea\u76f8\u5173\u51fd\u6570 \u5e73\u7a33\u6027</p>"},{"location":"blog/%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97/#_3","title":"\u7ecf\u5178\u6a21\u578b","text":"<p>MA(q) q\u662f\u975e\u5b63\u8282\u79fb\u52a8\u5e73\u5747\u7684\u9636\u6570 AR(p) p\u662f\u975e\u5b63\u8282\u81ea\u56de\u5f52\u7684\u9636\u6570 ARIMA(p,d,q) , d \u662f\u5dee\u5206\u6b21\u6570</p>"},{"location":"blog/%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97/#_4","title":"\u5b63\u8282\u53c2\u6570\uff1a","text":"<p>SMA(s) ARMA(p,q) ARIMA(p,d,q) ARIMA(p,d,q)(s,m)  seasonal_decompose(data)  plot_acf(data)  plot_pacf(data)  plot_pacf(data, lags=12)  plot_acf(data, lags=12)     plot_acf(data, lags=12, alpha=0.05)</p>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/","title":"\u5e7f\u4e49\u7ebf\u6027\u6a21\u578b","text":""},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#11","title":"1.1 \u4ea7\u524d\u62a4\u7406\u6570\u636e\u7684\u903b\u8f91\u56de\u5f52\u5206\u6790","text":""},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_2","title":"\u6570\u636e\u51c6\u5907","text":"<pre><code># \u8bfb\u53d6\u6570\u636e\nprenatal.dat &lt;- read.table(\"data/prenatal.dat\", header=T)\n\n# \u521b\u5efa\u54cd\u5e94\u53d8\u91cf\nprenatal.dat$resp &lt;- cbind(prenatal.dat$y, prenatal.dat$m-prenatal.dat$y)\n</code></pre>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_3","title":"\u6a21\u578b\u5206\u6790","text":""},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#1loc","title":"\u6a21\u578b1\uff1a\u4ec5\u5305\u542b\u4f4d\u7f6e(loc)\u53d8\u91cf","text":"<pre><code>model1 &lt;- glm(resp~loc, family=binomial(link=logit), data=prenatal.dat)\n</code></pre> <p>\u4e3b\u8981\u53d1\u73b0\uff1a - \u622a\u8ddd = -2.0929 (p &lt; 0.001) - \u4f4d\u7f6e\u6548\u5e94 = -0.6671 (p = 0.0166) - AIC = 31.969</p>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#2clinicloc","title":"\u6a21\u578b2\uff1a\u5305\u542b\u8bca\u6240(clinic)\u548c\u4f4d\u7f6e(loc)\u53d8\u91cf","text":"<pre><code>model2 &lt;- glm(resp ~ clinic + loc, family=binomial(link=logit), data=prenatal.dat)\n</code></pre> <p>\u4e3b\u8981\u53d1\u73b0\uff1a - \u622a\u8ddd = -1.7410 (p &lt; 0.001) - \u8bca\u6240\u6548\u5e94 = -0.9863 (p = 0.00141) - \u4f4d\u7f6e\u6548\u5e94 = -0.1503 (p = 0.64894\uff0c\u4e0d\u663e\u8457) - AIC = 23.262</p>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#3","title":"\u6a21\u578b3\uff1a\u5305\u542b\u4ea4\u4e92\u6548\u5e94","text":"<pre><code>model3 &lt;- glm(resp ~ clinic*loc, family=binomial(link=logit), data=prenatal.dat)\n</code></pre> <p>\u4e3b\u8981\u53d1\u73b0\uff1a - \u622a\u8ddd = -1.7568 (p &lt; 0.001) - \u8bca\u6240\u6548\u5e94 = -0.9287 (p = 0.00822) - \u4f4d\u7f6e\u6548\u5e94 = 0.0076 (p = 0.98935\uff0c\u4e0d\u663e\u8457) - \u4ea4\u4e92\u6548\u5e94 = -0.2297 (p = 0.74104\uff0c\u4e0d\u663e\u8457) - AIC = 25.155</p>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#4clinic","title":"\u6a21\u578b4\uff1a\u4ec5\u5305\u542b\u8bca\u6240(clinic)\u53d8\u91cf","text":"<pre><code>model4 &lt;- glm(resp ~ clinic, family=binomial(link=logit), data=prenatal.dat)\n</code></pre> <p>\u4e3b\u8981\u53d1\u73b0\uff1a - \u622a\u8ddd = -1.7560 (p &lt; 0.001) - \u8bca\u6240\u6548\u5e94 = -1.0624 (p &lt; 0.001) - AIC = 21.47</p>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_4","title":"\u7ed3\u8bba","text":"<ol> <li>\u6a21\u578b\u6bd4\u8f83\u663e\u793a\uff0c\u6a21\u578b4\uff08\u4ec5\u5305\u542b\u8bca\u6240\u53d8\u91cf\uff09\u5177\u6709\u6700\u4f4e\u7684AIC\u503c\uff0c\u53ef\u80fd\u662f\u6700\u4f18\u6a21\u578b</li> <li>\u8bca\u6240\u6548\u5e94\u5728\u6240\u6709\u6a21\u578b\u4e2d\u90fd\u663e\u8457</li> <li>\u4f4d\u7f6e\u6548\u5e94\u4ec5\u5728\u5355\u72ec\u5efa\u6a21\u65f6\u663e\u8457\uff08\u6a21\u578b1\uff09\uff0c\u52a0\u5165\u5176\u4ed6\u53d8\u91cf\u540e\u53d8\u5f97\u4e0d\u663e\u8457</li> <li>\u6ca1\u6709\u53d1\u73b0\u663e\u8457\u7684\u4ea4\u4e92\u6548\u5e94</li> </ol>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#12","title":"1.2 \u795e\u7ecf\u6bcd\u7ec6\u80de\u7624\u513f\u7ae5\u7684\u9884\u540e\u5206\u6790","text":""},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_5","title":"\u6570\u636e\u51c6\u5907","text":"<pre><code># \u8bfb\u53d6\u6570\u636e\nneuro.dat &lt;- read.table(\"data/neuro.dat\", header=T)\n\n# \u521b\u5efa\u5e74\u9f84\u548c\u5206\u671f\u7684\u6307\u793a\u53d8\u91cf\uff08\u4f7f\u7528treatment\u5bf9\u6bd4\uff09\nneuro.dat$agef &lt;- factor(neuro.dat$age)\nneuro.dat$ageft &lt;- C(neuro.dat$agef, treatment)\nneuro.dat$stagef &lt;- factor(neuro.dat$stage)\nneuro.dat$stageft &lt;- C(neuro.dat$stagef, treatment)\n\n# \u6784\u5efa\u903b\u8f91\u56de\u5f52\u7684\u54cd\u5e94\u53d8\u91cf\nneuro.dat$resp &lt;- cbind(neuro.dat$y, neuro.dat$m-neuro.dat$y)\n</code></pre>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_6","title":"\u6a21\u578b\u5206\u6790","text":""},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_7","title":"\u4e3b\u6548\u5e94\u6a21\u578b","text":"<pre><code>model1 &lt;- glm(resp ~ ageft + stageft, family=binomial(link=logit), data=neuro.dat)\n</code></pre> <p>\u4e3b\u8981\u53d1\u73b0\uff1a - \u5e74\u9f84\u6548\u5e94\uff08\u76f8\u5bf9\u4e8e\u7b2c\u4e00\u7ec4\uff09:   - ageft2: -2.1181 (p &lt; 0.001)   - ageft3: -2.6130 (p &lt; 0.001) - \u5206\u671f\u6548\u5e94\uff08\u76f8\u5bf9\u4e8e\u7b2c\u4e00\u671f\uff09:   - stageft2: -1.2529 (p = 0.110)   - stageft3: -1.7759 (p = 0.026)   - stageft4: -4.3678 (p &lt; 0.001)   - stageft5: -1.0222 (p = 0.237)</p>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_8","title":"\u6b8b\u5dee\u5206\u6790","text":"<pre><code># \u8ba1\u7b97\u504f\u5dee\u6b8b\u5dee\u548c\u76ae\u5c14\u900a\u6b8b\u5dee\nrd1 &lt;- residuals.glm(model1, \"deviance\")\nrp1 &lt;- (neuro.dat$y - neuro.dat$m*fv1)/sqrt(neuro.dat$m*fv1*(1-fv1))\n\n# \u7ed8\u5236\u6b8b\u5dee\u56fe\nplot(fv1, rd1, ylim=c(-3,3))\npoints(fv1, rp1, pch=4, col=2)\n</code></pre> <p>\u6b8b\u5dee\u56fe:</p> <p></p>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_9","title":"\u7b80\u5316\u6a21\u578b\u6bd4\u8f83","text":""},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_10","title":"\u4ec5\u5305\u542b\u5e74\u9f84\u7684\u6a21\u578b","text":"<pre><code>model2 &lt;- glm(resp ~ ageft, family=binomial(link=logit), data=neuro.dat)\n</code></pre>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_11","title":"\u4ec5\u5305\u542b\u5206\u671f\u7684\u6a21\u578b","text":"<pre><code>model3 &lt;- glm(resp ~ stageft, family=binomial(link=logit), data=neuro.dat)\n</code></pre> <p>\u6a21\u578b\u6bd4\u8f83\u7ed3\u679c\uff1a - model1 vs model2: p = 3.309e-15\uff08\u5206\u671f\u6548\u5e94\u663e\u8457\uff09 - model1 vs model3: p = 7.464e-08\uff08\u5e74\u9f84\u6548\u5e94\u663e\u8457\uff09</p>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_12","title":"\u7f6e\u4fe1\u533a\u95f4\u4f30\u8ba1","text":""},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#ivvs-i95","title":"IV\u671fvs I\u671f\u7684\u5b58\u6d3b\u6bd4\u503c\u6bd4\u768495%\u7f6e\u4fe1\u533a\u95f4","text":"<pre><code># \u70b9\u4f30\u8ba1\uff1aexp(-4.3678) = 0.0127\n# 95% CI: (0.0027, 0.0597)\n</code></pre>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#24-vs-12-2395","title":"24+\u6708\u9f84 vs 12-23\u6708\u9f84\u7684\u5b58\u6d3b\u6bd4\u503c\u6bd4\u768495%\u7f6e\u4fe1\u533a\u95f4","text":"<pre><code># \u70b9\u4f30\u8ba1\uff1a0.6096\n# 95% CI: (0.2223, 1.6717)\n</code></pre>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_13","title":"\u7ed3\u8bba","text":"<ol> <li>\u5e74\u9f84\u548c\u5206\u671f\u90fd\u662f\u91cd\u8981\u7684\u9884\u540e\u56e0\u7d20</li> <li>\u5206\u671fIV\u671f\u60a3\u8005\u7684\u5b58\u6d3b\u51e0\u7387\u663e\u8457\u4f4e\u4e8eI\u671f\u60a3\u8005</li> <li>\u4e0d\u540c\u5e74\u9f84\u7ec4\u95f4\u7684\u5b58\u6d3b\u5dee\u5f02\u4e0d\u592a\u660e\u663e\uff08\u7f6e\u4fe1\u533a\u95f4\u5305\u542b1\uff09</li> <li>\u6a21\u578b\u62df\u5408\u826f\u597d\uff0c\u6b8b\u5dee\u5206\u5e03\u5408\u7406</li> </ol>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#21","title":"2.1 \u8239\u8236\u635f\u574f\u4e8b\u4ef6\u7684\u6570\u636e\u5206\u6790","text":""},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_14","title":"\u6570\u636e\u51c6\u5907","text":"<pre><code># \u8bfb\u53d6\u6570\u636e\nship.dat &lt;- read.table(\"data/ship.dat\", header=T)\n\n# \u521b\u5efa\u56e0\u5b50\u53d8\u91cf\nship.dat$typef &lt;- factor(ship.dat$type)\nship.dat$typeft &lt;- C(ship.dat$typef, treatment)\nship.dat$cyrf &lt;- factor(ship.dat$cyr)\nship.dat$cyrft &lt;- C(ship.dat$cyrf, treatment)\nship.dat$oyrf &lt;- factor(ship.dat$oyr)\nship.dat$oyrft &lt;- C(ship.dat$oyrf, treatment)\n</code></pre>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_15","title":"\u6a21\u578b\u5206\u6790","text":""},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_16","title":"\u4e3b\u6548\u5e94\u6a21\u578b\uff08\u5305\u542b\u504f\u7f6e\u9879\uff09","text":"<pre><code>model1 &lt;- glm(y ~ typeft + cyrft + oyrft + offset(log(months)), family=poisson, data=ship.dat)\n</code></pre> <p>\u4e3b\u8981\u53d1\u73b0\uff1a - \u622a\u8ddd = -6.4059 (p &lt; 0.001) - \u8239\u578b\u6548\u5e94\uff1a   - typeft2: -0.5433 (p = 0.00222)   - typeft3: -0.6874 (p = 0.0367) - \u5efa\u9020\u5e74\u4efd\u6548\u5e94\uff1a   - cyrft2: 0.6971 (p &lt; 0.001)   - cyrft3: 0.8184 (p &lt; 0.001) - \u64cd\u4f5c\u5e74\u4efd\u6548\u5e94\uff1a   - oyrft2: 0.3845 (p = 0.00115)</p>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_17","title":"\u8bca\u65ad\u6a21\u578b\uff08\u5c06\u504f\u7f6e\u9879\u89c6\u4e3a\u534f\u53d8\u91cf\uff09","text":"<pre><code>model2 &lt;- glm(y ~ typeft + cyrft + oyrft + log(months), family=poisson, data=ship.dat)\n</code></pre>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_18","title":"\u5173\u8054\u6027\u68c0\u9a8c","text":""},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_19","title":"\u8239\u578b\u4e0e\u4e8b\u4ef6\u9891\u7387\u7684\u5173\u8054","text":"<pre><code>model3a &lt;- glm(y ~ cyrft + oyrft + offset(log(months)), family=poisson, data=ship.dat)\n</code></pre> <ul> <li>p-value = 9.299568e-05\uff08\u663e\u8457\uff09</li> </ul>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_20","title":"\u5efa\u9020\u5e74\u4efd\u4e0e\u4e8b\u4ef6\u9891\u7387\u7684\u5173\u8054","text":"<pre><code>model3b &lt;- glm(y ~ typeft + oyrft + offset(log(months)), family=poisson, data=ship.dat)\n</code></pre> <ul> <li>p-value = 6.974977e-07\uff08\u663e\u8457\uff09</li> </ul>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_21","title":"\u64cd\u4f5c\u5e74\u4efd\u4e0e\u4e8b\u4ef6\u9891\u7387\u7684\u5173\u8054","text":"<pre><code>model3c &lt;- glm(y ~ typeft + cyrft + offset(log(months)), family=poisson, data=ship.dat)\n</code></pre> <ul> <li>p-value = 0.001094692\uff08\u663e\u8457\uff09</li> </ul>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_22","title":"\u4ea4\u4e92\u6548\u5e94\u68c0\u9a8c","text":""},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_23","title":"\u8239\u578b\u4e0e\u5efa\u9020\u5e74\u4efd\u7684\u4ea4\u4e92\u6548\u5e94","text":"<pre><code>model4 &lt;- glm(y ~ typeft + cyrft + oyrft + typeft*cyrft + offset(log(months)), family=poisson, data=ship.dat)\n</code></pre> <ul> <li>p-value = 0.01966268\uff08\u663e\u8457\uff09</li> </ul>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_24","title":"\u8239\u578b\u4e0e\u64cd\u4f5c\u5e74\u4efd\u7684\u4ea4\u4e92\u6548\u5e94","text":"<pre><code>model5 &lt;- glm(y ~ typeft + cyrft + oyrft + typeft*oyrft + offset(log(months)), family=poisson, data=ship.dat)\n</code></pre> <ul> <li>p-value = 0.2936317\uff08\u4e0d\u663e\u8457\uff09</li> </ul>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_25","title":"\u5efa\u9020\u5e74\u4efd\u4e0e\u64cd\u4f5c\u5e74\u4efd\u7684\u4ea4\u4e92\u6548\u5e94","text":"<pre><code>model6 &lt;- glm(y ~ typeft + cyrft + oyrft + cyrft*oyrft + offset(log(months)), family=poisson, data=ship.dat)\n</code></pre> <ul> <li>p-value = 0.4091268\uff08\u4e0d\u663e\u8457\uff09</li> </ul> <p>\u6b8b\u5dee\u56fe:</p> <p></p>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_26","title":"\u7ed3\u8bba","text":"<ol> <li>\u8239\u578b\u3001\u5efa\u9020\u5e74\u4efd\u548c\u64cd\u4f5c\u5e74\u4efd\u5bf9\u4e8b\u4ef6\u9891\u7387\u6709\u663e\u8457\u5f71\u54cd</li> <li>\u8239\u578b\u4e0e\u5efa\u9020\u5e74\u4efd\u4e4b\u95f4\u5b58\u5728\u663e\u8457\u7684\u4ea4\u4e92\u6548\u5e94</li> <li>\u5176\u4ed6\u4ea4\u4e92\u6548\u5e94\u4e0d\u663e\u8457</li> <li>\u6a21\u578b\u62df\u5408\u826f\u597d\uff0c\u6b8b\u5dee\u5206\u5e03\u5408\u7406</li> </ol>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#22-gail1980","title":"2.2 \u57fa\u4e8eGail\u7b49\u4eba(1980)\u7684\u81f4\u764c\u6027\u5b9e\u9a8c\u6570\u636e\u5206\u6790","text":""},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_27","title":"\u6570\u636e\u51c6\u5907","text":"<pre><code># \u8bfb\u53d6\u6570\u636e\nrats.pw &lt;- read.table('data/rats.pw.txt', header=T)\n</code></pre>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_28","title":"\u6a21\u578b\u5206\u6790","text":""},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_29","title":"\u5bf9\u7167\u7ec4\u7684\u5206\u6bb5\u5e38\u6570\u6a21\u578b","text":"<pre><code>pfitC &lt;- glm(count ~ offset(log(len)) + factor(interval), \n             family=poisson(link=log), \n             data=rats.pw, \n             subset=(trt==0))\n</code></pre> <p>\u4e3b\u8981\u53d1\u73b0\uff1a - \u622a\u8ddd = -3.0937 (p &lt; 0.001) - \u65f6\u95f4\u95f4\u9694\u6548\u5e94\uff1a   - interval2: 0.1625 (p = 0.485)   - interval3: 0.3023 (p = 0.181)   - interval4: -0.1569 (p = 0.527)</p>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_30","title":"\u5305\u542b\u5904\u7406\u6548\u5e94\u7684\u4e58\u6cd5\u6a21\u578b","text":"<pre><code>pfit &lt;- glm(count ~ offset(log(len)) + factor(interval) + trt, \n            family=poisson(link=log), \n            data=rats.pw)\n</code></pre> <p>\u4e3b\u8981\u53d1\u73b0\uff1a - \u622a\u8ddd = -3.08818 (p &lt; 0.001) - \u65f6\u95f4\u95f4\u9694\u6548\u5e94\uff1a   - interval2: 0.17185 (p = 0.380)   - interval3: 0.20634 (p = 0.288)   - interval4: -0.06454 (p = 0.752) - \u5904\u7406\u6548\u5e94 = -0.82302 (p &lt; 0.001)</p>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_31","title":"\u65f6\u95f4\u540c\u8d28\u6027\u68c0\u9a8c","text":""},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_32","title":"\u7b80\u5316\u6a21\u578b\uff08\u65e0\u65f6\u95f4\u8d8b\u52bf\uff09","text":"<pre><code>pfit2 &lt;- glm(count ~ offset(log(len)) + trt, \n             family=poisson(link=log), \n             data=rats.pw)\n</code></pre> <p>\u4f3c\u7136\u6bd4\u68c0\u9a8c\u7ed3\u679c\uff1a - \u68c0\u9a8c\u7edf\u8ba1\u91cf = pfit2\\(deviance - pfit\\)deviance - p-value = 0.4340077\uff08\u4e0d\u663e\u8457\uff0c\u652f\u6301\u65f6\u95f4\u540c\u8d28\u6027\u5047\u8bbe\uff09</p>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_33","title":"\u5904\u7406\u6548\u5e94\u7684\u65f6\u95f4\u4e00\u81f4\u6027\u68c0\u9a8c","text":"<pre><code>pfit3 &lt;- glm(count ~ offset(log(len)) + factor(interval) * trt, \n             family=poisson(link=log), \n             data=rats.pw)\n</code></pre> <p>\u4e3b\u8981\u53d1\u73b0\uff1a - \u57fa\u7840\u5904\u7406\u6548\u5e94 = -0.80392 (p = 0.0114) - \u5904\u7406\u4e0e\u65f6\u95f4\u7684\u4ea4\u4e92\u6548\u5e94\uff1a   - interval2:trt: 0.03164 (p = 0.9413)   - interval3:trt: -0.37639 (p = 0.3994)   - interval4:trt: 0.28653 (p = 0.5131)</p> <p>\u4f3c\u7136\u6bd4\u68c0\u9a8c\u7ed3\u679c\uff1a - p-value = 0.4926145\uff08\u4e0d\u663e\u8457\uff0c\u652f\u6301\u5904\u7406\u6548\u5e94\u65f6\u95f4\u4e00\u81f4\u6027\u5047\u8bbe\uff09</p>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_34","title":"\u7ed3\u8bba","text":"<ol> <li>\u5b58\u5728\u663e\u8457\u7684\u5904\u7406\u6548\u5e94\uff08\u964d\u4f4e\u4e8b\u4ef6\u53d1\u751f\u7387\uff09</li> <li>\u65f6\u95f4\u8d8b\u52bf\u4e0d\u663e\u8457</li> <li>\u5904\u7406\u6548\u5e94\u5728\u4e0d\u540c\u65f6\u95f4\u70b9\u4fdd\u6301\u4e00\u81f4</li> <li>\u6a21\u578b\u652f\u6301\u4f7f\u7528\u66f4\u7b80\u5355\u7684\u65f6\u95f4\u540c\u8d28\u6027\u6a21\u578b</li> </ol>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#23","title":"2.3 \u9ed1\u8272\u7d20\u7624\u7814\u7a76","text":""},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_35","title":"\u6570\u636e\u51c6\u5907","text":"<pre><code># \u8bfb\u53d6\u6570\u636e\nderm.dat &lt;- read.table(\"data/derm.dat\", header=T)\n\n# \u521b\u5efa\u56e0\u5b50\u53d8\u91cf\nderm.dat$typef &lt;- factor(derm.dat$type)\nderm.dat$typeft &lt;- C(derm.dat$typef, treatment)\nderm.dat$sitef &lt;- factor(derm.dat$locat)\nderm.dat$siteft &lt;- C(derm.dat$sitef, treatment)\n</code></pre>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_36","title":"\u6a21\u578b\u5206\u6790","text":""},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_37","title":"\u4e3b\u6548\u5e94\u6a21\u578b","text":"<pre><code>model1 &lt;- glm(y ~ typeft + siteft, family=poisson, data=derm.dat)\n</code></pre> <p>\u4e3b\u8981\u53d1\u73b0\uff1a - \u622a\u8ddd = 1.7544 (p &lt; 0.001) - \u7ec4\u7ec7\u5b66\u7c7b\u578b\u6548\u5e94\uff1a   - typeft2: 1.6940 (p &lt; 0.001)   - typeft3: 1.3020 (p &lt; 0.001)   - typeft4: 0.4990 (p = 0.02173) - \u90e8\u4f4d\u6548\u5e94\uff1a   - siteft2: 0.4439 (p = 0.00427)   - siteft3: 1.2010 (p &lt; 0.001)</p>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_38","title":"\u4ec5\u5305\u542b\u201c\u7ec4\u7ec7\u5b66\u7c7b\u578b\u201d\u4e3b\u6548\u5e94\u7684\u6a21\u578b","text":"<pre><code>model2 &lt;- glm(y ~ typeft, family=poisson, data=derm.dat)\n</code></pre>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_39","title":"\u4ec5\u5305\u542b\u201c\u90e8\u4f4d\u201d\u4e3b\u6548\u5e94\u7684\u6a21\u578b","text":"<pre><code>model3 &lt;- glm(y ~ siteft, family=poisson, data=derm.dat)\n</code></pre>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_40","title":"\u5305\u542b\u4ea4\u4e92\u6548\u5e94\u7684\u6a21\u578b","text":"<pre><code>model4 &lt;- glm(y ~ typeft * siteft, family=poisson, data=derm.dat)\n</code></pre> <p>\u4e3b\u8981\u53d1\u73b0\uff1a - \u4ea4\u4e92\u6548\u5e94\u663e\u8457\uff0c\u5c24\u5176\u662ftypeft2:siteft2, typeft3:siteft2, typeft4:siteft2\u7b49</p>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_41","title":"\u7ed3\u8bba","text":"<ol> <li>\u7ec4\u7ec7\u5b66\u7c7b\u578b\u548c\u90e8\u4f4d\u5bf9\u9ed1\u8272\u7d20\u7624\u53d1\u751f\u7387\u6709\u663e\u8457\u5f71\u54cd</li> <li>\u5b58\u5728\u663e\u8457\u7684\u4ea4\u4e92\u6548\u5e94\uff0c\u8868\u660e\u4e0d\u540c\u7c7b\u578b\u548c\u90e8\u4f4d\u7684\u7ec4\u5408\u5bf9\u7ed3\u679c\u6709\u4e0d\u540c\u5f71\u54cd</li> <li>\u6a21\u578b\u62df\u5408\u826f\u597d\uff0c\u6b8b\u5dee\u5206\u5e03\u5408\u7406</li> </ol>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#24","title":"2.4 \u5b89\u5168\u5e26\u4f7f\u7528\u4e0e\u4e8b\u6545\u6b7b\u4ea1\u7387\u5206\u6790","text":""},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_42","title":"\u6570\u636e\u51c6\u5907","text":"<pre><code># \u8bfb\u53d6\u6570\u636e\nacc.dat &lt;- read.table(\"D:/\u7814\u7a76\u751f/\u7814\u4e00/\u8bd5\u9a8c\u8bbe\u8ba1\u4e0e\u89c2\u5bdf\u6027\u7814\u7a76/data/acc.dat\", header=T)\n\n# \u521b\u5efa\u56e0\u5b50\u53d8\u91cf\nacc.dat$seatf &lt;- factor(acc.dat$seat)\nacc.dat$s &lt;- C(acc.dat$seatf, treatment)\nacc.dat$ejectf &lt;- factor(acc.dat$eject)\nacc.dat$e &lt;- C(acc.dat$ejectf, treatment)\nacc.dat$injuryf &lt;- factor(acc.dat$injury)\nacc.dat$i &lt;- C(acc.dat$injuryf, treatment)\n</code></pre>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_43","title":"\u6a21\u578b\u5206\u6790","text":""},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_44","title":"\u5b8c\u5168\u9971\u548c\u6a21\u578b\uff08\u4e09\u9636\u4ea4\u4e92\uff09","text":"<pre><code>model1 &lt;- glm(y ~ s*e*i, family=poisson, data=acc.dat)\n</code></pre>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_45","title":"\u4e8c\u9636\u4ea4\u4e92\u6a21\u578b","text":"<pre><code>model2 &lt;- glm(y ~ s*e + s*i + e*i, family=poisson, data=acc.dat)\n</code></pre> <p>\u6bd4\u8f83model1\u548cmodel2\uff1a <pre><code>1-pchisq(model2$deviance - model1$deviance, model2$df.residual - model1$df.residual)\n</code></pre></p>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_46","title":"\u7b80\u5316\u6a21\u578b\u5206\u6790","text":""},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#ei","title":"\u79fb\u9664e*i\u4ea4\u4e92\u9879","text":"<pre><code>model3 &lt;- glm(y ~ s*e + s*i + s, family=poisson, data=acc.dat)\n</code></pre>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#si","title":"\u79fb\u9664s*i\u4ea4\u4e92\u9879","text":"<pre><code>model4 &lt;- glm(y ~ s*e + e*i + e, family=poisson, data=acc.dat)\n</code></pre>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#se","title":"\u79fb\u9664s*e\u4ea4\u4e92\u9879","text":"<pre><code>model5 &lt;- glm(y ~ s*i + e*i + i, family=poisson, data=acc.dat)\n</code></pre>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_47","title":"\u7ed3\u8bba","text":"<ol> <li>\u4e8c\u9636\u4ea4\u4e92\u6a21\u578b\u8db3\u4ee5\u89e3\u91ca\u6570\u636e\uff08\u4e0e\u5b8c\u5168\u9971\u548c\u6a21\u578b\u76f8\u6bd4\u6ca1\u6709\u663e\u8457\u5dee\u5f02\uff09</li> <li>\u6240\u6709\u4e8c\u9636\u4ea4\u4e92\u9879\u90fd\u662f\u91cd\u8981\u7684\uff0c\u4e0d\u80fd\u8fdb\u4e00\u6b65\u7b80\u5316\u6a21\u578b</li> <li>\u5b89\u5168\u5e26\u4f7f\u7528\u3001\u5f39\u51fa\u60c5\u51b5\u548c\u4f24\u5bb3\u7a0b\u5ea6\u4e4b\u95f4\u5b58\u5728\u590d\u6742\u7684\u76f8\u4e92\u4f5c\u7528\u5173\u7cfb</li> </ol>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#31","title":"3.1 \u766b\u75eb\u8bd5\u9a8c\u5206\u6790","text":""},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_48","title":"\u6570\u636e\u51c6\u5907","text":"<pre><code># \u52a0\u8f7dMASS\u5305\u5e76\u8bfb\u53d6\u6570\u636e\nlibrary(MASS)\nepi.dat &lt;- read.table(\"data/epi.dat\", header=T)\n\n# \u521b\u5efa\u5904\u7406\u56e0\u5b50\u53d8\u91cf\nepi.dat$treatf &lt;- factor(epi.dat$treat)\nepi.dat$treatft &lt;- C(epi.dat$treatf, treatment)\n</code></pre>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_49","title":"\u6a21\u578b\u5206\u6790","text":""},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_50","title":"\u6cca\u677e\u56de\u5f52\u6a21\u578b","text":"<pre><code>poisson1 &lt;- glm(yi1 ~ treatft + prior + age, data=epi.dat, family=poisson)\n</code></pre> <p>\u4e3b\u8981\u53d1\u73b0\uff1a - \u622a\u8ddd = 0.2049 (p = 0.3666) - \u5904\u7406\u6548\u5e94 = -0.2047 (p = 0.0222) - \u5148\u524d\u53d1\u4f5c\u6b21\u6570\u6548\u5e94 = 0.0254 (p &lt; 0.001) - \u5e74\u9f84\u6548\u5e94 = 0.0325 (p &lt; 0.001)</p>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_51","title":"\u6b8b\u5dee\u5206\u6790","text":"<p><pre><code># \u6784\u5efa\u504f\u5dee\u6b8b\u5dee\u56fe\nepi.dat$rdeviance1 &lt;- residuals.glm(poisson1, type=\"deviance\")\nepi.dat$fitted.values1 &lt;- poisson1$fitted.values\n\nplot(epi.dat$fitted.values1, epi.dat$rdeviance1, ylim=c(-5,5),\n     xlab=\"FITTED VALUES\", ylab=\"DEVIANCE RESIDUALS\")\nabline(h=-2)\nabline(h=2)\n</code></pre> </p>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_52","title":"\u6570\u636e\u63a2\u7d22","text":"<pre><code># \u6309\u5904\u7406\u7ec4\u8ba1\u7b97\u5747\u503c\u548c\u65b9\u5dee\nby(epi.dat$yi1, epi.dat$treatft, mean)\nby(epi.dat$yi1, epi.dat$treatft, var)\n</code></pre> <p>\u7ed3\u679c\uff1a - \u63a7\u5236\u7ec4\uff1a\u5747\u503c = 9.357143\uff0c\u65b9\u5dee = 102.7566 - \u5904\u7406\u7ec4\uff1a\u5747\u503c = 8.580645\uff0c\u65b9\u5dee = 332.7183</p>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_53","title":"\u8d1f\u4e8c\u9879\u56de\u5f52\u6a21\u578b","text":"<p><pre><code>negbin2 &lt;- glm.nb(yi1 ~ treatft + prior + age, data=epi.dat, link=log, init.theta=1.00)\n</code></pre> \u6b8b\u5dee\u56fe\uff1a </p>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_54","title":"\u7b80\u5316\u8d1f\u4e8c\u9879\u6a21\u578b","text":"<pre><code>negbin3 &lt;- glm.nb(yi1 ~ treatft, data=epi.dat, link=log, init.theta=1.00)\n</code></pre>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_55","title":"\u7ed3\u8bba","text":"<ol> <li>\u6570\u636e\u663e\u793a\u660e\u663e\u7684\u8fc7\u5ea6\u79bb\u6563\u73b0\u8c61\uff08\u65b9\u5dee\u8fdc\u5927\u4e8e\u5747\u503c\uff09</li> <li>\u8d1f\u4e8c\u9879\u56de\u5f52\u6a21\u578b\u6bd4\u6cca\u677e\u56de\u5f52\u66f4\u9002\u5408\u8fd9\u79cd\u8fc7\u5ea6\u79bb\u6563\u7684\u6570\u636e</li> <li>\u5904\u7406\u6548\u5e94\u663e\u8457\uff0c\u4f46\u9700\u8981\u63a7\u5236\u5148\u524d\u53d1\u4f5c\u6b21\u6570\u548c\u5e74\u9f84\u7684\u5f71\u54cd</li> <li>\u6b8b\u5dee\u5206\u6790\u663e\u793a\u6a21\u578b\u62df\u5408\u60c5\u51b5\u826f\u597d</li> </ol>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_56","title":"\u7ebf\u6027\u6df7\u5408\u6548\u5e94\u6a21\u578b","text":""},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#bodyweight","title":"BodyWeight\u6570\u636e\u96c6\u7684\u5206\u6790","text":""},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#1","title":"1. \u6570\u636e\u51c6\u5907","text":"<pre><code># \u521b\u5efa\u5904\u7406\u7ec4\u7684\u6307\u793a\u53d8\u91cf\nX1 &lt;- ifelse(Diet == 1, 1, 0)\nX2 &lt;- ifelse(Diet == 2, 1, 0)\nX3 &lt;- ifelse(Diet == 3, 1, 0)\n\n# \u521b\u5efa\u65f6\u95f4\u4e0e\u5904\u7406\u7ec4\u7684\u4ea4\u4e92\u9879\ntime.X1 &lt;- Time * X1\ntime.X2 &lt;- Time * X2\ntime.X3 &lt;- Time * X3\n\n# \u5408\u5e76\u6570\u636e\nBodyWeight &lt;- data.frame(BodyWeight, X1, X2, X3, time.X1, time.X2, time.X3)\n</code></pre>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#2","title":"2. \u6a21\u578b\u62df\u5408","text":""},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#21-","title":"2.1 \u968f\u673a\u622a\u8ddd-\u968f\u673a\u659c\u7387\u6a21\u578b","text":"<pre><code>BodyWeight.lme1 &lt;- lme(fixed = weight ~ -1 + X1 + X2 + X3 + time.X1 + time.X2 + time.X3,\n                       random = ~ 1 + Time| Rat, data = BodyWeight)\n</code></pre> <p>\u4e3b\u8981\u7ed3\u679c\uff1a - \u56fa\u5b9a\u6548\u5e94\uff1a   * \u7ec41\u57fa\u7ebf: 251.65 (p &lt; 0.001)   * \u7ec42\u57fa\u7ebf: 452.32 (p &lt; 0.001)   * \u7ec43\u57fa\u7ebf: 503.72 (p &lt; 0.001)   * \u7ec41\u65f6\u95f4\u659c\u7387: 0.36 (p &lt; 0.001)   * \u7ec42\u65f6\u95f4\u659c\u7387: 0.97 (p &lt; 0.001)   * \u7ec43\u65f6\u95f4\u659c\u7387: 0.66 (p &lt; 0.001) - \u968f\u673a\u6548\u5e94\uff1a   * \u622a\u8ddd\u6807\u51c6\u5dee: 36.94   * \u65f6\u95f4\u659c\u7387\u6807\u51c6\u5dee: 0.25   * \u76f8\u5173\u7cfb\u6570: -0.149</p>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#22","title":"2.2 \u968f\u673a\u622a\u8ddd\u6a21\u578b","text":"<pre><code>BodyWeight.lme2 &lt;- lme(fixed = weight ~ -1 + X1 + X2 + X3 + time.X1 + time.X2 + time.X3,\n                       random = ~ 1 | Rat, data = BodyWeight)\n</code></pre>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#3_1","title":"3. \u6a21\u578b\u8bca\u65ad","text":""},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#31_1","title":"3.1 \u6b8b\u5dee\u5206\u6790","text":"<pre><code># \u6b8b\u5dee\u56fe\nplot(BodyWeight.lme1, resid(., type = 'p') ~ fitted(.), id = .01)\nplot(BodyWeight.lme1, resid(., type = 'p') ~ fitted(.) | Diet, id = .01)\n\n# \u81ea\u76f8\u5173\u51fd\u6570\u56fe\nplot(ACF(BodyWeight.lme1, maxLag=3), alpha=.01)\n</code></pre>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#32","title":"3.2 \u62df\u5408\u503c\u5206\u6790","text":"<pre><code># \u89c2\u6d4b\u503cvs\u62df\u5408\u503c\nplot(BodyWeight.lme1, weight ~ fitted(.), id=.05, abline=c(0,1))\nplot(BodyWeight.lme1, weight ~ fitted(.) | Diet, id=.05, abline=c(0,1))\nplot(BodyWeight.lme1, weight ~ fitted(.) | Rat, id=.05, abline=c(0,1))\n</code></pre>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#33","title":"3.3 \u6b63\u6001\u6027\u68c0\u9a8c","text":"<pre><code># \u6b8b\u5deeQ-Q\u56fe\nqqnorm(BodyWeight.lme1, ~ resid(.), id=.05)\n\n# \u968f\u673a\u6548\u5e94Q-Q\u56fe\nqqnorm(BodyWeight.lme1, ~ ranef(.), id=.05)\n</code></pre>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#4","title":"4. \u9884\u6d4b\u5206\u6790","text":"<pre><code># \u521b\u5efa\u9884\u6d4b\u6570\u636e\u6846\nlme1.predict.df = data.frame(\n    Rat = rep(c(1,9,13), each=2), \n    Diet = rep(1:3, each=2), \n    Time = rep(c(30,50), 3),\n    # ... \u5176\u4ed6\u9884\u6d4b\u53d8\u91cf ...\n)\n\n# \u751f\u6210\u9884\u6d4b\u503c\npredict(BodyWeight.lme1, newdata = lme1.predict.df, level = c(0,1))\n</code></pre>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#5","title":"5. \u4e3b\u8981\u7ed3\u8bba","text":"<ol> <li>\u4e09\u4e2a\u5904\u7406\u7ec4\u90fd\u663e\u793a\u663e\u8457\u7684\u65f6\u95f4\u6548\u5e94</li> <li>\u7ec4\u95f4\u5b58\u5728\u663e\u8457\u7684\u57fa\u7ebf\u5dee\u5f02</li> <li>\u968f\u673a\u6548\u5e94\u663e\u793a\u4e2a\u4f53\u95f4\u5b58\u5728\u8f83\u5927\u53d8\u5f02</li> <li>\u6a21\u578b\u8bca\u65ad\u663e\u793a\u62df\u5408\u826f\u597d</li> <li>\u6b8b\u5dee\u5206\u6790\u672a\u53d1\u73b0\u660e\u663e\u7684\u5f02\u5e38\u6a21\u5f0f</li> </ol>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#glmmgee","title":"\u5e7f\u4e49\u7ebf\u6027\u6df7\u5408\u6548\u5e94\u6a21\u578b(GLMM)\u548c\u5e7f\u4e49\u4f30\u8ba1\u65b9\u7a0b(GEE)\u5206\u6790","text":""},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#1_1","title":"1. \u6570\u636e\u51c6\u5907\u4e0e\u63a2\u7d22","text":""},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#respiratory","title":"\u6570\u636e\u96c6\uff1arespiratory","text":"<pre><code>data('respiratory', package = 'HSAUR')\nstr(respiratory)\n</code></pre> <p>\u6570\u636e\u5305\u542b\uff1a - 555\u4e2a\u89c2\u6d4b - 7\u4e2a\u53d8\u91cf\uff1acentre, treatment, sex, age, status, month, subject - status\u4e3a\u4e8c\u5206\u7c7b\u54cd\u5e94\u53d8\u91cf\uff08poor/good\uff09</p>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#_57","title":"\u6570\u636e\u9884\u5904\u7406","text":"<pre><code># \u6dfb\u52a0\u6570\u503c\u578b\u6708\u4efd\u53d8\u91cf\nrespiratory.data$time.month &lt;- as.numeric(respiratory.data$month) - 1\n\n# \u63d0\u53d6\u57fa\u7ebf\u72b6\u6001\nresp &lt;- subset(respiratory.data, time.month &gt; 0)\nresp$baseline &lt;- rep(subset(respiratory.data, time.month == 0)$status, each=4)\n</code></pre>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#2-glmm","title":"2. GLMM\u5206\u6790","text":""},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#21_1","title":"2.1 \u521d\u59cb\u6a21\u578b\u62df\u5408","text":"<pre><code>resp.glmer1 &lt;- glmer(status ~ treatment + centre + age + sex + \n                     baseline + time.month + (1 | subject),\n                     data = resp, family = 'binomial', nAGQ=5)\n</code></pre> <p>\u4e3b\u8981\u7ed3\u679c\uff1a - \u56fa\u5b9a\u6548\u5e94\uff1a   * treatment: \u03b2 = 2.11171 (p &lt; 0.001)   * centre2: \u03b2 = 1.03163 (p = 0.060)   * age: \u03b2 = -0.02487 (p = 0.221)   * sex(male): \u03b2 = 0.19556 (p = 0.772)   * baseline(good): \u03b2 = 3.00081 (p &lt; 0.001)   * time.month: \u03b2 = -0.10172 (p = 0.417)</p> <ul> <li>\u968f\u673a\u6548\u5e94\uff1a</li> <li>subject\u65b9\u5dee: 3.932 (SD = 1.983)</li> </ul>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#22_1","title":"2.2 \u6a21\u578b\u8bca\u65ad","text":"<ul> <li>AIC: 442.1</li> <li>BIC: 474.8</li> <li>logLik: -213.0</li> </ul>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#3-gee","title":"3. GEE\u5206\u6790","text":""},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#31-gee","title":"3.1 \u57fa\u672cGEE\u6a21\u578b","text":"<pre><code>gee1 &lt;- gee(status ~ treatment + centre + age + sex + baseline + time.month,\n            id = subject, data = resp, family = binomial,\n            corstr = \"independence\")\n</code></pre> <p>\u4e3b\u8981\u7ed3\u679c\uff1a - \u7cfb\u6570\u4f30\u8ba1\u4e0e\u6807\u51c6\u8bef - \u5de5\u4f5c\u76f8\u5173\u7ed3\u6784\uff1a\u72ec\u7acb\u6027\u5047\u8bbe</p>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#32-gee","title":"3.2 \u4e0d\u540c\u76f8\u5173\u7ed3\u6784\u7684GEE\u6a21\u578b","text":"<pre><code># \u4ea4\u6362\u76f8\u5173\u7ed3\u6784\ngee2 &lt;- update(gee1, corstr = \"exchangeable\")\n\n# \u81ea\u56de\u5f52\u76f8\u5173\u7ed3\u6784\ngee3 &lt;- update(gee1, corstr = \"AR-M\")\n</code></pre>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#4_1","title":"4. \u4e3b\u8981\u53d1\u73b0","text":"<ol> <li>\u5904\u7406\u6548\u5e94\uff1a</li> <li>\u6cbb\u7597\u7ec4\u663e\u793a\u663e\u8457\u7684\u6b63\u5411\u6548\u5e94</li> <li> <p>\u57fa\u7ebf\u72b6\u6001\u662f\u91cd\u8981\u7684\u9884\u6d4b\u56e0\u5b50</p> </li> <li> <p>\u968f\u673a\u6548\u5e94\uff1a</p> </li> <li>\u4e2a\u4f53\u95f4\u5b58\u5728\u663e\u8457\u7684\u53d8\u5f02\u6027</li> <li> <p>\u652f\u6301\u4f7f\u7528\u6df7\u5408\u6548\u5e94\u6a21\u578b</p> </li> <li> <p>\u65f6\u95f4\u6548\u5e94\uff1a</p> </li> <li>\u65f6\u95f4\u6548\u5e94\u4e0d\u663e\u8457</li> <li> <p>\u53ef\u80fd\u9700\u8981\u8003\u8651\u975e\u7ebf\u6027\u65f6\u95f4\u8d8b\u52bf</p> </li> <li> <p>\u6a21\u578b\u6bd4\u8f83\uff1a</p> </li> <li>GLMM\u63d0\u4f9b\u4e86\u66f4\u8be6\u7ec6\u7684\u968f\u673a\u6548\u5e94\u4fe1\u606f</li> <li>GEE\u66f4\u5173\u6ce8\u603b\u4f53\u6548\u5e94\u4f30\u8ba1</li> </ol>"},{"location":"blog/%E8%AF%95%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%92%8C%E8%A7%82%E5%AF%9F%E6%80%A7%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0-%E4%BB%A3%E7%A0%81%E9%83%A8%E5%88%86/#5_1","title":"5. \u7ed3\u8bba\u5efa\u8bae","text":"<ol> <li>\u6a21\u578b\u9009\u62e9\uff1a</li> <li>\u5982\u679c\u5173\u6ce8\u4e2a\u4f53\u5dee\u5f02\uff0c\u9009\u62e9GLMM</li> <li> <p>\u5982\u679c\u5173\u6ce8\u603b\u4f53\u6548\u5e94\uff0c\u9009\u62e9GEE</p> </li> <li> <p>\u5b9e\u8df5\u610f\u4e49\uff1a</p> </li> <li>\u6cbb\u7597\u663e\u8457\u6539\u5584\u60a3\u8005\u72b6\u6001</li> <li>\u57fa\u7ebf\u72b6\u6001\u662f\u91cd\u8981\u7684\u9884\u6d4b\u56e0\u5b50</li> <li> <p>\u9700\u8981\u8003\u8651\u4e2a\u4f53\u95f4\u7684\u5f02\u8d28\u6027</p> </li> <li> <p>\u540e\u7eed\u5206\u6790\u5efa\u8bae\uff1a</p> </li> <li>\u8003\u8651\u6dfb\u52a0\u4ea4\u4e92\u6548\u5e94</li> <li>\u63a2\u7d22\u975e\u7ebf\u6027\u65f6\u95f4\u8d8b\u52bf</li> <li>\u8fdb\u884c\u654f\u611f\u6027\u5206\u6790</li> </ol>"},{"location":"blog/%E9%AD%94%E6%B3%95%E5%87%BD%E6%95%B0/","title":"jupyter \u7684 \u9b54\u6cd5\u51fd\u6570","text":"<p><code>%%time</code> \u662f Jupyter Notebook \u7684\u9b54\u6cd5\u547d\u4ee4\uff08magic command\uff09\uff0c\u7528\u4e8e\u6d4b\u91cf\u5355\u4e2a\u4ee3\u7801\u5355\u5143\uff08cell\uff09\u7684\u6267\u884c\u65f6\u95f4\u3002\u5b83\u4f1a\u663e\u793a\uff1a</p> <ol> <li>Wall time\uff1a\u5b9e\u9645\u7ecf\u8fc7\u7684\u65f6\u95f4</li> <li>CPU time\uff1aCPU\u6267\u884c\u4ee3\u7801\u7684\u65f6\u95f4</li> </ol> <p>\u4f7f\u7528\u793a\u4f8b\uff1a</p> <pre><code>%%time\n# \u4f60\u7684\u4ee3\u7801\nimport numpy as np\narr = np.random.rand(1000000)\narr.sort()\n</code></pre> <p>\u8f93\u51fa\u53ef\u80fd\u7c7b\u4f3c\uff1a</p> <pre><code>CPU times: user 156 ms, sys: 8.99 ms, total: 165 ms\nWall time: 169 ms\n</code></pre> <p>\u76f8\u5173\u7684\u65f6\u95f4\u6d4b\u91cf\u547d\u4ee4\uff1a</p> <p>1.<code>%time\uff1a\u6d4b\u91cf\u5355\u884c\u4ee3\u7801\u6267\u884c\u65f6\u95f4</code></p> <pre><code>%time np.random.rand(1000000)\n</code></pre> <p>2.<code>%%timeit\uff1a\u591a\u6b21\u8fd0\u884c\u4ee3\u7801\u5355\u5143\u5e76\u8ba1\u7b97\u5e73\u5747\u6267\u884c\u65f6\u95f4</code></p> <pre><code>%%timeit\narr = np.random.rand(1000000)\narr.sort()\n</code></pre> <p>3.<code>%timeit\uff1a\u591a\u6b21\u8fd0\u884c\u5355\u884c\u4ee3\u7801\u5e76\u8ba1\u7b97\u5e73\u5747\u65f6\u95f4</code></p> <pre><code>%timeit np.random.rand(1000000)\n</code></pre> <p>\u4e3b\u8981\u7528\u9014\uff1a - \u4ee3\u7801\u6027\u80fd\u5206\u6790 - \u6bd4\u8f83\u4e0d\u540c\u5b9e\u73b0\u65b9\u6cd5\u7684\u6548\u7387 - \u8bc6\u522b\u7a0b\u5e8f\u74f6\u9888 - \u4f18\u5316\u4ee3\u7801\u6267\u884c\u65f6\u95f4</p>"},{"location":"code/","title":"\u4ee3\u7801","text":"<p>\u8bb8\u591a\u4ee3\u7801\u5728\u5b66\u4e60\u548c\u5de5\u4f5c\u4e2d\u7ecf\u5e38\u4f7f\u7528\uff0c\u5c06\u5b83\u4eec\u8bb0\u5f55\u5e76\u6574\u7406\u4e8e\u6b64\uff0c\u65b9\u4fbf\u67e5\u627e\u4e0e\u6e29\u4e60\u3002</p> <ul> <li> <p> Pandas \u6570\u636e\u6846</p> <p>\u8868\u683c\u6570\u636e\u7684\u589e\u5220\u67e5\u6539\u3001\u5206\u7ec4\u7edf\u8ba1\u3001\u591a\u91cd\u7d22\u5f15\u3001\u65e5\u671f\u683c\u5f0f\u7b49\u3002</p> <p> \u67e5\u770b</p> </li> <li> <p> NumPy \u6570\u7ec4</p> <p>\u5411\u91cf\u3001\u77e9\u9635\u7684\u521b\u5efa\u3001\u5207\u7247\u3001\u6392\u5e8f\u7b49\u3002</p> <p> \u67e5\u770b</p> </li> <li> <p> List \u5217\u8868</p> <p>\u5217\u8868\u7684\u7b5b\u9009\u3001\u6dfb\u52a0\u3001\u62fc\u63a5\u3001\u5c55\u5e73\u7b49\u3002</p> <p> \u67e5\u770b</p> </li> <li> <p> Loop \u5faa\u73af</p> <p>\u663e\u793a\u5faa\u73af\u8fdb\u5ea6\u6761\u3001\u9010\u5bf9\u5faa\u73af\u3001\u904d\u5386\u8def\u5f84\u7b49\u3002</p> <p> \u67e5\u770b</p> </li> <li> <p> Plot \u7ed8\u56fe</p> <p>\u5e38\u7528\u7684\u7ed8\u56fe\u4ee3\u7801\u3002</p> <p> \u67e5\u770b</p> </li> <li> <p> Print \u6253\u5370</p> <p>\u6574\u9f50\u5730\u6253\u5370\u3001\u5c06\u5185\u5bb9\u5199\u5165\u6587\u4ef6\u7b49\u3002</p> <p> \u67e5\u770b</p> </li> <li> <p> Machine Learning \u673a\u5668\u5b66\u4e60</p> <p>\u5e38\u7528\u7684\u673a\u5668\u5b66\u4e60\u4ee3\u7801\u3002</p> <p> \u67e5\u770b</p> </li> <li> <p> SQL \u6570\u636e\u5e93</p> <p>\u5e38\u7528\u7684 SQL \u4ee3\u7801\u3002</p> <p> \u67e5\u770b</p> </li> <li> <p> R \u8bed\u8a00</p> <p>\u5e38\u7528\u7684 R\u8bed\u8a00 \u4ee3\u7801\u3002</p> <p> \u67e5\u770b</p> </li> <li> <p> \u722c\u866b</p> <p>\u5229\u7528python\u548c\u6d4f\u89c8\u5668\u63d2\u4ef6\u8fdb\u884c\u7f51\u7edc\u722c\u866b\u7684\u5de5\u5177\u3002</p> <p> \u67e5\u770b</p> </li> <li> <p> Others \u5176\u4ed6</p> <p>\u5b57\u5178\u4e0e\u5b57\u7b26\u4e32\u7684\u64cd\u4f5c\u3001Git \u547d\u4ee4\u3001Conda \u547d\u4ee4\u3001\u6b63\u5219\u8868\u8fbe\u5f0f\u7b49\u3002</p> <p> \u67e5\u770b</p> </li> <li> <p> Time Series \u65f6\u95f4\u5e8f\u5217</p> <p>\u8bb0\u5f55pandas\u5bf9\u65f6\u95f4\u5e8f\u5217\u7684\u64cd\u4f5c\u3002</p> <p> \u67e5\u770b </p> </li> </ul>"},{"location":"code/Hot100/","title":"Leetcode Hot100","text":""},{"location":"code/Hot100/#1","title":"1. \u4e24\u6570\u4e4b\u548c","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 <code>nums</code> \u548c\u4e00\u4e2a\u6574\u6570\u76ee\u6807\u503c <code>target</code>\uff0c\u8bf7\u4f60\u5728\u8be5\u6570\u7ec4\u4e2d\u627e\u51fa \u548c\u4e3a\u76ee\u6807\u503c <code>target</code>  \u7684\u90a3 <code>\u4e24\u4e2a</code> \u6574\u6570\uff0c\u5e76\u8fd4\u56de\u5b83\u4eec\u7684\u6570\u7ec4\u4e0b\u6807\u3002</p> <p>\u4f60\u53ef\u4ee5\u5047\u8bbe\u6bcf\u79cd\u8f93\u5165\u53ea\u4f1a\u5bf9\u5e94\u4e00\u4e2a\u7b54\u6848\uff0c\u5e76\u4e14\u4f60\u4e0d\u80fd\u4f7f\u7528\u4e24\u6b21\u76f8\u540c\u7684\u5143\u7d20\u3002</p> <p>\u4f60\u53ef\u4ee5\u6309\u4efb\u610f\u987a\u5e8f\u8fd4\u56de\u7b54\u6848\u3002</p> twoSum.py<pre><code>class Solution(object):\n    def twoSum(self, nums, target):\n        \"\"\"\n        :type nums: List[int]\n        :type target: int\n        :rtype: List[int]\n        \"\"\"\n        dic = {}\n        for i, num in enumerate(nums):\n            if target - num in dic:\n                return [dic[target - num], i]\n            dic[num] = i \n</code></pre>"},{"location":"code/Hot100/#2","title":"2. \u4e24\u6570\u76f8\u52a0","text":"<p>\u7ed9\u4f60\u4e24\u4e2a \u975e\u7a7a \u7684\u94fe\u8868\uff0c\u8868\u793a\u4e24\u4e2a\u975e\u8d1f\u7684\u6574\u6570\u3002\u5b83\u4eec\u6bcf\u4f4d\u6570\u5b57\u90fd\u662f\u6309\u7167 \u9006\u5e8f \u7684\u65b9\u5f0f\u5b58\u50a8\u7684\uff0c\u5e76\u4e14\u6bcf\u4e2a\u8282\u70b9\u53ea\u80fd\u5b58\u50a8 \u4e00\u4f4d \u6570\u5b57\u3002</p> <p>\u8bf7\u4f60\u5c06\u4e24\u4e2a\u6570\u76f8\u52a0\uff0c\u5e76\u4ee5\u76f8\u540c\u5f62\u5f0f\u8fd4\u56de\u4e00\u4e2a\u8868\u793a\u548c\u7684\u94fe\u8868\u3002</p> <p>\u4f60\u53ef\u4ee5\u5047\u8bbe\u9664\u4e86\u6570\u5b57 0 \u4e4b\u5916\uff0c\u8fd9\u4e24\u4e2a\u6570\u90fd\u4e0d\u4f1a\u4ee5 0 \u5f00\u5934\u3002</p> twoSum.py<pre><code>class ListNode(object):\n    def __init__(self, val=0, next=None):\n        self.val = val\n        self.next = next\nclass Solution:\n    # l1 \u548c l2 \u4e3a\u5f53\u524d\u904d\u5386\u7684\u94fe\u8868\u8282\u70b9\uff0ccarry \u4e3a\u8fdb\u4f4d\uff0c\u9ed8\u8ba4\u4e3a 0\n    def addTwoNumbers(self, l1: ListNode, l2: ListNode, carry=0):\n        # \u68c0\u67e5\u9012\u5f52\u8fb9\u754c\uff1a\u5f53 l1 \u548c l2 \u90fd\u4e3a\u7a7a\u65f6\n        if l1 is None and l2 is None:\n            # \u5982\u679c\u8fd8\u6709\u8fdb\u4f4d\uff0c\u5219\u521b\u5efa\u4e00\u4e2a\u65b0\u8282\u70b9\u5b58\u50a8\u8fdb\u4f4d\u503c\uff1b\u5426\u5219\u8fd4\u56de None\n            return ListNode(carry) if carry else None\n\n        # \u5982\u679c l1 \u5f53\u524d\u8282\u70b9\u4e3a\u7a7a\uff0c\u8bf4\u660e l1 \u5df2\u7ecf\u904d\u5386\u5b8c\uff0c\u76f4\u63a5\u5c06 l1 \u548c l2 \u4ea4\u6362\n        if l1 is None:\n            l1, l2 = l2, l1  # \u786e\u4fdd l1 \u4e0d\u4e3a\u7a7a\uff0c\u7b80\u5316\u540e\u7eed\u4ee3\u7801\n\n        # \u5c06\u5f53\u524d\u8282\u70b9\u503c\u548c l2 \u7684\u503c\uff08\u5982\u679c\u5b58\u5728\uff09\u4ee5\u53ca\u8fdb\u4f4d\u76f8\u52a0\n        carry += l1.val + (l2.val if l2 else 0)  # l2 \u4e3a\u7a7a\u65f6\u53d6 0\n\n        # \u66f4\u65b0 l1 \u5f53\u524d\u8282\u70b9\u7684\u503c\uff0c\u4fdd\u7559\u4e2a\u4f4d\u6570\n        l1.val = carry % 10  # \u5f53\u524d\u8282\u70b9\u7684\u503c\u4e3a\u548c\u7684\u4e2a\u4f4d\u6570\n\n        # \u9012\u5f52\u8c03\u7528\u5904\u7406\u4e0b\u4e00\u4e2a\u8282\u70b9\uff0c\u540c\u65f6\u8ba1\u7b97\u65b0\u7684\u8fdb\u4f4d\n        l1.next = self.addTwoNumbers(l1.next, l2.next if l2 else None, carry // 10)  # \u8fdb\u4f4d\u4e3a\u6574\u9664 10 \u7684\u7ed3\u679c\n\n        # \u8fd4\u56de\u66f4\u65b0\u540e\u7684 l1 \u94fe\u8868\n        return l1\n</code></pre> <pre><code>l1 = [2,4,3]\nl2 = [5,6,4]\nb = ListNode\nl1 = b(2, b(4, b(3)))\nl2= b(5, b(6, b(4)))\na = Solution()\na.addTwoNumbers(l1, l2)\n</code></pre>"},{"location":"code/Hot100/#3","title":"3. \u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 <code>s</code> \uff0c\u8bf7\u4f60\u627e\u51fa\u5176\u4e2d\u4e0d\u542b\u6709\u91cd\u590d\u5b57\u7b26\u7684 \u6700\u957f\u5b50\u4e32 \u7684\u957f\u5ea6\u3002</p> lengthOfLongestSubstring.py<pre><code>def find_positions_without(s, cr):\n    if s == cr*len(s):\n        return -1\n    return [i for i, char in enumerate(s) if char == cr][-1]+1\nclass Solution(object):\n    # def find_positions_without(s, cr):\n    #     return [i for i, char in enumerate(s) if char != cr][0]\n    def lengthOfLongestSubstring(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"\n        count = 1\n        max_count = 0\n        start = 0\n        if len(s) &lt;= 1:\n            return len(s)\n        str = s[start]\n        for i in range(len(s)-1):\n            if s[i+1] not in str and i &lt; len(s)-2:\n                print(\"case 1:\",str,\"         \",s[i+1],i)\n                count += 1\n                str = s[start:i+2]\n            elif i == len(s)-2 and s[i+1] not in str:\n                count += 1\n                str = s[start:]\n                print(str)\n            else:\n                print(\"case 2:\",str,s[i+1])\n                result = find_positions_without(str, s[i+1])\n                if result == -1:\n                    start = i+1\n                    count = 1\n                else:\n                    count = len(str) - result + 1\n                    start = start + find_positions_without(str, s[i+1])                    \n                str = s[start:i+2]\n                #print(str,s[i+1],start)\n            max_count = max(max_count, count)\n        return max_count\n</code></pre> <pre><code>a = Solution()\na.lengthOfLongestSubstring(\"aabaab!bb\")\n</code></pre>"},{"location":"code/Hot100/#4","title":"4. \u5bfb\u627e\u4e24\u4e2a\u6b63\u5e8f\u6570\u7ec4\u7684\u4e2d\u4f4d\u6570","text":"<p>\u7ed9\u5b9a\u4e24\u4e2a\u5927\u5c0f\u5206\u522b\u4e3a <code>m</code> \u548c <code>n</code> \u7684\u6b63\u5e8f\uff08\u4ece\u5c0f\u5230\u5927\uff09\u6570\u7ec4 <code>nums1</code> \u548c <code>nums2</code>\u3002\u8bf7\u4f60\u627e\u51fa\u5e76\u8fd4\u56de\u8fd9\u4e24\u4e2a\u6b63\u5e8f\u6570\u7ec4\u7684 \u4e2d\u4f4d\u6570 \u3002</p> <p>\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5e94\u8be5\u4e3a <code>O(log (m+n))</code> \u3002</p> findMedianSortedArrays.py<pre><code>class Solution(object):\n    def findMedianSortedArrays(self, nums1: List[int], nums2: List[int]) -&gt; float:\n        \"\"\"\n        :type nums1: List[int]\n        :type nums2: List[int]\n        :rtype: float\n        \"\"\"\n        n1 = len(nums1)\n        n2 = len(nums2)\n        if n1 &gt; n2:\n            return self.findMedianSortedArrays(nums2,nums1)\n        k = (n1 + n2 + 1)//2\n        left = 0\n        right = n1\n        while left &lt; right :\n            m1 = left +(right - left)//2\n            m2 = k - m1\n            if nums1[m1] &lt; nums2[m2-1]:\n                left = m1 + 1\n            else:\n                right = m1\n        m1 = left\n        m2 = k - m1 \n        c1 = max(nums1[m1-1] if m1 &gt; 0 else float(\"-inf\"), nums2[m2-1] if m2 &gt; 0 else float(\"-inf\") )\n        if (n1 + n2) % 2 == 1:\n            return c1\n        c2 = min(nums1[m1] if m1 &lt; n1 else float(\"inf\"), nums2[m2] if m2 &lt;n2 else float(\"inf\"))\n        return (c1 + c2) / 2\n</code></pre> <pre><code>a = Solution()\nprint(a.findMedianSortedArrays([1,3],[2,4]))\n</code></pre>"},{"location":"code/LLM/","title":"Large language model \u5927\u8bed\u8a00\u6a21\u578b","text":"<p>\u6574\u7406:</p>"},{"location":"code/LLM/#_1","title":"\u5904\u7406\u6587\u672c\u6570\u636e","text":""},{"location":"code/LLM/#embedding","title":"\u8bcd\u5d4c\u5165\uff08embedding\uff09","text":"<p>\u5c06\u6570\u636e\u8f6c\u6362\u4e3a\u5411\u91cf\u683c\u5f0f\u7684\u6982\u5ff5\u901a\u5e38\u88ab\u79f0\u4e3a\u5d4c\u5165(embedding)\u3002</p> <p>\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u65e0\u6cd5\u5904\u7406\u89c6\u9891\u3001\u97f3\u9891\u548c\u6587\u672c\u7b49\u539f\u59cb\u6570\u636e\u683c\u5f0f\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u4f7f\u7528\u5d4c\u5165\u6a21\u578b\u5c06\u8fd9\u4e9b\u539f\u59cb\u6570\u636e\u8f6c\u6362\u4e3a\u5bc6\u96c6\u5411\u91cf\u8868\u793a\uff0c\u8fd9\u6837\u6df1\u5ea6\u5b66\u4e60\u67b6\u6784\u5c31\u53ef\u4ee5\u8f7b\u677e\u7406\u89e3\u548c\u5904\u7406\u539f\u59cb\u6570\u636e\u3002</p> <p>\u5176\u4e2d\u6700\u65e9\u548c\u6700\u6d41\u884c\u7684\u4f8b\u5b50\u4e4b\u4e00\u662f Word2Vec \u65b9\u6cd5\u3002 Word2Vec \u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc\u67b6\u6784\u662f\u901a\u8fc7\u9884\u6d4b\u7ed9\u5b9a\u76ee\u6807\u8bcd\u7684\u4e0a\u4e0b\u6587\u6216\u53cd\u4e4b\u6765\u751f\u6210\u8bcd\u5d4c\u5165\u3002 Word2Vec \u67b6\u6784\u7684\u4e3b\u8981\u601d\u60f3\u662f\uff0c\u51fa\u73b0\u5728\u76f8\u4f3c\u4e0a\u4e0b\u6587\u4e2d\u7684\u8bcd\u5f80\u5f80\u5177\u6709\u76f8\u4f3c\u7684\u542b\u4e49\u3002 \u56e0\u6b64\uff0c\u5f53\u5c06\u8bcd\u5d4c\u5165\u6295\u5f71\u5230\u4e8c\u7ef4\u7a7a\u95f4\u4e2d\u4ee5\u4fbf\u4e8e\u53ef\u89c6\u5316\u65f6\uff0c\u53ef\u4ee5\u770b\u5230\u76f8\u4f3c\u7684\u672f\u8bed\u805a\u96c6\u5728\u4e00\u8d77</p> <p>\u4f46\u5927\u578b\u8bed\u8a00\u6a21\u578b\uff08LLMs\uff09\u901a\u5e38\u4f1a\u751f\u6210\u5b83\u4eec\u81ea\u5df1\u7684\u5d4c\u5165\uff0c\u8fd9\u4e9b\u5d4c\u5165\u662f\u8f93\u5165\u5c42\u7684\u4e00\u90e8\u5206\uff0c\u5e76\u5728\u8bad\u7ec3\u671f\u95f4\u66f4\u65b0\u3002 \u5c06\u5d4c\u5165\u4f5c\u4e3a LLM \u8bad\u7ec3\u7684\u4e00\u90e8\u5206\u8fdb\u884c\u4f18\u5316\uff0c\u800c\u4e0d\u662f\u4f7f\u7528 Word2Vec \u7684\u4f18\u52bf\u5728\u4e8e\uff0c\u5d4c\u5165\u88ab\u4f18\u5316\u4ee5\u9002\u5e94\u624b\u5934\u7684\u7279\u5b9a\u4efb\u52a1\u548c\u6570\u636e\u3002</p> <p>\u5bf9\u4e8eGPT-2\u548cGPT-3\uff0c\u5d4c\u5165\u5927\u5c0f\uff08\u901a\u5e38\u88ab\u79f0\u4e3a\u6a21\u578b\u9690\u85cf\u72b6\u6001\u7684\u7ef4\u5ea6\uff09\u6839\u636e\u5177\u4f53\u7684\u6a21\u578b\u53d8\u79cd\u548c\u5927\u5c0f\u800c\u53d8\u5316\u3002 \u8fd9\u662f\u6027\u80fd\u4e0e\u6548\u7387\u4e4b\u95f4\u7684\u6743\u8861\u3002 \u6700\u5c0f\u7684GPT-2\uff081.17\u4ebf\u53c2\u6570\uff09\u548cGPT-3\uff081.25\u4ebf\u53c2\u6570\uff09\u6a21\u578b\u4f7f\u7528768\u7ef4\u7684\u5d4c\u5165\u5927\u5c0f\u6765\u63d0\u4f9b\u5177\u4f53\u793a\u4f8b\u3002\u6700\u5927\u7684GPT-3\u6a21\u578b\uff081750\u4ebf\u53c2\u6570\uff09\u4f7f\u7528\u7684\u5d4c\u5165\u5927\u5c0f\u4e3a12,288\u7ef4\u3002</p>"},{"location":"code/LLM/#token-id","title":"\u6587\u672c\u5206\u8bcd(\u5e8f\u5217\u5316)\u5e76\u8f6c\u4e3atoken ID","text":""},{"location":"code/LLM/#byte-pair-encoding","title":"\u5b57\u8282\u5bf9\u7f16\u7801(Byte pair encoding)","text":"<p>\u5b57\u8282\u5bf9\u7f16\u7801\uff08Byte Pair Encoding\uff0c\u7b80\u79f0 BPE\uff09\u662f\u4e00\u79cd\u5e38\u7528\u7684\u5206\u8bcd\u7b97\u6cd5\uff0c\u7279\u522b\u9002\u7528\u4e8e\u81ea\u7136\u8bed\u8a00\u5904\u7406\u4e2d\u7684\u5b50\u8bcd\u7ea7\u522b\u5206\u8bcd\u3002BPE \u5206\u8bcd\u6cd5\u7684\u6838\u5fc3\u601d\u60f3\u662f\u901a\u8fc7\u9010\u6b65\u5408\u5e76\u9891\u7e41\u51fa\u73b0\u7684\u5b57\u7b26\u6216\u5b57\u7b26\u5e8f\u5217\uff0c\u6765\u6784\u5efa\u4e00\u4e2a\u5b50\u8bcd\u8bcd\u5178\uff0c\u4ece\u800c\u5c06\u6587\u672c\u5206\u5272\u6210\u5b50\u8bcd\u5355\u5143\u3002\u4ee5\u4e0b\u662f BPE \u5206\u8bcd\u6cd5\u7684\u57fa\u672c\u6b65\u9aa4\uff1a</p> <p>\u521d\u59cb\u5316\uff1a\u5c06\u6587\u672c\u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\u89c6\u4e3a\u4e00\u4e2a\u72ec\u7acb\u7684\u7b26\u53f7\uff0c\u5e76\u7edf\u8ba1\u6bcf\u4e2a\u7b26\u53f7\u7684\u9891\u7387\u3002</p> <p>\u5408\u5e76\u9891\u7e41\u7b26\u53f7\u5bf9\uff1a\u627e\u5230\u6587\u672c\u4e2d\u6700\u9891\u7e41\u51fa\u73b0\u7684\u7b26\u53f7\u5bf9\uff08\u5373\u76f8\u90bb\u7684\u4e24\u4e2a\u7b26\u53f7\uff09\uff0c\u5c06\u5176\u5408\u5e76\u4e3a\u4e00\u4e2a\u65b0\u7684\u7b26\u53f7\u3002\u66f4\u65b0\u6587\u672c\u548c\u7b26\u53f7\u9891\u7387\u3002</p> <p>\u91cd\u590d\u5408\u5e76\uff1a\u91cd\u590d\u6b65\u9aa4 2\uff0c\u76f4\u5230\u8fbe\u5230\u9884\u5b9a\u7684\u5408\u5e76\u6b21\u6570\u6216\u7b26\u53f7\u8bcd\u5178\u7684\u5927\u5c0f\u3002</p> <p>\u751f\u6210\u8bcd\u5178\uff1a\u6700\u7ec8\u751f\u6210\u4e00\u4e2a\u5305\u542b\u6240\u6709\u7b26\u53f7\uff08\u5305\u62ec\u521d\u59cb\u5b57\u7b26\u548c\u5408\u5e76\u540e\u7684\u65b0\u7b26\u53f7\uff09\u7684\u8bcd\u5178\u3002</p> <p>\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0cBPE \u5206\u8bcd\u6cd5\u80fd\u591f\u6709\u6548\u5730\u5904\u7406\u672a\u767b\u5f55\u8bcd\uff08\u5373\u8bcd\u5178\u4e2d\u4e0d\u5b58\u5728\u7684\u8bcd\uff09\uff0c\u5e76\u4e14\u80fd\u591f\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u51cf\u5c11\u8bcd\u5178\u7684\u5927\u5c0f\uff0c\u540c\u65f6\u4fdd\u7559\u8f83\u9ad8\u7684\u8bcd\u6c47\u8986\u76d6\u7387\u3002</p> <p>BPE \u5206\u8bcd\u6cd5\u7684\u4f18\u70b9\u5305\u62ec\uff1a</p> <p>\u5904\u7406\u672a\u767b\u5f55\u8bcd\uff1a\u80fd\u591f\u5c06\u672a\u767b\u5f55\u8bcd\u5206\u5272\u6210\u5df2\u77e5\u7684\u5b50\u8bcd\uff0c\u4ece\u800c\u63d0\u9ad8\u6a21\u578b\u7684\u6cdb\u5316\u80fd\u529b\u3002 \u8bcd\u5178\u5927\u5c0f\u53ef\u63a7\uff1a\u53ef\u4ee5\u901a\u8fc7\u63a7\u5236\u5408\u5e76\u6b21\u6570\u6765\u8c03\u6574\u8bcd\u5178\u7684\u5927\u5c0f\u3002 \u9002\u7528\u4e8e\u591a\u8bed\u8a00\uff1a\u80fd\u591f\u5904\u7406\u591a\u79cd\u8bed\u8a00\uff0c\u7279\u522b\u662f\u90a3\u4e9b\u5177\u6709\u4e30\u5bcc\u8bcd\u5f62\u53d8\u5316\u7684\u8bed\u8a00\u3002 \u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0cBPE \u5206\u8bcd\u6cd5\u5e38\u7528\u4e8e\u8bad\u7ec3\u8bed\u8a00\u6a21\u578b\uff0c\u5982 GPT \u548c BERT\uff0c\u4ee5\u63d0\u9ad8\u6a21\u578b\u7684\u6027\u80fd\u548c\u6548\u7387</p>"},{"location":"code/LLM/#token-id_1","title":"\u5c06token ID \u8f6c\u6362\u4e3a\u5d4c\u5165\u5411\u91cf","text":""},{"location":"code/LLM/#_2","title":"\u4f4d\u7f6e\u7f16\u7801","text":"<p>\u7531\u4e8eLLM\u7684\u81ea\u6ce8\u610f\u529b\u673a\u5236\u672c\u8eab\u4e5f\u4e0d\u5173\u6ce8\u4f4d\u7f6e\uff0c\u56e0\u6b64\u9700\u8981\u5c06\u989d\u5916\u7684\u4f4d\u7f6e\u4fe1\u606f\u6ce8\u5165\u5230LLM\u4e2d\u3002</p> <p>\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u6709\u4e24\u79cd\u5e38\u7528\u7684\u4f4d\u7f6e\u7f16\u7801\u65b9\u5f0f\uff1a\u76f8\u5bf9\u4f4d\u7f6e\u7f16\u7801\u548c\u7edd\u5bf9\u4f4d\u7f6e\u7f16\u7801\u3002</p> <p>\u7edd\u5bf9\u4f4d\u7f6e\u7f16\u7801\u4e0e\u5e8f\u5217\u4e2d\u7684\u7279\u5b9a\u4f4d\u7f6e\u76f8\u5173\u8054\u3002\u5bf9\u4e8e\u8f93\u5165\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e2a\u4f4d\u7f6e\uff0c\u90fd\u4f1a\u6dfb\u52a0\u4e00\u4e2a\u552f\u4e00\u7684\u4f4d\u7f6e\u7f16\u7801\u5230 token \u4e2d\uff0c\u6765\u8868\u793a\u5176\u786e\u5207\u4f4d\u7f6e\u3002\u4f8b\u5982\uff0c\u7b2c\u4e00\u4e2a token \u5c06\u5177\u6709\u7279\u5b9a\u7684\u4f4d\u7f6e\u7f16\u7801\uff0c\u7b2c\u4e8c\u4e2a token \u5c06\u5177\u6709\u53e6\u4e00\u4e2a\u4e0d\u540c\u7684\u4f4d\u7f6e\u7f16\u7801\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002</p> <p>\u76f8\u5bf9\u4f4d\u7f6e\u7f16\u7801\u4e0d\u662f\u4e13\u6ce8\u4e8e token \u7684\u7edd\u5bf9\u4f4d\u7f6e\uff0c\u800c\u662f\u4fa7\u91cd\u4e8e token \u4e4b\u95f4\u7684\u76f8\u5bf9\u4f4d\u7f6e\u6216\u8ddd\u79bb\u3002\u8fd9\u610f\u5473\u7740\u6a21\u578b\u5b66\u4e60\u7684\u662f \u201c\u5f7c\u6b64\u4e4b\u95f4\u6709\u591a\u8fdc\u201d \u800c\u4e0d\u662f \u201c\u5728\u54ea\u4e2a\u786e\u5207\u4f4d\u7f6e\u201d\u7684\u5173\u7cfb\u3002\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\uff0c\u5373\u4f7f\u6a21\u578b\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u6ca1\u6709\u770b\u5230\u8fd9\u6837\u7684\u957f\u5ea6\uff0c\u5b83\u4e5f\u53ef\u4ee5\u66f4\u597d\u5730\u63a8\u5e7f\u5230\u4e0d\u540c\u957f\u5ea6\u7684\u5e8f\u5217\u3002</p> <p>\u4e24\u79cd\u7c7b\u578b\u7684\u4f4d\u7f6e\u7f16\u7801\u65e8\u5728\u589e\u5f3a LLM \u7406\u89e3 token \u987a\u5e8f\u548c\u5173\u7cfb\u7684\u80fd\u529b\uff0c\u786e\u4fdd\u66f4\u51c6\u786e\u548c\u66f4\u5177\u4e0a\u4e0b\u6587\u610f\u8bc6\u7684\u9884\u6d4b\u3002\u5b83\u4eec\u7684\u9009\u62e9\u901a\u5e38\u53d6\u51b3\u4e8e\u5177\u4f53\u7684\u5e94\u7528\u7a0b\u5e8f\u548c\u6b63\u5728\u5904\u7406\u7684\u6570\u636e\u7684\u6027\u8d28\u3002</p> <p>OpenAI \u7684 GPT \u6a21\u578b\u4f7f\u7528\u7edd\u5bf9\u4f4d\u7f6e\u7f16\u7801\uff0c\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u8fdb\u884c\u4e86\u4f18\u5316\uff0c\u800c\u4e0d\u662f\u50cf\u539f\u59cb Transformer \u6a21\u578b\u4e2d\u7684\u4f4d\u7f6e\u7f16\u7801\u90a3\u6837\u56fa\u5b9a\u6216\u9884\u5b9a\u4e49\u3002\u8fd9\u4e2a\u4f18\u5316\u8fc7\u7a0b\u662f\u6a21\u578b\u8bad\u7ec3\u672c\u8eab\u7684\u4e00\u90e8\u5206\u3002</p>"},{"location":"code/LLM/#_3","title":"\u6ce8\u610f\u529b\u673a\u5236","text":""},{"location":"code/LLM/#_4","title":"\u957f\u5e8f\u5217\u5efa\u6a21\u7684\u95ee\u9898","text":"<p>\u8bb8\u591a\u4efb\u52a1\u5982\u8bed\u8a00\u7ffb\u8bd1\u5728transformers\u51fa\u73b0\u4e4b\u524d\u9700\u8981\u4f9d\u9760\u7f16\u7801\u5668-\u89e3\u7801\u5668RNN\uff0c\u7f16\u7801\u5668\u90e8\u5206\u5c06\u6574\u4e2a\u8f93\u5165\u6587\u672c\u5904\u7406\u6210\u4e00\u4e2a\u9690\u85cf\u72b6\u6001\uff08\u5b58\u50a8\u5355\u5143\uff09\uff0c\u7136\u540e\uff0c\u89e3\u7801\u5668\u63a5\u6536\u8fd9\u4e2a\u9690\u85cf\u72b6\u6001\u6765\u751f\u6210\u8f93\u51fa\u3002RNN\u5728\u89e3\u7801\u9636\u6bb5\u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee\u7f16\u7801\u5668\u7684\u65e9\u671f\u9690\u85cf\u72b6\u6001\uff0c\u53ef\u80fd\u5bfc\u81f4\u4e0a\u4e0b\u6587\u4e22\u5931\uff0c\u7279\u522b\u662f\u5728\u4f9d\u8d56\u5173\u7cfb\u53ef\u80fd\u8de8\u8d8a\u957f\u8ddd\u79bb\u7684\u590d\u6742\u53e5\u5b50\u4e2d\u3002</p> <p>\u7f16\u7801\u5668-\u89e3\u7801\u5668RNN\u7684\u7f3a\u9677\u4fc3\u4f7f\u4e86\u6ce8\u610f\u529b\u673a\u5236\u7684\u8bbe\u8ba1\u3002</p>"},{"location":"code/LLM/#_5","title":"\u7528\u5173\u6ce8\u673a\u5236\u6355\u6349\u5e8f\u5217\u6570\u636e\u4f9d\u8d56\u6027","text":"<p>\u5728\u81ea\u6ce8\u610f\u529b\u4e2d\uff0c\u201c\u81ea\u201d\u6307\u7684\u662f\u673a\u5236\u901a\u8fc7\u5173\u8054\u5355\u4e2a\u8f93\u5165\u5e8f\u5217\u4e2d\u7684\u4e0d\u540c\u4f4d\u7f6e\u6765\u8ba1\u7b97\u6ce8\u610f\u529b\u6743\u91cd\u7684\u80fd\u529b\u3002\u5b83\u8bc4\u4f30\u548c\u5b66\u4e60\u8f93\u5165\u672c\u8eab\u5404\u4e2a\u90e8\u5206\u4e4b\u95f4\u7684\u5173\u7cfb\u548c\u4f9d\u8d56\u6027\uff0c\u4f8b\u5982\u53e5\u5b50\u4e2d\u7684\u5355\u8bcd\u6216\u56fe\u50cf\u4e2d\u7684\u50cf\u7d20\u3002\u8fd9\u4e0e\u4f20\u7edf\u7684\u6ce8\u610f\u529b\u673a\u5236\u5f62\u6210\u5bf9\u6bd4\uff0c\u4f20\u7edf\u673a\u5236\u5173\u6ce8\u7684\u662f\u4e24\u4e2a\u4e0d\u540c\u5e8f\u5217\u7684\u5143\u7d20\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u4f8b\u5982\u5728\u5e8f\u5217\u5230\u5e8f\u5217\u6a21\u578b\u4e2d\uff0c\u6ce8\u610f\u529b\u53ef\u80fd\u5728\u8f93\u5165\u5e8f\u5217\u548c\u8f93\u51fa\u5e8f\u5217\u4e4b\u95f4\u3002</p> <p>\u5728\u81ea\u6ce8\u610f\u529b\u4e2d\uff0c\u4e0a\u4e0b\u6587\u5411\u91cf\u8d77\u7740\u81f3\u5173\u91cd\u8981\u7684\u4f5c\u7528\u3002\u5b83\u4eec\u7684\u76ee\u7684\u662f\u901a\u8fc7\u7ed3\u5408\u5e8f\u5217\u4e2d\u6240\u6709\u5176\u4ed6\u5143\u7d20\u7684\u4fe1\u606f\u6765\u521b\u5efa\u8f93\u5165\u5e8f\u5217\uff08\u5982\u53e5\u5b50\uff09\u4e2d\u6bcf\u4e2a\u5143\u7d20\u7684\u4e30\u5bcc\u8868\u793a\u3002\u8fd9\u5bf9\u4e8eLLMs\u81f3\u5173\u91cd\u8981\uff0c\u56e0\u4e3aLLMs\u9700\u8981\u7406\u89e3\u53e5\u5b50\u4e2d\u5355\u8bcd\u4e4b\u95f4\u7684\u5173\u7cfb\u548c\u76f8\u5173\u6027\u3002</p>"},{"location":"code/LLM/#retrieval-augmented-generation","title":"\u68c0\u7d22\u589e\u5f3a\u751f\u6210\uff08Retrieval-augmented generation\uff09","text":""},{"location":"code/code/","title":"Code","text":"\\[ \\operatorname{ker} f=\\{g\\in G:f(g)=e_{H}\\}{\\mbox{.}} \\] <p>The homomorphism \\(f\\) is injective if and only if its kernel is only the  singleton set \\(e_G\\), because otherwise \\(\\exists a,b\\in G\\) with \\(a\\neq b\\) such  that \\(f(a)=f(b)\\).</p>"},{"location":"code/fe/","title":"Feature extraction \u7279\u5f81\u63d0\u53d6","text":"<p>\u53ef\u4ee5\u8003\u8651\u7528 \u9057\u4f20\u7b97\u6cd5 \u66b4\u529b\u6316\u6398</p>"},{"location":"code/fs/","title":"Feature selection \u7279\u5f81\u9009\u62e9","text":"<p>\u4e00\u4e2a\u53ef\u4ee5\u8003\u8651\u9009\u53d6\u7684\u6307\u6807\uff1a\u4e92\u4fe1\u606f</p>"},{"location":"code/loop/","title":"Loop \u5faa\u73af","text":""},{"location":"code/loop/#trangetqdm","title":"trange\u548ctqdm:","text":"<p>\u53c2\u8003\u7f51\u7ad9\uff1aPython \u8fdb\u5ea6\u6761 tqdm \u548c trange</p> <p><code>tqdm</code>\u662f\u4e00\u4e2a\u7528\u4e8e\u663e\u793a\u8fdb\u5ea6\u6761\u7684 Python \u5e93\uff0c\u5e38\u7528\u4e8e\u957f\u65f6\u95f4\u8fd0\u884c\u7684\u5faa\u73af\u4e2d\u3002<code>trange</code> \u662f<code>tqdm</code> \u63d0\u4f9b\u7684\u4e00\u4e2a\u5feb\u6377\u51fd\u6570\uff0c\u7528\u4e8e\u751f\u6210\u5e26\u6709\u8fdb\u5ea6\u6761\u7684\u8303\u56f4\u5bf9\u8c61\u3002\u4ee5\u4e0b\u662f <code>tqdm</code>\u548c <code>trange</code> \u7684\u4ee3\u7801\u8303\u4f8b\uff1a</p> <pre><code>from tqdm import tqdm\n\nimport time\n\n# \u521b\u5efa\u4e00\u4e2a\u5217\u8868\n\na = [1, 2, 3]\n\n# \u4f7f\u7528 tqdm \u5305\u88c5\u5217\u8868\uff0c\u663e\u793a\u8fdb\u5ea6\u6761\n\nfor i in tqdm(a):\n\n  time.sleep(1)  # \u6a21\u62df\u957f\u65f6\u95f4\u8fd0\u884c\u7684\u4efb\u52a1\n\n  print(i)\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c\uff1a <pre><code> 33%|\u2588\u2588\u2588\u258e      | 1/3 [00:01&lt;00:02,  1.01s/it]\n1\n 67%|\u2588\u2588\u2588\u2588\u2588\u2588\u258b   | 2/3 [00:02&lt;00:01,  1.01s/it]\n2\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 3/3 [00:03&lt;00:00,  1.01s/it]\n3\n</code></pre></p> <pre><code>from tqdm import trange\n\nimport time\n\n# \u4f7f\u7528 trange \u751f\u6210\u4e00\u4e2a\u5e26\u6709\u8fdb\u5ea6\u6761\u7684\u8303\u56f4\u5bf9\u8c61\n\nfor i in trange(3):\n\n  time.sleep(1)  # \u6a21\u62df\u957f\u65f6\u95f4\u8fd0\u884c\u7684\u4efb\u52a1\n\n  print(i)\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c\uff1a <pre><code> 33%|\u2588\u2588\u2588\u258e      | 1/3 [00:01&lt;00:02,  1.00s/it]\n0\n 67%|\u2588\u2588\u2588\u2588\u2588\u2588\u258b   | 2/3 [00:02&lt;00:01,  1.01s/it]\n1\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 3/3 [00:03&lt;00:00,  1.01s/it]\n2\n</code></pre></p>"},{"location":"code/loop/#_1","title":"\u81ea\u5b9a\u4e49\u8fdb\u5ea6\u6761\u663e\u793a\u4fe1\u606f","text":"<p>\u901a\u8fc7<code>set_description</code>\u548c<code>set_postfix</code>\u65b9\u6cd5\u8bbe\u7f6e\u8fdb\u5ea6\u6761\u663e\u793a\u4fe1\u606f\uff1a</p> <pre><code>from tqdm import trange\n\nfrom random import random,randint\n\nimport time\n\n\n\nwith trange(10) as t:\n\n for i in t:\n\n  #\u8bbe\u7f6e\u8fdb\u5ea6\u6761\u5de6\u8fb9\u663e\u793a\u7684\u4fe1\u606f\n\n  t.set_description(\"GEN %i\"%i)\n\n  #\u8bbe\u7f6e\u8fdb\u5ea6\u6761\u53f3\u8fb9\u663e\u793a\u7684\u4fe1\u606f\n\n  t.set_postfix(loss=random(),gen=randint(1,999),str=\"h\",lst=[1,2])\n\n  time.sleep(0.1)\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c\uff1a <code>GEN 9: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 10/10 [00:01&lt;00:00,  9.12it/s, gen=58, loss=0.997, lst=[1, 2], str=h]</code></p>"},{"location":"code/loop/#python-set-set-intersection","title":"Python Set &amp; \u548c Set intersection() \u8fd0\u884c\u901f\u5ea6\u6bd4\u8f83","text":"Python Set &amp; \u548c Set intersection() \u8fd0\u884c\u901f\u5ea6\u6bd4\u8f83.py<pre><code>import random\nimport time\nimport numpy as np\n\n\ndef set_intersection(length=10000, interval=100000):\n  a = set(random.sample([i for i in range(interval)], length))\n  b = set(random.sample([i for i in range(interval)], length))\n  time_1, time_2 = [], [] \n  for i in range(10):\n    start_time = time.time()\n    set(a) &amp; set(b)\n    end_time = time.time()\n    time_1.append(end_time-start_time)\n    start_time_2 = time.time()\n    a.intersection(b)\n    end_time_2 = time.time()\n    time_2.append(end_time_2 - start_time_2)\n  print(np.mean(time_1))\n  print(np.mean(time_2))\n\n\na = set(random.sample([i for i in range(10000000)], 1000000))\nb = set(random.sample([i for i in range(10000000)], 1000000))\n\nset_intersection(1000000, 10000000)\nset_intersection(10000, 100000)\n</code></pre> <p>\u5bf9set\u6570\u636e\u7c7b\u578b\uff0c\u4f18\u5148\u9009\u62e9 .intersection()\u3002interseection()\u901f\u5ea6\u7ea6\u4e3a &amp; \u7684 3~5 \u500d\u3002</p> <p>\u8fd0\u884c\u7ed3\u679c: 0.25935113430023193 0.11506917476654052 0.002876615524291992 0.0009170770645141602</p>"},{"location":"code/numpy/","title":"NumPy \u6570\u7ec4","text":""},{"location":"code/numpy/#numpy","title":"numpy \u62a5\u9519\u68c0\u67e5/\u6291\u5236","text":"<p>\u7528\u4e8e\u4e34\u65f6\u63a7\u5236numpy\u7684\u9519\u8bef\u5904\u7406\u884c\u4e3a\u3002\u4e3b\u8981\u7528\u4e8e\u6291\u5236\u4e00\u4e9b\u5e38\u89c1\u7684\u6570\u503c\u8ba1\u7b97\u8b66\u544a\u3002</p> <p>\u4f7f\u7528 errstate \u7684\u60c5\u51b5:</p> <pre><code>import numpy as np\n\n# \u9664\u4ee5\u96f6\u4f1a\u4ea7\u751f\u8b66\u544a\na = np.array([1, 0])\nb = np.array([0, 0])\nprint(a / b)  # \u4f1a\u663e\u793a\u8b66\u544a\u4fe1\u606f\n\n# \u6291\u5236\u8b66\u544a\nwith np.errstate(divide='ignore', invalid='ignore'):\n    a = np.array([1, 0])\n    b = np.array([0, 0])\n    print(a / b)  # \u4e0d\u4f1a\u663e\u793a\u8b66\u544a\u4fe1\u606f\n</code></pre> <p>\u5e38\u89c1\u7684\u9519\u8bef\u7c7b\u578b\uff1a</p> <pre><code>with np.errstate(\n    divide='ignore',    # \u5ffd\u7565\u9664\u96f6\u8b66\u544a\n    invalid='ignore',   # \u5ffd\u7565\u65e0\u6548\u64cd\u4f5c\u8b66\u544a\n    over='ignore',      # \u5ffd\u7565\u4e0a\u6ea2\u51fa\u8b66\u544a\n    under='ignore'      # \u5ffd\u7565\u4e0b\u6ea2\u51fa\u8b66\u544a\n):\n    # \u4f60\u7684\u8ba1\u7b97\u4ee3\u7801\n\n#eg:\ndef safe_division(x, y):\n    with np.errstate(divide='ignore', invalid='ignore'):\n        result = x / y\n        # \u5904\u7406\u7279\u6b8a\u503c\n        result = np.nan_to_num(result, nan=0.0, posinf=0.0, neginf=0.0)\n        return result\n</code></pre>"},{"location":"code/numpy/#python-npwhere-index","title":"Python np.where(), .index() \u8fd0\u884c\u901f\u5ea6\u6bd4\u8f83","text":"<pre><code>import numpy as np\nimport time\nimport random\n\na = [i for i in range(99999)]\nb = random.sample(a, 10000)\na_arr = np.array(a)\narray_time = []\nindex_time = []\nfor i in range(10):\n  time_start = time.time()\n  [a.index(j) for j in b]\n  time_end = time.time()\n  time_run = time_end - time_start\n  index_time.append(time_run)\n  time_start = time.time()\n  [np.where(a_arr == j)[0][0] for j in b]\n  time_end = time.time()\n  time_run = time_end - time_start\n  array_time.append(time_run)\n\nprint(np.mean(array_time))\nprint(np.mean(index_time))\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c\uff1a <pre><code>0.4020892381668091\n11.329256582260133\n</code></pre></p>"},{"location":"code/others/","title":"Others","text":"<p>\u5c06ipynb\u6587\u4ef6\u8f6c\u6362\u6210md\u6587\u4ef6 CMD\u547d\u4ee4 <pre><code>jupyter nbconvert --to markdown '\u6587\u4ef6\u540d.ipynb' \n</code></pre></p> <p>\u8f6c\u6362\u540e\u4f1a\u5728\u540c\u7ea7\u76ee\u5f55\u4e0b\u751f\u6210\u5bf9\u5e94\u7684md\u6587\u4ef6</p> <p>\u683c\u5f0f\u4fdd\u6301\u5b8c\u7f8e\uff0c\u65e0\u8bba\u662f\u4ee3\u7801\u5757\u3001\u56fe\u50cf\u8fd8\u662f\u6587\u672c\uff0c\u90fd\u80fd\u591f\u51c6\u786e\u65e0\u8bef\u5730\u8f6c\u6362\uff0c\u8fd9\u5bf9\u4e8e\u5e0c\u671b\u5728\u4e0d\u540c\u5e73\u53f0\u4e0a\u5171\u4eab\u5176Notebook\u7684\u7528\u6237\u6765\u8bf4\u975e\u5e38\u65b9\u4fbf\u3002</p>"},{"location":"code/pachong/","title":"\u722c\u866b","text":"<p>\u7f51\u9875\u722c\u866b\u662f\u4e00\u79cd\u81ea\u52a8\u5316\u5de5\u5177\uff0c\u7528\u4e8e\u4ece\u7f51\u7ad9\u4e0a\u63d0\u53d6\u6570\u636e\u3002\u5b83\u901a\u8fc7\u6a21\u62df\u6d4f\u89c8\u5668\u884c\u4e3a\uff0c\u8bbf\u95ee\u7f51\u9875\u5e76\u89e3\u6790\u5176\u5185\u5bb9\uff0c\u63d0\u53d6\u6240\u9700\u7684\u4fe1\u606f\u3002\u4ee5\u4e0b\u662f Web Scraper \u7684\u4e00\u4e9b\u5173\u952e\u6982\u5ff5\u548c\u7528\u9014\uff1a</p> <p>\u5173\u952e\u6982\u5ff5</p> <ul> <li>HTTP \u8bf7\u6c42\uff1a\u722c\u866b\u901a\u8fc7\u53d1\u9001 HTTP \u8bf7\u6c42\u6765\u8bbf\u95ee\u7f51\u9875\uff0c\u5e38\u7528\u7684\u8bf7\u6c42\u65b9\u6cd5\u5305\u62ec GET \u548c POST\u3002</li> <li>HTML \u89e3\u6790\uff1a\u722c\u866b\u83b7\u53d6\u7f51\u9875\u7684 HTML \u5185\u5bb9\u540e\uff0c\u9700\u8981\u89e3\u6790 HTML \u4ee5\u63d0\u53d6\u6240\u9700\u7684\u6570\u636e\u3002\u5e38\u7528\u7684\u89e3\u6790\u5e93\u6709 BeautifulSoup \u548c lxml\u3002</li> <li>\u6570\u636e\u63d0\u53d6\uff1a\u901a\u8fc7\u89e3\u6790 HTML\uff0c\u722c\u866b\u53ef\u4ee5\u63d0\u53d6\u7279\u5b9a\u7684\u5143\u7d20\uff0c\u5982\u6807\u9898\u3001\u94fe\u63a5\u3001\u56fe\u7247\u3001\u8868\u683c\u6570\u636e\u7b49\u3002</li> <li>\u6570\u636e\u5b58\u50a8\uff1a\u63d0\u53d6\u7684\u6570\u636e\u53ef\u4ee5\u5b58\u50a8\u5728\u5404\u79cd\u683c\u5f0f\u4e2d\uff0c\u5982 CSV\u3001JSON\u3001\u6570\u636e\u5e93\u7b49\u3002</li> </ul> <p>\u5e38\u89c1\u7528\u9014</p> <ul> <li> <p>\u6570\u636e\u6536\u96c6\uff1a\u4ece\u591a\u4e2a\u7f51\u7ad9\u6536\u96c6\u6570\u636e\uff0c\u7528\u4e8e\u5e02\u573a\u5206\u6790\u3001\u7ade\u4e89\u5bf9\u624b\u7814\u7a76\u7b49\u3002</p> </li> <li> <p>\u5185\u5bb9\u805a\u5408\uff1a\u4ece\u4e0d\u540c\u6765\u6e90\u6536\u96c6\u5185\u5bb9\uff0c\u6c47\u603b\u5230\u4e00\u4e2a\u5e73\u53f0\u4e0a\uff0c\u5982\u65b0\u95fb\u805a\u5408\u7f51\u7ad9\u3002</p> </li> <li>\u4ef7\u683c\u76d1\u63a7\uff1a\u76d1\u63a7\u7535\u5546\u7f51\u7ad9\u7684\u5546\u54c1\u4ef7\u683c\uff0c\u8fdb\u884c\u4ef7\u683c\u6bd4\u8f83\u548c\u8d8b\u52bf\u5206\u6790\u3002</li> <li>\u5b66\u672f\u7814\u7a76\uff1a\u6536\u96c6\u5b66\u672f\u6587\u7ae0\u3001\u7814\u7a76\u6570\u636e\u7b49\uff0c\u7528\u4e8e\u5b66\u672f\u7814\u7a76\u548c\u5206\u6790\u3002</li> </ul>"},{"location":"code/pachong/#web-scrapper","title":"Web Scrapper:\u6d4f\u89c8\u5668\u63d2\u4ef6","text":"<p>Web Scraper\u662f\u4e13\u95e8\u7528\u4e8e\u722c\u866b\u7684Chrome\u63d2\u4ef6\uff0c\u5b83\u901a\u8fc7\u6a21\u62df\u4eba\u624b\u52a8\u64cd\u4f5c\u6d4f\u89c8\u5668\u7684\u65b9\u5f0f\u6765\u62b5\u6297\u53cd\u722c\u866b\u673a\u5236\u3002\u5b83\u9002\u5408\u4e8e\u8f7b\u5ea6\u7684\u6570\u636e\u722c\u53d6\u9700\u6c42\uff0c\u7279\u522b\u662f\u5bf9\u4e8e\u90a3\u4e9b\u4e0d\u9700\u8981\u9891\u7e41\u66f4\u65b0\u6570\u636e\u7684\u573a\u666f\u3002\u4f7f\u7528Web Scraper\uff0c\u4f60\u53ef\u4ee5\u521b\u5efa\u6240\u8c13\u7684sitemap\uff0c\u5b83\u5b9a\u4e49\u4e86\u722c\u866b\u7684\u7ed3\u6784\u548c\u4f60\u60f3\u8981\u63d0\u53d6\u7684\u6570\u636e\u7c7b\u578b\u3002\u4f60\u53ef\u4ee5\u9009\u62e9\u6587\u672c\u3001\u94fe\u63a5\u3001\u56fe\u7247\u7b49\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5e76\u5c06\u7ed3\u679c\u5bfc\u51fa\u4e3a<code>CSV</code>\u3001<code>XLSX</code>\u6216<code>JSON</code>\u683c\u5f0f\u3002</p> <p>\u4f7f\u7528\u5b83\u65f6\u9700\u8981\u6309 <code>F12</code> \u6253\u5f00\u5f00\u53d1\u8005\u6a21\u5f0f\uff0c\u5728\u6700\u53f3\u4fa7\u627e\u5230\u201cWeb Scraper\u201d\u9009\u9879\u3002</p> <p>\u8be6\u7ec6\u7684\u5de5\u4f5c\u6d41\u7a0b\u53c2\u8003\u7f51\u7ad9\uff1a</p> <ul> <li> <p>Web Scraper \u5b98\u65b9\u793a\u4f8b\u2014\u2014\u722c\u53d6\u591a\u5143\u7d20</p> </li> <li> <p>Bilibili \u6559\u7a0b\u2014\u2014Web Scraper \u722c\u53d6\u6570\u636e\u6559\u7a0b\u3010\u4e0d\u7528\u5199\u4ee3\u7801\u7684\u722c\u866b\uff0c\u5feb\u901f\u83b7\u53d6\u6570\u636e\u3011</p> </li> <li> <p>YouTube \u6559\u7a0b\u2014\u2014\u7528\u722c\u866b\u5de5\u5177\u4ece\u7f51\u9875\u4e2d\u6252\u6570\u636e\u5e76\u5bfc\u5165 Excel \u8868\u683c</p> </li> </ul>"},{"location":"code/pandas/","title":"Pandas \u6570\u636e\u6846","text":""},{"location":"code/sql/","title":"SQL \u6570\u636e\u5e93","text":"<p>Cheat Sheet</p> <p>Mosh Cheat Sheet</p> <p>LearnSQL.com Cheat Sheet</p>"},{"location":"code/sql/#_1","title":"\u5355\u8868\u67e5\u8be2","text":""},{"location":"code/sql/#select","title":"<code>SELECT</code>","text":"<pre><code>SELECT\n    name\n    price\n    price*0.9 AS 'discouted price'\nFROM\n    tablename\nWHERE\n    NOT (age &lt; 10 OR (price &gt; 100 AND city=Shanghai))\nORDER BY\n    name\n</code></pre> <ul> <li><code>SQL</code>\u8bed\u53e5\u4e0d\u533a\u5206\u5927\u5c0f\u5199\uff0c\u5373<code>SELECT</code>\u3001<code>Select</code>\u3001<code>select</code>\u662f\u540c\u6837\u7684\u3002\u4f46\u5efa\u8bae\u5173\u952e\u8bcd\u7528\u5927\u5199\uff0c\u65b9\u4fbf\u9605\u8bfb\uff0c\u8ba9\u4ee3\u7801\u66f4\u89c4\u8303\u3002</li> <li>\u53ef\u4ee5\u57281\u4e2d\u505a\u7b97\u672f\u8fd0\u7b97\uff0c\u751f\u6210\u65b0\u7684\u5217\uff0c\u5e76\u75281\u81ea\u5b9a\u4e49\u5217\u540d\u3002</li> <li><code>WHERE</code>\u7528\u4e8e\u7b5b\u9009\u3002\u5176\u4e2d\uff0c<code>AND</code>\u7684\u4f18\u5148\u7ea7\u6bd4<code>OR</code>\u9ad8\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c<code>age &lt; 10 OR price &gt; 100 AND city=Shanghai</code>\u76f8\u5f53\u4e8e<code>age &lt; 10 OR (price &gt; 100 AND city=Shanghai)</code>\u3002</li> </ul>"},{"location":"code/sql/#where","title":"<code>WHERE</code> \u7b5b\u9009","text":"<p>\u4e0d\u5141\u8bb8\u5728 <code>WHERE</code> \u8bed\u53e5\u540e\u9762\u5f15\u7528\u522b\u540d\uff0c\u53ef\u4ee5\u7528 <code>HAVING</code> \u4ee3\u66ff <code>WHERE</code> \u3002</p> <p>\u9898\u76ee</p> <p>\u725b\u5ba2\u7f51\u9898\u76ee \u6613\u9519\u70b9\uff0c\u6267\u884c\u987a\u5e8f\u662f from -&gt; where -&gt; group by -&gt; having -&gt; select -&gt; order by -&gt; limit\u3002</p> <p>\u6240\u4ee5\u5982\u679c\u5728 where \u540e\u9762\u9650\u5236 total_price\uff0c\u8fd9\u65f6\u5019 select \u91cc\u7684 SUM \u90fd\u6ca1\u5f00\u59cb\u8ba1\u7b97\uff0cOrderItems\u91cc\u6ca1\u6709 total_price\uff0c\u6240\u4ee5\u4f1a\u62a5\u9519 where \u627e\u4e0d\u5230 total_price\u3002</p>"},{"location":"code/sql/#distinct","title":"<code>DISTINCT</code>\uff1a\u63d0\u53d6\u552f\u4e00\u503c","text":"<p><pre><code>-- \u9009\u62e9\u6240\u6709\u4e0d\u540c\u7684\u7279\u5b9a\u5217\uff08\u8fd9\u91cc\u662f country \u5217\uff09\u7684\u552f\u4e00\u503c\nSELECT DISTINCT country\nFROM customers;\n</code></pre> \u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u4e86 SELECT DISTINCT \u547d\u4ee4\u6765\u4ece customers \u8868\u4e2d\u63d0\u53d6\u552f\u4e00\u7684 country \u5217\u6570\u636e\u3002DISTINCT \u5173\u952e\u5b57\u544a\u8bc9\u6570\u636e\u5e93\u53ea\u8fd4\u56de\u4e0d\u540c\u7684\u503c\uff0c\u800c\u4e0d\u662f\u91cd\u590d\u7684\u503c\u3002</p> <p>\u5982\u679c customers \u8868\u4e2d\u6709\u591a\u4e2a\u76f8\u540c\u7684\u56fd\u5bb6\uff0c\u90a3\u4e48\u8be5\u67e5\u8be2\u5c06\u4ec5\u8fd4\u56de\u4e00\u4e2a\u8be5\u56fd\u5bb6\u7684\u552f\u4e00\u503c\uff0c\u800c\u4e0d\u662f\u6bcf\u4e2a\u91cd\u590d\u7684\u5b9e\u4f8b\u3002</p> <p>\u8fd9\u662f\u9002\u7528\u4e8e\u8bb8\u591a\u60c5\u51b5\u7684\u6709\u7528\u7684\u529f\u80fd\uff0c\u4f8b\u5982\u4ece\u8868\u4e2d\u67e5\u627e\u552f\u4e00\u503c\u4ee5\u8fdb\u884c\u5206\u6790\u6216\u8fc7\u6ee4\u6389\u91cd\u590d\u503c\uff0c\u4ee5\u4f7f\u7ed3\u679c\u66f4\u5177\u53ef\u8bfb\u6027\u3002</p>"},{"location":"code/sql/#in","title":"<code>IN</code>\uff1a\u7b49\u4e8e\u591a\u4e2a\u503c\u4e2d\u7684\u4e00\u4e2a","text":"<pre><code>SELECT *\nFROM customers\nWHERE state IN ('VA', 'NY', 'CA') # (1)!\n</code></pre> <ol> <li>IN \u540e\u9762\u7528\u5706\u62ec\u53f7\uff0c\u800c\u4e0d\u662f\u65b9\u62ec\u53f7\u3002</li> </ol> <p>\u7b49\u4ef7\u4e8e <pre><code>SELECT *\nFROM customers\nWHERE state = 'VA' OR state = 'NY' OR state = 'CA'\n</code></pre></p>"},{"location":"code/sql/#between","title":"<code>BETWEEN</code>\uff1a\u4ecb\u4e8e\u4e24\u8005\u4e4b\u95f4","text":"<pre><code>SELECT *\nFROM customers\nWHERE points BETWEEN 100 AND 200\n</code></pre> <p>\u7b49\u4ef7\u4e8e\uff08\u4e24\u7aef\u662f\u5927\u4e8e\u7b49\u4e8e\u548c\u5c0f\u4e8e\u7b49\u4e8e\uff0c\u800c\u4e0d\u662f\u5927\u4e8e\u548c\u5c0f\u4e8e\uff09</p> <pre><code>SELECT *\nFROM customers\nWHERE points &gt;= 100 AND points &lt;= 200\n</code></pre>"},{"location":"code/sql/#like","title":"<code>LIKE</code>\uff1a\u7b5b\u9009\u5b57\u7b26\u4e32","text":"<pre><code>SELECT *\nFROM customers\nWHERE first_name LIKE 'b%'\n</code></pre> <ul> <li><code>%</code>\u4ee3\u8868\u4efb\u610f\u957f\u5ea6\u7684\u5b57\u7b26\uff0c\u53ef\u4ee5\u662f 0 \u4e2a\u3002</li> <li>\u8fd9\u53e5\u8bdd\u610f\u601d\u662f\u7b5b\u9009\u51fa<code>first_name</code>\u662f\u4ee5<code>b</code>\u6216<code>B</code>\u5f00\u5934\u7684\u6570\u636e\u3002</li> </ul> <pre><code>SELECT *\nFROM customers\nWHERE first_name LIKE '%b%'\n</code></pre> <ul> <li><code>_</code>\u4ee3\u8868\u4e00\u4e2a\u957f\u5ea6\u7684\u5b57\u7b26\uff0c\u4e0d\u80fd\u591a\u4e5f\u4e0d\u80fd\u5c11\uff0c\u5fc5\u987b\u521a\u597d\u4e00\u4e2a\u957f\u5ea6\u3002</li> <li>\u8fd9\u53e5\u8bdd\u610f\u601d\u662f\u7b5b\u9009\u51fa<code>first_name</code>\u662f\u4ee5<code>b</code>\u6216<code>B</code>\u7ed3\u5c3e\u7684\uff0c\u4e14\u524d\u9762\u6709\u4e00\u4e2a\u5b57\u7b26\u7684\u6570\u636e\u3002</li> </ul>"},{"location":"code/sql/#regexp","title":"<code>REGEXP</code>: \u6b63\u5219\u8868\u8fbe\u5f0f\u7b5b\u9009\u5b57\u7b26\u4e32","text":"<pre><code>SELECT *\nFROM customers\nWHERE first_name REGEXP '^a' # (1)!\n</code></pre> <ol> <li><code>REGEXP</code> \u540e\u9762\u7528\u5355\u5f15\u53f7\u5c06\u6b63\u5219\u8868\u8fbe\u5f0f\u653e\u5165\u5176\u4e2d\u3002</li> <li>^: beginning of a string</li> <li>$: end of a string</li> <li>|: logical OR</li> <li>[abc]: match any single characters</li> <li>[a-d]: any characters from a to d\uff0c\u8fd9\u6837\u5c31\u4e0d\u7528\u628a [abcd] \u5168\u90e8\u5199\u51fa\u6765\u4e86\u3002</li> </ol>"},{"location":"code/sql/#substring","title":"<code>SUBSTRING</code>\uff1a\u4ece\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u63d0\u53d6\u4e00\u4e2a\u5b50\u5b57\u7b26\u4e32","text":"<p><code>SUBSTRING</code> \u9700\u8981\u81f3\u5c11\u4e24\u4e2a\u53c2\u6570\uff1a\u8981\u63d0\u53d6\u7684\u5b57\u7b26\u4e32\u548c\u8981\u63d0\u53d6\u7684\u5b50\u5b57\u7b26\u4e32\u7684\u8d77\u59cb\u4f4d\u7f6e\u3002</p> <p><code>SUBSTRING</code> \u7684\u8bed\u6cd5\u5982\u4e0b\uff1a</p> <pre><code>SUBSTRING(string, start_position, length)\n</code></pre> <p>\u5176\u4e2d\uff0c - <code>string</code> \u662f\u8981\u63d0\u53d6\u5b50\u5b57\u7b26\u4e32\u7684\u539f\u59cb\u5b57\u7b26\u4e32\u3002 - <code>start_position</code> \u662f\u5b50\u5b57\u7b26\u4e32\u7684\u8d77\u59cb\u4f4d\u7f6e\uff0c\u53ef\u4ee5\u662f\u4e00\u4e2a\u6574\u6570\u503c\u6216\u4e00\u4e2a\u8868\u8fbe\u5f0f\u3002 - <code>length</code> \u662f\u8981\u63d0\u53d6\u7684\u5b50\u5b57\u7b26\u4e32\u957f\u5ea6\uff0c\u53ef\u4ee5\u662f\u4e00\u4e2a\u6574\u6570\u503c\u6216\u4e00\u4e2a\u8868\u8fbe\u5f0f\u3002\u5982\u679c\u7701\u7565\u6b64\u53c2\u6570\uff0c\u5219\u5c06\u63d0\u53d6\u4ece\u8d77\u59cb\u4f4d\u7f6e\u5230\u5b57\u7b26\u4e32\u672b\u5c3e\u7684\u6240\u6709\u5b57\u7b26\u3002</p> <p>\u4f8b\u5982\uff0c\u4ee5\u4e0b\u4ee3\u7801\u5c06\u4ece\u5b57\u7b26\u4e32 <code>\"Hello, world!\"</code> \u4e2d\u63d0\u53d6\u5b50\u5b57\u7b26\u4e32 <code>\"world\"</code>\uff1a</p> <pre><code>SELECT SUBSTRING('Hello, world!', 8, 5);\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <p>world </p> <p>SUBSTRING() \u8fd8\u652f\u6301\u5728 WHERE \u5b50\u53e5\u4e2d\u4f7f\u7528\uff0c\u4ee5\u8fc7\u6ee4\u57fa\u4e8e\u5b50\u5b57\u7b26\u4e32\u7684\u67e5\u8be2\u7ed3\u679c\u3002</p>"},{"location":"code/sql/#concat","title":"<code>CONCAT()</code>\uff1a\u8fde\u63a5\u4e24\u4e2a\u6216\u591a\u4e2a\u5b57\u7b26\u4e32","text":"<p>\u5728 SQL \u4e2d\uff0c<code>CONCAT()</code> \u51fd\u6570\u7528\u4e8e\u5c06\u4e24\u4e2a\u6216\u591a\u4e2a\u5b57\u7b26\u4e32\u8fde\u63a5\u5728\u4e00\u8d77\u3002\u5b83\u63a5\u53d7\u4efb\u610f\u6570\u91cf\u7684\u5b57\u7b26\u4e32\u53c2\u6570\uff0c\u5e76\u5c06\u5b83\u4eec\u8fde\u63a5\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002</p> <p>\u8bed\u6cd5\uff1a <pre><code>CONCAT(string1, string2, ...)\n</code></pre></p> <p>\u53c2\u6570\uff1a - string1, string2, ...\uff1a\u8981\u8fde\u63a5\u7684\u5b57\u7b26\u4e32\u3002</p> <p>\u8fd4\u56de\u503c\uff1a</p> <ul> <li>\u8fde\u63a5\u540e\u7684\u5b57\u7b26\u4e32\u3002</li> </ul> <p>\u793a\u4f8b\uff1a</p> <pre><code>SELECT CONCAT('Hello', ' ', 'World') AS Greeting;\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>Hello World\n</code></pre> <p>\u6ce8\u610f\uff1a</p> <ul> <li>\u5982\u679c\u4efb\u4f55\u4e00\u4e2a\u53c2\u6570\u4e3a NULL\uff0c\u5219\u6574\u4e2a\u7ed3\u679c\u4e3a NULL\u3002</li> <li>\u5982\u679c\u53c2\u6570\u90fd\u662f\u6570\u5b57\uff0c\u5219\u5b83\u4eec\u5c06\u88ab\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u5e76\u8fde\u63a5\u5728\u4e00\u8d77\u3002</li> </ul>"},{"location":"code/sql/#is-null","title":"<code>IS NULL</code>\uff1a\u7b5b\u9009\u7a7a\u503c","text":"<pre><code>SELECT *\nFROM customers\nWHERE phone IS NULL\n</code></pre>"},{"location":"code/sql/#order-by","title":"<code>ORDER BY</code>\uff1a\u6392\u5e8f","text":"<pre><code>SELECT *\nFROM customers\nORDER BY state, first_name DESC\n</code></pre> <ul> <li><code>ORDER BY</code>\u4e24\u4e2a\u5b57\u6bb5\uff0c\u5b9e\u73b0\u53cc\u91cd\u6392\u5e8f\u3002</li> <li><code>DESC</code>\u662f\u6309\u964d\u5e8f\u6392\u5217\u3002</li> </ul> <p>\u8fd8\u53ef\u4ee5\u6309\u591a\u5217\u6392\u5e8f\uff0c\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code>SELECT *\nFROM table_name\nORDER BY column1 ASC, column2 DESC;\n</code></pre> <p>\u5176\u4e2d\uff0ccolumn1 \u8868\u793a\u7b2c\u4e00\u5217\uff0cASC \u8868\u793a\u5347\u5e8f\u6392\u5217\uff0ccolumn2 \u8868\u793a\u7b2c\u4e8c\u5217\uff0cDESC \u8868\u793a\u964d\u5e8f\u6392\u5217\u3002</p> <p>\u6ce8\u610f</p> <p><code>ORDER BY</code> \u8bed\u53e5\u5fc5\u987b\u653e\u5728 <code>WHERE</code> \u4e4b\u540e\u3002</p>"},{"location":"code/sql/#limit","title":"<code>LIMIT</code>\uff1a\u53d6\u524d\u51e0\u6761\u6570\u636e","text":"<pre><code>SELECT *\nFROM customers\nLIMIT 3\n</code></pre> <ul> <li>\u9650\u5236\u8fd4\u56de\u7684\u7ed3\u679c\u6761\u6570\u3002\u6700\u7ec8\u53ea\u8fd4\u56de 3 \u6761\u6570\u636e\u3002</li> </ul> <pre><code>SELECT *\nFROM customers\nLIMIT 6, 3\n</code></pre> <ul> <li>\u5148\u8df3\u8fc7\u524d 6 \u6761\u6570\u636e\uff0c\u518d\u8fd4\u56de\u7b2c 7 \u81f3 9 \u6761\u6570\u636e\u3002</li> </ul>"},{"location":"code/sql/#_2","title":"\u8fde\u63a5","text":""},{"location":"code/sql/#inner-join","title":"<code>INNER JOIN</code>\uff1a\u5185\u8fde\u63a5","text":"<p><pre><code>SELECT c.customer_id, first_name, last_name\nFROM customers c\nJOIN orders o\n    ON c.customer_id = o.customer_id\n</code></pre> - <code>FROM customers c</code>\u662f\u7ed9<code>customers</code>\u8d77\u4e00\u4e2a\u522b\u540d<code>c</code>\uff0c\u4e4b\u540e\u5c31\u53ef\u4ee5\u7528<code>c</code>\u6765\u4ee3\u66ff<code>customers</code>\uff0c\u8d77\u5230\u7b80\u5316\u4ee3\u7801\u7684\u4f5c\u7528\u3002 - \u56e0\u4e3a\u5185\u8fde\u63a5\u7684\u903b\u8f91\u662f\u6309\u7167<code>c.customer_id = o.customer_id</code>\u8fdb\u884c\u8fde\u63a5\uff0c\u6240\u4ee5\u5f97\u5230\u7684\u8868\u6709\u4e24\u5217\u90fd\u662f<code>customer_id</code>\u3002\u8fd9\u4e2a\u65f6\u5019\uff0c\u5982\u679c\u6211\u4eec\u60f3<code>SELECT customer_id</code>\uff0c\u5c31\u5fc5\u987b\u6307\u5b9a<code>customer_id</code>\u662f\u6765\u81ea\u54ea\u4e2a\u8868\uff08\u5176\u5b9e\u6765\u81ea\u54ea\u4e2a\u8868\u90fd\u4e00\u6837\uff0c\u56e0\u4e3a\u672c\u6765\u5c31\u662f\u5185\u8fde\u63a5\u7684\uff0c\u6240\u4ee5\u7ed3\u679c\u4e2d\u7684<code>customer_id</code>\u5fc5\u7136\u4e00\u6837\uff09\u3002\u4f8b\u5982\u4e0a\u9762\u7684\u4ee3\u7801\u5c31\u6307\u5b9a\u6765\u81ea<code>c.customer_id</code>\u3002\u5982\u679c\u4e0d\u6307\u5b9a\uff0c\u5219\u4f1a\u62a5\u9519\u8bf4 ambiguous\u3002</p>"},{"location":"code/sql/#_3","title":"\u4ece\u4e0d\u540c\u7684\u6570\u636e\u5e93\u4e2d\u8de8\u8868\u8fde\u63a5","text":"<pre><code>SELECT *\nFROM customers c\nJOIN sql_inventory.product p\n    ON c.customer_id = o.customer_id\n</code></pre> <ul> <li>\u7531\u4e8e<code>product</code>\u5728<code>sql_inventory</code>\u6570\u636e\u5e93\uff0c\u6240\u4ee5<code>customers</code>\u548c<code>product</code>\u4e0d\u5728\u540c\u4e00\u4e2a\u6570\u636e\u5e93\uff0c\u5728\u5bf9\u5b83\u4eec\u8fdb\u884c\u8fde\u63a5\u65f6\u9700\u8981\u6307\u5b9a<code>product</code>\u5728<code>sql_inventory</code>\u6570\u636e\u5e93\u3002</li> <li>\u53ea\u9700\u8981\u6307\u5b9a\u90a3\u4e9b\u4e0d\u5728\u5f53\u524d\u6570\u636e\u5e93\u4e2d\u7684\u6570\u636e\u8868\u3002\u5982\u679c\u6570\u636e\u8868\u672c\u6765\u5c31\u5728\u5f53\u524d\u6570\u636e\u5e93\uff0c\u5219\u4e0d\u9700\u8981\u6307\u5b9a\u4e86\u3002</li> </ul>"},{"location":"code/sql/#_4","title":"\u5c06\u540c\u4e00\u5f20\u8868\u5f53\u4f5c\u4e24\u5f20\u8868\u8fdb\u884c\u8fde\u63a5\uff08\u81ea\u8eab\u8fde\u63a5\uff09","text":"<p>\u4e00\u5f20\u8868\u4e2d\u6709<code>\u5458\u5de5 ID</code>\u548c<code>\u5458\u5de5\u5bf9\u5e94\u7684\u7ecf\u7406</code>\uff0c\u6211\u4eec\u60f3\u627e\u5230\u5458\u5de5\u548c\u7ecf\u7406\u7684\u5bf9\u5e94\u5173\u7cfb\u3002</p> <pre><code>SELECT\n    e.employee_id,\n    e.first_name,\n    m.first_name AS manager\nFROM emploees e\nJOIN emploees m\n    ON e.reports_to = m.employee_id\n</code></pre> <ul> <li>\u53ef\u4ee5\u5c06\u540c\u4e00\u5f20\u8868\u8bbe\u7f6e\u591a\u4e2a\u522b\u540d\uff0c\u5f53\u6210\u591a\u4e2a\u8868\u6765\u4f7f\u7528\u3002</li> </ul>"},{"location":"code/sql/#outer-join","title":"<code>OUTER JOIN</code>\uff1a\u5916\u8fde\u63a5","text":"<ul> <li><code>JOIN</code>\u9ed8\u8ba4\u662f<code>INNER JOIN</code>\u3002</li> <li>\u6709\u4e24\u79cd\u7c7b\u578b\u7684<code>OUTER JOIN</code>\uff1a<code>LEFT JOIN</code>\u548c<code>RIGHT JOIN</code>\u3002</li> <li><code>LEFT JOIN</code>\u4f1a\u4fdd\u7559\u5de6\u8fb9\u7684\u8868\u7684\u6240\u6709\u6570\u636e\uff0c\u4e0d\u8bba\u540e\u9762\u7684\u8fde\u63a5\u914d\u5bf9\u662f\u5426\u6210\u529f\u3002</li> <li><code>RIGHT JOIN</code>\u4f1a\u4fdd\u7559\u53f3\u8fb9\u7684\u8868\u7684\u6240\u6709\u6570\u636e\uff0c\u4e0d\u8bba\u540e\u9762\u7684\u8fde\u63a5\u914d\u5bf9\u662f\u5426\u6210\u529f\u3002</li> <li><code>LEFT JOIN</code>\u7b49\u4ef7\u4e8e<code>LEFT OUTER JOIN</code>\uff0c\u4e2d\u95f4\u7684<code>OUTER</code>\u53ef\u4ee5\u7701\u7565\u4e0d\u5199\u3002</li> </ul> <pre><code>SELECT *\nFROM customers c\nLEFT JOIN orders o\nON c.customer_id = o.customer_id\n</code></pre> <ul> <li>\u56e0\u4e3a\u9605\u8bfb\u4ee3\u7801\u7684\u987a\u5e8f\u662f\u4ece\u4e0a\u5230\u4e0b\uff0c\u56e0\u6b64\u5efa\u8bae\u7528<code>LEFT JOIN</code>\uff0c\u8fd9\u6837\u53ef\u4ee5\u66f4\u5bb9\u6613\u7406\u89e3\u8fde\u63a5\u7684\u903b\u8f91\u3002</li> <li>\u5982\u679c\u7528<code>RIGHT JOIN</code>\uff0c\u5219\u9700\u8981\u5148\u60f3\u4e00\u4e0b<code>RIGHT JOIN</code>\u540e\u9762\u7684\u8868\u957f\u4ec0\u4e48\u6837\u5b50\uff0c\u518d\u60f3\u524d\u9762\u7684\u8868\uff0c\u8fd9\u6837\u6bd4\u8f83\u9ebb\u70e6\u3002</li> </ul>"},{"location":"code/sql/#using","title":"<code>USING</code>\uff1a\u5217\u540d\u76f8\u540c\u65f6\u53ea\u9700\u6307\u5b9a\u4e00\u4e2a\u5217\u540d","text":"<pre><code>SELECT *\nFROM customers c\nJOIN orders o\nUSING (customer_id)\n</code></pre> <p>\u7b49\u4ef7\u4e8e</p> <pre><code>SELECT *\nFROM customers c\nJOIN orders o\n    ON c.customer_id = o.customer_id\n</code></pre>"},{"location":"code/sql/#cross-join","title":"<code>CROSS JOIN</code>\uff1a\u4ea4\u53c9\u8fde\u63a5\uff0c\u4e5f\u53eb\u7b1b\u5361\u5c14\u4e58\u79ef","text":"<pre><code>SELECT *\nFROM colors\nCROSS JOIN sizes\n</code></pre> <ul> <li>\u82e5colors\u6709 3 \u884c\uff0csizes\u6709 4 \u884c\uff0c\u5219CROSS JOIN\u540e\u6709 12 \u884c\u3002</li> </ul>"},{"location":"code/sql/#union","title":"<code>UNION</code>\uff1a\u4e0a\u4e0b\u8fde\u63a5","text":"<p><pre><code>SELECT name, address\nFROM customers\nUNION\nSELECT name, address\nFROM clients\n</code></pre> - <code>UNION</code>\u5185\u90e8\u7684\u6bcf\u4e2a<code>SELECT</code>\u8bed\u53e5\u5fc5\u987b\u62e5\u6709\u76f8\u540c\u6570\u91cf\u7684\u5217\u3002\u5217\u4e5f\u5fc5\u987b\u62e5\u6709\u76f8\u4f3c\u7684\u6570\u636e\u7c7b\u578b\u3002\u540c\u65f6\uff0c\u6bcf\u4e2a<code>SELECT</code>\u8bed\u53e5\u4e2d\u7684\u5217\u7684\u987a\u5e8f\u5fc5\u987b\u76f8\u540c\u3002</p>"},{"location":"code/sql/#_5","title":"\u51fd\u6570","text":""},{"location":"code/sql/#_6","title":"\u805a\u5408\u51fd\u6570","text":"<ul> <li>avg(expr) \u2212 average value for rows within the group</li> <li>count(expr) \u2212 count of values for rows within the group</li> <li>max(expr) \u2212 maximum value within the group</li> <li>min(expr) \u2212 minimum value within the group</li> <li>sum(expr) \u2212 sum of values within the group</li> </ul>"},{"location":"code/sql/#_7","title":"\u63d0\u53d6\u65e5\u671f\u51fd\u6570","text":"<ul> <li>NOW()\uff1a \u83b7\u53d6\u5f53\u524d\u65f6\u95f4</li> <li>YEAR(): \u83b7\u53d6\u5e74\u4efd</li> <li>YEARWEEK(): \u83b7\u53d6\u5e74\u4efd\u548c\u5468 eg:201814</li> <li>MONTH(): \u83b7\u53d6\u6708\u4efd</li> <li>MONTHNAME(): \u83b7\u53d6\u6708\u4efd\u540d\u79f0 eg:April</li> <li>DAY(): \u83b7\u53d6\u5f53\u524d\u65f6\u95f4\u662f\u8be5\u6708\u7684\u7b2c\u51e0\u5929</li> <li>hour()\uff1a\u63d0\u53d6\u5f53\u524d\u5c0f\u65f6</li> <li>minute()\uff1a\u63d0\u53d6\u5f53\u524d\u5206\u949f</li> <li>second()\uff1a\u63d0\u53d6\u5f53\u524d\u79d2</li> <li>DAYNAME(): \u83b7\u53d6\u5f53\u524d\u65f6\u95f4\u662f\u661f\u671f\u51e0 eg:Monday</li> <li>DAYOFYEAR(): \u83b7\u53d6\u5f53\u524d\u65f6\u95f4\u662f\u8be5\u5e74\u7684\u7b2c\u51e0\u5929</li> <li>DAYOFMONTH(): \u83b7\u53d6\u5f53\u524d\u65f6\u95f4\u662f\u8be5\u6708\u7684\u7b2c\u51e0\u5929</li> <li>DAYOFWEEK(): \u83b7\u53d6\u5f53\u524d\u65f6\u95f4\u662f\u661f\u671f\u51e0\u7684\u6570\u5b57,1-7,1\u662f\u661f\u671f\u4e00</li> </ul>"},{"location":"code/sql/#_8","title":"\u5176\u4ed6\u65f6\u95f4\u7684\u51fd\u6570","text":"<ul> <li><code>DATE_FORMAT(now(),'%Y-%m-%d %H:%i:%s')</code></li> <li><code>str_to_date('2021-04-02 10:37:14', '%Y-%m-%d %H:%i:%s')</code></li> <li><code>SELECT EXTRACT(MONTH FROM '2017-05-15 10:37:14.123456');</code></li> <li><code>SELECT LAST_DAY('2016-02-01')</code>;-- 2016-02-29 (\u8fd4\u56de\u6708\u4efd\u4e2d\u6700\u540e\u4e00\u5929)</li> <li><code>SELECT DATE_ADD('2017-05-15 10:37:14.123456',INTERVAL 1 YEAR)</code>;-- \u8868\u793a\uff1a2018-05-15 10:37:14.123456</li> <li><code>SELECT DATE_SUB('2017-05-15 10:37:14.123456',INTERVAL 1 YEAR)</code>;-- \u8868\u793a\uff1a2016-05-15 10:37:14.123456</li> <li><code>SELECT TIME_TO_SEC('01:00:05')</code>; -- 3605</li> <li><code>SELECT SEC_TO_TIME(3605)</code>;-- 01:00:05</li> <li><code>SELECT MAKEDATE(2017,31)</code>;   -- '2017-01-31' </li> <li><code>SELECT MAKEDATE(2017,32)</code>;   -- '2017-02-01'</li> <li><code>SELECT MAKETIME(19,52,35)</code>;  -- '19:52:35'</li> <li><code>SELECT TIMESTAMPDIFF(MONTH, '2017-06-01', '2016-06-15')</code>; -- -11</li> </ul>"},{"location":"code/sql/#_9","title":"\u5904\u7406\u7a7a\u503c\u6709\u5173\u7684\u51fd\u6570","text":"<ul> <li><code>ISNULL()</code>: \u5224\u65ad\u4e00\u4e2a\u503c\u662f\u5426\u4e3aNULL,\u5982\u679c\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a NULL,\u5219\u8fd4\u56de\u7b2c\u4e8c\u4e2a\u53c2\u6570\u7684\u503c\u3002 eg:`SELECT column_name, ISNULL(column_name, 0) AS replaced_value FROM table_name;</li> <li><code>COALESCE()</code>: \u4e0eISNULL\u51fd\u6570\u4e0d\u540c\u7684\u662f,COALESCE\u51fd\u6570\u53ef\u4ee5\u540c\u65f6\u66ff\u6362\u591a\u4e2a\u5217\u7684\u503c\u3002 eg: <code>SELECT COALESCE(column1, 0) AS replaced_column1, COALESCE(column2, 0) AS replaced_column2 FROM table_name;</code></li> <li>\u4f7f\u7528CASE\u8bed\u53e5\u66ff\u6362\u7a7a\u767d(null)\u503c\u4e3a0: eg:<code>SELECT     column_name,     CASE WHEN column_name IS NULL THEN 0 ELSE column_name END AS replaced_value FROM table_name;</code></li> </ul>"},{"location":"code/sql/#_10","title":"\u5176\u4ed6","text":"<ul> <li>if(\u5224\u65ad, 1, 0)</li> </ul>"},{"location":"code/sql/#_11","title":"\u63d2\u5165\u6570\u636e","text":""},{"location":"code/sql/#_12","title":"\u6570\u636e\u5c5e\u6027","text":"<ul> <li>\u70b9\u51fb\u56fe\u4e2d\u7684\u5de5\u5177\u56fe\u6807\uff0c\u67e5\u770b\u6bcf\u5217\u6570\u636e\u7684\u5c5e\u6027\u3002</li> </ul> <ul> <li><code>PK</code>\uff0cPrimary Key\uff1a\u4e3b\u952e\uff0c\u552f\u4e00\u786e\u5b9a\u4e00\u4e2a\u6570\u636e\u3002\u4e3b\u952e\u53ef\u4ee5\u7531\u591a\u4e2a\u53d8\u91cf\u7ec4\u6210\u3002</li> <li><code>NN</code>\uff0cNot Null\uff1a\u662f\u5426\u5fc5\u987b\u975e\u7a7a\u3002\u5982\u679c\u6253\u52fe\uff0c\u5219\u8bf4\u660e\u8fd9\u4e2a\u53d8\u91cf\u4e0d\u80fd\u662f\u7a7a\u503c\u3002</li> <li><code>AI</code>\uff0cAuto Incremental\uff1a\u81ea\u52a8\u9012\u589e\u3002\u5f53\u6709\u65b0\u7684\u6570\u636e\u63d2\u5165\u65f6\uff0c\u81ea\u52a8\u628a\u8fd9\u4e2a\u53d8\u91cf\u52a0 1\u3002\u8fd9\u5728\u4e3b\u952e\u4e0a\u7ecf\u5e38\u7528\uff0c\u901a\u5e38 ID \u5c31\u662f\u9010\u6e10\u52a0 1 \u7684\u3002</li> <li><code>Default</code>\uff1a\u82e5\u4e0d\u6307\u5b9a\uff0c\u5219\u9ed8\u8ba4\u503c\u662f\u591a\u5c11\u3002</li> <li><code>Datatype</code>\u4e2d\u7684<code>VARCHAR(50)</code>\u662f Variable Characters\uff0c\u610f\u601d\u662f\u6700\u591a 50 \u4e2a\u5b57\u7b26\u7684\u5b57\u7b26\u4e32\u3002\u5982\u679c\u7528<code>CHAR(50)</code>\u5219\u8bf4\u660e\u5fc5\u987b\u662f 50 \u4e2a\u5b57\u7b26\u7684\u5b57\u7b26\u4e32\uff0c\u5982\u679c\u4e0d\u8db3 50 \u4e2a\uff0c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u5728\u540e\u9762\u8865\u4e0a\u7a7a\u683c\uff0c\u8fd9\u6709\u65f6\u662f\u5f88\u8017\u8d39\u7a7a\u95f4\u7684\u3002</li> <li><code>Datatype</code>\u4e2d\u7684<code>DECIMAL</code>\u4e0d\u5b58\u5728\u7cbe\u5ea6\u635f\u5931\uff0c\u6570\u636e\u7c7b\u578b<code>DECIMAL(p,s)</code>\u9700\u8981\u5206\u522b\u6307\u5b9a\u5c0f\u6570\u7684\u6700\u5927\u4f4d\u6570\uff08p\uff09\u548c\u5c0f\u6570\u4f4d\u7684\u6570\u91cf\uff08s\uff09\uff1a</li> <li>\u4f8b\u5982<code>DECIMAL(4,2)</code>\u4ee3\u8868\u5c0f\u6570\u70b9\u5de6\u53f3\u4e24\u8fb9\u6240\u6709\u7684\u6570\u5b57\u4e00\u5171\u6700\u591a 4 \u4e2a\uff0c\u5c0f\u6570\u70b9\u53f3\u8fb9\u4fdd\u7559 2 \u4e2a\u6570\u5b57\u3002</li> <li>p (precision) \uff1a\u6307\u5b9a\u5c0f\u6570\u7684\u6700\u5927\u4f4d\u6570\uff0c\u5c0f\u6570\u70b9\u7684\u5de6\u4fa7\u548c\u53f3\u4fa7\u7684\u6570\u5b57\u7684\u603b\u6570\u91cf\u4e0d\u80fd\u8d85\u8fc7 p\uff0cp \u7684\u53d6\u503c\u8303\u56f4\u662f\u4ece 1 \u5230 38\uff0c\u9ed8\u8ba4\u503c\u4e3a 18\u3002</li> <li>s (scale)\uff1a\u6307\u5b9a\u5728\u5c0f\u6570\u70b9\u53f3\u4fa7\u7684\u5c0f\u6570\u4f4d\u6570\uff0cp-s \u662f\u5c0f\u6570\u70b9\u5de6\u8fb9\u7684\u6700\u5927\u4f4d\u6570\u3002s \u5fc5\u987b\u662f\u4ece 0 \u5230 p \u7684\u503c\uff0c\u53ea\u6709\u5728\u6307\u5b9a\u4e86\u7cbe\u5ea6\u7684\u60c5\u51b5\u4e0b\u624d\u80fd\u6307\u5b9a s\uff0cs \u7684\u9ed8\u8ba4\u503c\u662f 0\uff0c\u56e0\u6b64\uff0c0 &lt;= s &lt;= p\u3002</li> </ul>"},{"location":"code/sql/#insert","title":"<code>INSERT</code>\uff1a\u63d2\u5165\u6570\u636e","text":"<pre><code>INSERT INTO customers(first_name, phone, points)\nVALUES ('Mosh', NULL, DEFAULT)\n</code></pre> <ul> <li><code>NULL</code>\u4ee3\u8868\u7a7a\u503c\u3002</li> <li><code>DEFAULT</code>\u4ee3\u8868\u9ed8\u8ba4\u503c\uff0c\u9ed8\u8ba4\u503c\u5177\u4f53\u662f\u591a\u5c11\uff0c\u53ef\u4ee5\u5728\u4e0a\u56fe\u4e2d\u67e5\u770b\u3002</li> </ul>"},{"location":"code/sql/#_13","title":"\u4e00\u6b21\u63d2\u5165\u591a\u884c","text":"<pre><code>INSERT INTO customers(first_name, phone, points)\nVALUES\n('Mosh', NULL, DEFAULT),\n('Bob', '1234', 10)\n</code></pre>"},{"location":"code/sql/#_14","title":"\u5c06\u6574\u4e2a\u8868\u63d2\u5165\u5230\u53e6\u5916\u7684\u8868","text":"<pre><code>CREATE TABLE orders_archived AS\nSELECT *\nFROM order\n</code></pre> <ul> <li>\u5c06<code>order</code>\u8868\u683c\u6574\u4e2a\u5730\u590d\u5236\u5230\u65b0\u8868\u4e2d\uff0c\u6210\u4e3a<code>orders_archived</code>\u3002</li> <li>\u65b0\u8868\u4e0d\u4f1a\u8bb0\u5f55\u539f\u8868\u683c\u7684\u4e3b\u952e\u7b49\u4fe1\u606f\u3002</li> </ul>"},{"location":"code/sql/#_15","title":"\u66f4\u65b0\u6570\u636e","text":"<pre><code>UPDATE table_name\nSET column_1 = 1, column_2 = 2\nWHERE id IN (1, 2, 3)\n</code></pre> <ul> <li>\u7528<code>WHERE</code>\u7b5b\u9009\u51fa\u60f3\u8981\u7b5b\u9009\u7684\u6570\u636e\u540e\uff0c\u7528<code>SET</code>\u66f4\u65b0\u60f3\u8981\u66f4\u65b0\u7684\u5217\u6570\u636e\u3002</li> </ul>"},{"location":"code/sql/#_16","title":"\u5220\u9664\u6570\u636e","text":"<pre><code>DELETE FROM table_name\nWHERE ID in (1, 2, 3)\n</code></pre> <ul> <li>\u7528<code>WHERE</code>\u7b5b\u9009\u51fa\u60f3\u8981\u7b5b\u9009\u7684\u6570\u636e\u540e\uff0c\u7528<code>DELETE FROM</code>\u5220\u9664\u60f3\u8981\u5220\u9664\u7684\u4e00\u6574\u884c\u6570\u636e\u3002</li> </ul>"},{"location":"code/time_series/","title":"Time series","text":""},{"location":"code/time_series/#pivot_table","title":"pivot_table","text":"<p><code>pandas</code> \u5305\u4e2d\u7684 <code>pivot_table</code> \u51fd\u6570\u662f\u4e00\u4e2a\u975e\u5e38\u5f3a\u5927\u548c\u7075\u6d3b\u7684\u5de5\u5177\uff0c\u7528\u4e8e\u5728 DataFrame \u4e0a\u6267\u884c\u6570\u636e\u7684\u900f\u89c6\u548c\u6c47\u603b\u64cd\u4f5c\u3002\u5b83\u901a\u5e38\u7528\u4e8e\u6570\u636e\u805a\u5408\u548c\u91cd\u5851\uff0c\u53ef\u4ee5\u6839\u636e\u6307\u5b9a\u7684\u884c\u548c\u5217\u8fdb\u884c\u6570\u636e\u7684\u5206\u7ec4\u3001\u6c47\u603b\uff0c\u5e76\u5e94\u7528\u805a\u5408\u51fd\u6570\uff08\u5982\u6c42\u548c\u3001\u5e73\u5747\u503c\u7b49\uff09\u3002</p>"},{"location":"code/time_series/#pivot_table_1","title":"<code>pivot_table</code> \u51fd\u6570\u7684\u4e3b\u8981\u7528\u9014","text":"<ul> <li>\u900f\u89c6\u8868\uff1a\u7c7b\u4f3c\u4e8e Excel \u4e2d\u7684\u900f\u89c6\u8868\uff0c<code>pivot_table</code> \u7528\u4e8e\u6839\u636e\u67d0\u4e9b\u7ef4\u5ea6\u8fdb\u884c\u6570\u636e\u7684\u5206\u7ec4\u3001\u805a\u5408\u548c\u91cd\u65b0\u6392\u5217\u3002</li> <li>\u6570\u636e\u805a\u5408\uff1a\u5bf9\u6570\u636e\u8fdb\u884c\u6c47\u603b\u64cd\u4f5c\uff0c\u5982\u6c42\u548c\u3001\u5e73\u5747\u3001\u8ba1\u6570\u7b49\u3002</li> </ul>"},{"location":"code/time_series/#_1","title":"\u57fa\u672c\u8bed\u6cd5","text":"<pre><code>pandas.pivot_table(data, values=None, index=None, columns=None, aggfunc='mean', fill_value=None, margins=False, margins_name='All', dropna=True, observed=False)\n</code></pre>"},{"location":"code/time_series/#_2","title":"\u4e3b\u8981\u53c2\u6570\u8bf4\u660e","text":"<ol> <li> <p>data\uff1a<code>DataFrame</code>\uff0c\u9700\u8981\u8fdb\u884c\u900f\u89c6\u64cd\u4f5c\u7684\u6570\u636e\u96c6\u3002</p> </li> <li> <p>values\uff1a\u6307\u5b9a\u9700\u8981\u6c47\u603b\u7684\u5217\uff0c\u901a\u5e38\u662f\u6570\u503c\u5217\u3002\u53ef\u4ee5\u4f20\u5165\u4e00\u4e2a\u6216\u591a\u4e2a\u5217\u540d\uff08<code>list</code>\uff09\u3002</p> </li> <li> <p>index\uff1a\u7528\u4e8e\u5206\u7ec4\u7684\u884c\u6807\u7b7e\uff08\u884c\u7d22\u5f15\uff09\u3002\u53ef\u4ee5\u4f20\u5165\u4e00\u4e2a\u6216\u591a\u4e2a\u5217\u540d\uff08<code>list</code>\uff09\u3002</p> </li> <li> <p>columns\uff1a\u7528\u4e8e\u5206\u7ec4\u7684\u5217\u6807\u7b7e\uff08\u5217\u7d22\u5f15\uff09\u3002\u53ef\u4ee5\u4f20\u5165\u4e00\u4e2a\u6216\u591a\u4e2a\u5217\u540d\uff08<code>list</code>\uff09\u3002</p> </li> <li> <p>aggfunc\uff1a\u6307\u5b9a\u7528\u4e8e\u6570\u636e\u805a\u5408\u7684\u51fd\u6570\uff0c\u9ed8\u8ba4\u662f <code>'mean'</code>\uff0c\u5373\u6c42\u5747\u503c\u3002\u53ef\u4ee5\u4f20\u5165\u5b57\u7b26\u4e32\u51fd\u6570\u540d\u79f0\uff08\u5982 <code>'sum'</code>\u3001<code>'count'</code> \u7b49\uff09\u6216\u8005\u51fd\u6570\uff08\u5982 <code>np.sum</code>\u3001<code>np.mean</code> \u7b49\uff09\u3002</p> </li> <li> <p>fill_value\uff1a\u5728\u7ed3\u679c\u4e2d\u7528\u6765\u66ff\u6362 <code>NaN</code> \u7684\u503c\uff0c\u901a\u5e38\u7528\u4e8e\u586b\u5145\u7f3a\u5931\u503c\u3002</p> </li> <li> <p>margins\uff1a\u5e03\u5c14\u503c\uff0c\u662f\u5426\u6dfb\u52a0\u884c\u548c\u5217\u7684\u6c47\u603b\u7edf\u8ba1\uff08\u7c7b\u4f3c\u4e8e Excel \u4e2d\u7684 \"\u603b\u8ba1\"\uff09\u3002</p> </li> <li> <p>margins_name\uff1a\u8bbe\u7f6e\u6c47\u603b\u7edf\u8ba1\u884c/\u5217\u7684\u540d\u79f0\uff0c\u9ed8\u8ba4\u4e3a <code>'All'</code>\u3002</p> </li> <li> <p>dropna\uff1a\u662f\u5426\u4e22\u5f03\u542b\u6709 <code>NaN</code> \u503c\u7684\u5217\u3002</p> </li> <li> <p>observed\uff1a\u4ec5\u5728\u5206\u7ec4\u662f <code>Categorical</code> \u7c7b\u578b\u65f6\u6709\u7528\uff0c\u8868\u793a\u662f\u5426\u53ea\u663e\u793a\u5728\u6570\u636e\u4e2d\u89c2\u5bdf\u5230\u7684\u5206\u7c7b\u3002</p> </li> </ol>"},{"location":"code/time_series/#_3","title":"\u793a\u4f8b","text":"<p>\u5047\u8bbe\u6709\u4ee5\u4e0b\u6570\u636e\u96c6 <code>df</code>\uff1a</p> <pre><code>import pandas as pd\n\ndata = {\n    'Category': ['A', 'A', 'B', 'B', 'C', 'C'],\n    'Subcategory': ['X', 'Y', 'X', 'Y', 'X', 'Y'],\n    'Sales': [100, 150, 200, 250, 300, 350],\n    'Profit': [20, 30, 40, 50, 60, 70]\n}\n\ndf = pd.DataFrame(data)\nprint(df)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>  Category Subcategory  Sales  Profit\n0        A           X    100      20\n1        A           Y    150      30\n2        B           X    200      40\n3        B           Y    250      50\n4        C           X    300      60\n5        C           Y    350      70\n</code></pre>"},{"location":"code/time_series/#1","title":"1. \u57fa\u672c\u4f7f\u7528","text":"<p>\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u900f\u89c6\u8868\uff0c\u6c47\u603b\u6bcf\u4e2a <code>Category</code> \u548c <code>Subcategory</code> \u7684\u9500\u552e\u603b\u989d\u3002</p> <pre><code>pivot = pd.pivot_table(df, values='Sales', index='Category', columns='Subcategory', aggfunc='sum')\nprint(pivot)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>Subcategory     X      Y\nCategory               \nA             100    150\nB             200    250\nC             300    350\n</code></pre> <p>\u8fd9\u91cc\uff0c<code>Category</code> \u662f\u884c\u7d22\u5f15\uff0c<code>Subcategory</code> \u662f\u5217\u7d22\u5f15\uff0c<code>Sales</code> \u5217\u88ab\u6c47\u603b\u4e3a\u9500\u552e\u603b\u989d\u3002</p>"},{"location":"code/time_series/#2","title":"2. \u4f7f\u7528\u591a\u4e2a\u805a\u5408\u51fd\u6570","text":"<p>\u4f60\u53ef\u4ee5\u4e3a <code>aggfunc</code> \u53c2\u6570\u4f20\u5165\u591a\u4e2a\u805a\u5408\u51fd\u6570\u3002\u4f8b\u5982\uff0c\u540c\u65f6\u8ba1\u7b97\u9500\u552e\u7684\u603b\u548c\u548c\u5747\u503c\uff1a</p> <pre><code>pivot = pd.pivot_table(df, values='Sales', index='Category', columns='Subcategory', aggfunc=['sum', 'mean'])\nprint(pivot)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>            sum         mean      \nSubcategory   X    Y       X      Y\nCategory                            \nA           100  150    100.0  150.0\nB           200  250    200.0  250.0\nC           300  350    300.0  350.0\n</code></pre> <p>\u73b0\u5728\u8868\u4e2d\u663e\u793a\u4e86\u6bcf\u4e2a <code>Category</code> \u548c <code>Subcategory</code> \u7684\u9500\u552e\u603b\u548c\u548c\u5747\u503c\u3002</p>"},{"location":"code/time_series/#3","title":"3. \u540c\u65f6\u805a\u5408\u591a\u4e2a\u5217","text":"<p>\u53ef\u4ee5\u5bf9 <code>Sales</code> \u548c <code>Profit</code> \u540c\u65f6\u8fdb\u884c\u805a\u5408\uff1a</p> <pre><code>pivot = pd.pivot_table(df, values=['Sales', 'Profit'], index='Category', aggfunc='sum')\nprint(pivot)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>          Profit  Sales\nCategory                \nA              50    250\nB              90    450\nC             130    650\n</code></pre> <p>\u8fd9\u91cc\uff0c<code>Sales</code> \u548c <code>Profit</code> \u4e24\u5217\u88ab\u5206\u522b\u6c47\u603b\u4e3a\u6bcf\u4e2a\u7c7b\u522b\u7684\u603b\u548c\u3002</p>"},{"location":"code/time_series/#4-fill_value","title":"4. \u586b\u5145\u7f3a\u5931\u503c\uff08<code>fill_value</code> \u53c2\u6570\uff09","text":"<p>\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u900f\u89c6\u8868\u4e2d\u53ef\u80fd\u4f1a\u51fa\u73b0 <code>NaN</code> \u503c\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528 <code>fill_value</code> \u53c2\u6570\u6765\u586b\u5145\u8fd9\u4e9b\u7f3a\u5931\u503c\u3002\u4f8b\u5982\uff0c\u5c06\u7f3a\u5931\u503c\u586b\u5145\u4e3a 0\uff1a</p> <pre><code>pivot = pd.pivot_table(df, values='Sales', index='Category', columns='Subcategory', aggfunc='sum', fill_value=0)\nprint(pivot)\n</code></pre>"},{"location":"code/time_series/#5-margins","title":"5. \u6dfb\u52a0\u603b\u8ba1\u884c/\u5217\uff08<code>margins</code> \u53c2\u6570\uff09","text":"<p>\u4f60\u53ef\u4ee5\u6dfb\u52a0\u603b\u8ba1\u884c\u548c\u5217\u6765\u663e\u793a\u5404\u7ec4\u7684\u6c47\u603b\u7edf\u8ba1\uff1a</p> <pre><code>pivot = pd.pivot_table(df, values='Sales', index='Category', columns='Subcategory', aggfunc='sum', margins=True, margins_name='Total')\nprint(pivot)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>Subcategory     X      Y  Total\nCategory                         \nA             100    150    250\nB             200    250    450\nC             300    350    650\nTotal         600    750   1350\n</code></pre> <p><code>margins=True</code> \u4f1a\u6dfb\u52a0\u4e00\u884c\u548c\u4e00\u5217\u6765\u663e\u793a\u603b\u8ba1\u6c47\u603b\u503c\uff0c<code>margins_name</code> \u53c2\u6570\u7528\u4e8e\u81ea\u5b9a\u4e49\u603b\u8ba1\u884c\u7684\u540d\u79f0\u3002</p>"},{"location":"code/time_series/#_4","title":"\u603b\u7ed3","text":"<p><code>pivot_table</code> \u662f\u4e00\u4e2a\u7075\u6d3b\u7684\u5de5\u5177\uff0c\u9002\u7528\u4e8e\u591a\u7ef4\u5ea6\u7684\u6570\u636e\u805a\u5408\u548c\u91cd\u5851\u3002\u5b83\u5141\u8bb8\u4f60\u6839\u636e\u884c\u548c\u5217\u8fdb\u884c\u5206\u7ec4\uff0c\u5e76\u4f7f\u7528\u591a\u79cd\u805a\u5408\u51fd\u6570\u6765\u5904\u7406\u6570\u636e\u3002\u6b64\u5916\uff0c\u5b83\u8fd8\u652f\u6301\u586b\u5145\u7f3a\u5931\u503c\u3001\u6dfb\u52a0\u6c47\u603b\u884c\u548c\u5217\u7b49\u529f\u80fd\uff0c\u662f\u6570\u636e\u5206\u6790\u548c\u5904\u7406\u8fc7\u7a0b\u4e2d\u975e\u5e38\u5b9e\u7528\u7684\u5de5\u5177\u3002</p>"},{"location":"code/time_series/#rolling","title":"Rolling\u51fd\u6570\uff1a","text":"<p>\u5728 <code>pandas</code> \u5305\u4e2d\uff0c<code>rolling</code> \u51fd\u6570\u662f\u7528\u4e8e\u8fdb\u884c\u6eda\u52a8\u7a97\u53e3\u8ba1\u7b97\u7684\u5f3a\u5927\u5de5\u5177\u3002\u5b83\u53ef\u4ee5\u7528\u4e8e\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u6216\u4efb\u4f55\u6309\u987a\u5e8f\u6392\u5217\u7684\u6570\u636e\u96c6\uff0c\u4ee5\u4fbf\u5728\u6570\u636e\u4e0a\u8fdb\u884c\u79fb\u52a8\u7684\u7edf\u8ba1\u8fd0\u7b97\uff0c\u6bd4\u5982\u8ba1\u7b97\u79fb\u52a8\u5e73\u5747\u3001\u79fb\u52a8\u6807\u51c6\u5dee\u3001\u79fb\u52a8\u603b\u548c\u7b49\u3002</p>"},{"location":"code/time_series/#_5","title":"\u57fa\u672c\u6982\u5ff5","text":"<p><code>rolling</code> \u51fd\u6570\u5141\u8bb8\u4f60\u5b9a\u4e49\u4e00\u4e2a\u7a97\u53e3\uff08\u5373\u89c2\u5bdf\u7684\u884c\u6570\uff09\uff0c\u5e76\u5728\u8fd9\u4e2a\u7a97\u53e3\u5185\u8fdb\u884c\u805a\u5408\u6216\u8ba1\u7b97\u3002\u7a97\u53e3\u53ef\u4ee5\u662f\u56fa\u5b9a\u5927\u5c0f\u7684\uff0c\u4e5f\u53ef\u4ee5\u662f\u6839\u636e\u65f6\u95f4\u6233\u52a8\u6001\u8c03\u6574\u7684\u3002</p>"},{"location":"code/time_series/#_6","title":"\u57fa\u672c\u8bed\u6cd5","text":"<pre><code>DataFrame.rolling(window, min_periods=1, center=False, win_type=None, on=None, axis=0, method='single')\n</code></pre>"},{"location":"code/time_series/#_7","title":"\u4e3b\u8981\u53c2\u6570\u8bf4\u660e","text":"<ol> <li> <p>window\uff1a\u7a97\u53e3\u7684\u5927\u5c0f\uff0c\u6307\u5b9a\u8981\u8003\u8651\u7684\u89c2\u5bdf\u503c\u7684\u6570\u91cf\uff0c\u53ef\u4ee5\u662f\u6574\u6570\uff08\u8868\u793a\u56fa\u5b9a\u6570\u91cf\u7684\u884c\uff09\u6216\u65f6\u95f4\u5b57\u7b26\u4e32\uff08\u5982 <code>'5D'</code> \u8868\u793a\u8fc7\u53bb 5 \u5929\uff09\u3002</p> </li> <li> <p>min_periods\uff1a\u7a97\u53e3\u5185\u9700\u8981\u7684\u6700\u5c0f\u975e\u7a7a\u89c2\u6d4b\u503c\u6570\uff0c\u9ed8\u8ba4\u4e3a 1\u3002\u5982\u679c\u7a97\u53e3\u5185\u7684\u6709\u6548\u89c2\u6d4b\u503c\u5c11\u4e8e\u8fd9\u4e2a\u6570\uff0c\u5c06\u8fd4\u56de <code>NaN</code>\u3002</p> </li> <li> <p>center\uff1a\u5e03\u5c14\u503c\uff0c\u6307\u5b9a\u7a97\u53e3\u662f\u5426\u5c45\u4e2d\u3002\u5982\u679c\u4e3a <code>True</code>\uff0c\u7a97\u53e3\u5c06\u4ee5\u5f53\u524d\u884c\u4f5c\u4e3a\u4e2d\u5fc3\uff1b\u5982\u679c\u4e3a <code>False</code>\uff08\u9ed8\u8ba4\uff09\uff0c\u7a97\u53e3\u5411\u53f3\u5bf9\u9f50\u3002</p> </li> <li> <p>win_type\uff1a\u7a97\u53e3\u7c7b\u578b\uff0c\u6307\u5b9a\u7a97\u53e3\u7684\u6743\u91cd\uff08\u5982 <code>boxcar</code>\u3001<code>triang</code>\u3001<code>blackman</code> \u7b49\uff09\u3002</p> </li> <li> <p>on\uff1a\u7528\u4e8e\u65f6\u95f4\u5e8f\u5217\u7684\u5217\uff0c\u9ed8\u8ba4\u4e3a <code>None</code>\u3002</p> </li> <li> <p>axis\uff1a\u7528\u4e8e\u6307\u5b9a\u6eda\u52a8\u64cd\u4f5c\u7684\u8f74\uff0c\u9ed8\u8ba4\u4e3a 0\uff08\u884c\uff09\u3002</p> </li> <li> <p>method\uff1a\u6307\u5b9a\u7a97\u53e3\u7684\u8ba1\u7b97\u65b9\u6cd5\uff0c\u9ed8\u8ba4\u4e3a <code>'single'</code>\uff08\u5355\u6b21\u8ba1\u7b97\uff09\u3002</p> </li> </ol>"},{"location":"code/time_series/#_8","title":"\u793a\u4f8b","text":"<p>\u5047\u8bbe\u6211\u4eec\u6709\u4ee5\u4e0b\u65f6\u95f4\u5e8f\u5217\u6570\u636e\uff1a</p> <pre><code>import pandas as pd\n\n# \u521b\u5efa\u65f6\u95f4\u5e8f\u5217\u6570\u636e\ndata = {\n    'date': pd.date_range(start='2023-01-01', periods=10),\n    'value': [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]\n}\n\ndf = pd.DataFrame(data).set_index('date')\nprint(df)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>            value\ndate             \n2023-01-01     10\n2023-01-02     20\n2023-01-03     30\n2023-01-04     40\n2023-01-05     50\n2023-01-06     60\n2023-01-07     70\n2023-01-08     80\n2023-01-09     90\n2023-01-10    100\n</code></pre>"},{"location":"code/time_series/#1_1","title":"1. \u8ba1\u7b97\u79fb\u52a8\u5e73\u5747","text":"<p>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 <code>rolling</code> \u6765\u8ba1\u7b97 3 \u5929\u7684\u79fb\u52a8\u5e73\u5747\uff1a</p> <pre><code>rolling_mean = df['value'].rolling(window=3).mean()\nprint(rolling_mean)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>date\n2023-01-01     NaN\n2023-01-02     NaN\n2023-01-03    20.0\n2023-01-04    30.0\n2023-01-05    40.0\n2023-01-06    50.0\n2023-01-07    60.0\n2023-01-08    70.0\n2023-01-09    80.0\n2023-01-10    90.0\nName: value, dtype: float64\n</code></pre> <p>\u524d\u4e24\u5929\u7684\u7ed3\u679c\u4e3a <code>NaN</code>\uff0c\u56e0\u4e3a\u6ca1\u6709\u8db3\u591f\u7684\u6570\u636e\u6765\u8ba1\u7b97\u79fb\u52a8\u5e73\u5747\u3002</p>"},{"location":"code/time_series/#2_1","title":"2. \u8ba1\u7b97\u79fb\u52a8\u603b\u548c","text":"<p>\u540c\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97 4 \u5929\u7684\u79fb\u52a8\u603b\u548c\uff1a</p> <pre><code>rolling_sum = df['value'].rolling(window=4).sum()\nprint(rolling_sum)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>date\n2023-01-01     NaN\n2023-01-02     NaN\n2023-01-03     NaN\n2023-01-04    100.0\n2023-01-05    140.0\n2023-01-06    180.0\n2023-01-07    220.0\n2023-01-08    260.0\n2023-01-09    300.0\n2023-01-10    340.0\nName: value, dtype: float64\n</code></pre>"},{"location":"code/time_series/#3-min_periods","title":"3. \u4f7f\u7528 <code>min_periods</code>","text":"<p>\u53ef\u4ee5\u8bbe\u7f6e <code>min_periods</code> \u53c2\u6570\u4ee5\u6539\u53d8\u8ba1\u7b97\u65f6\u9700\u8981\u7684\u6700\u5c0f\u89c2\u6d4b\u503c\u6570\u3002\u4f8b\u5982\uff0c\u8bbe\u5b9a <code>min_periods=1</code>\uff1a</p> <pre><code>rolling_mean_min = df['value'].rolling(window=3, min_periods=1).mean()\nprint(rolling_mean_min)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>date\n2023-01-01    10.0\n2023-01-02    15.0\n2023-01-03    20.0\n2023-01-04    30.0\n2023-01-05    40.0\n2023-01-06    50.0\n2023-01-07    60.0\n2023-01-08    70.0\n2023-01-09    80.0\n2023-01-10    90.0\nName: value, dtype: float64\n</code></pre>"},{"location":"code/time_series/#4-center","title":"4. \u4f7f\u7528 <code>center</code>","text":"<p>\u4f7f\u7528 <code>center=True</code> \u5c06\u7a97\u53e3\u5c45\u4e2d\u5bf9\u9f50\uff1a</p> <pre><code>rolling_mean_centered = df['value'].rolling(window=3, center=True).mean()\nprint(rolling_mean_centered)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>date\n2023-01-01    15.0\n2023-01-02    20.0\n2023-01-03    30.0\n2023-01-04    40.0\n2023-01-05    50.0\n2023-01-06    60.0\n2023-01-07    70.0\n2023-01-08    80.0\n2023-01-09    90.0\n2023-01-10    95.0\nName: value, dtype: float64\n</code></pre>"},{"location":"code/time_series/#5","title":"5. \u4f7f\u7528\u4e0d\u540c\u7684\u805a\u5408\u51fd\u6570","text":"<p>\u9664\u4e86 <code>mean</code> \u548c <code>sum</code>\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u805a\u5408\u51fd\u6570\uff0c\u4f8b\u5982\u8ba1\u7b97\u79fb\u52a8\u6807\u51c6\u5dee\uff1a</p> <pre><code>rolling_std = df['value'].rolling(window=3).std()\nprint(rolling_std)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>date\n2023-01-01     NaN\n2023-01-02     NaN\n2023-01-03    10.0\n2023-01-04    10.0\n2023-01-05    10.0\n2023-01-06    10.0\n2023-01-07    10.0\n2023-01-08    10.0\n2023-01-09    10.0\n2023-01-10    10.0\nName: value, dtype: float64\n</code></pre>"},{"location":"code/time_series/#6","title":"6. \u4f7f\u7528\u81ea\u5b9a\u4e49\u7a97\u53e3","text":"<p>\u53ef\u4ee5\u4f7f\u7528 <code>win_type</code> \u53c2\u6570\u5b9a\u4e49\u7a97\u53e3\u7684\u7c7b\u578b\uff0c\u4f8b\u5982\u4f7f\u7528\u6c49\u660e\u7a97\u53e3\uff08Hamming window\uff09\uff1a</p> <pre><code>rolling_hamming = df['value'].rolling(window=3, win_type='hamming').mean()\nprint(rolling_hamming)\n</code></pre>"},{"location":"code/time_series/#_9","title":"\u603b\u7ed3","text":"<p><code>rolling</code> \u51fd\u6570\u662f <code>pandas</code> \u4e2d\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684\u5de5\u5177\uff0c\u9002\u7528\u4e8e\u65f6\u95f4\u5e8f\u5217\u5206\u6790\u548c\u6570\u636e\u6d41\u5206\u6790\u3002\u5b83\u53ef\u4ee5\u8f7b\u677e\u5b9e\u73b0\u6eda\u52a8\u7a97\u53e3\u7684\u805a\u5408\u8ba1\u7b97\uff0c\u5e2e\u52a9\u7528\u6237\u66f4\u597d\u5730\u7406\u89e3\u6570\u636e\u7684\u52a8\u6001\u53d8\u5316\u548c\u8d8b\u52bf\u3002\u901a\u8fc7\u8bbe\u7f6e\u4e0d\u540c\u7684\u7a97\u53e3\u5927\u5c0f\u3001\u805a\u5408\u51fd\u6570\u548c\u53c2\u6570\uff0c\u53ef\u4ee5\u7075\u6d3b\u5730\u6ee1\u8db3\u4e0d\u540c\u7684\u5206\u6790\u9700\u6c42\u3002</p>"},{"location":"code/%E6%89%A9%E6%95%A3%E6%A8%A1%E5%9E%8B/","title":"\u6269\u6563\u6a21\u578b","text":"<p>\u6269\u6563\u6a21\u578bMLAPP</p> <p>\u7efc\u8ff0</p>"},{"location":"xiaolv/","title":"\u6548\u7387 :","text":"<p>\u6211\u7684\u6548\u7387\u5c31\u662f\u6ca1\u6709\u6548\u7387</p>"}]}